{
    "id": "pylint-dev__pylint-7080",
    "repo_name": "testbed/pylint-dev__pylint__2.15",
    "task_id": 3000994247091962162,
    "title": "`--recursive=y` ignores `ignore-paths`",
    "body": "### Bug description\r\n\r\nWhen running recursively, it seems `ignore-paths` in my settings in pyproject.toml is completely ignored\r\n\r\n### Configuration\r\n\r\n```ini\r\n[tool.pylint.MASTER]\r\nignore-paths = [\r\n  # Auto generated\r\n  \"^src/gen/.*$\",\r\n]\r\n```\r\n\r\n\r\n### Command used\r\n\r\n```shell\r\npylint --recursive=y src/\r\n```\r\n\r\n\r\n### Pylint output\r\n\r\n```shell\r\n************* Module region_selection\r\nsrc\\region_selection.py:170:0: R0914: Too many local variables (17/15) (too-many-locals)\r\n************* Module about\r\nsrc\\gen\\about.py:2:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\about.py:4:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\about.py:57:0: C0301: Line too long (504/120) (line-too-long)\r\nsrc\\gen\\about.py:12:0: C0103: Class name \"Ui_AboutAutoSplitWidget\" doesn't conform to '_?_?[a-zA-Z]+?$' pattern (invalid-name)\r\nsrc\\gen\\about.py:12:0: R0205: Class 'Ui_AboutAutoSplitWidget' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\r\nsrc\\gen\\about.py:13:4: C0103: Method name \"setupUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\about.py:13:22: C0103: Argument name \"AboutAutoSplitWidget\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\about.py:53:4: C0103: Method name \"retranslateUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\about.py:53:28: C0103: Argument name \"AboutAutoSplitWidget\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\about.py:24:8: W0201: Attribute 'ok_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:27:8: W0201: Attribute 'created_by_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:30:8: W0201: Attribute 'version_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:33:8: W0201: Attribute 'donate_text_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:37:8: W0201: Attribute 'donate_button_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\about.py:43:8: W0201: Attribute 'icon_label' defined outside __init__ (attribute-defined-outside-init)\r\n************* Module design\r\nsrc\\gen\\design.py:2:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\design.py:4:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\design.py:328:0: C0301: Line too long (123/120) (line-too-long)\r\nsrc\\gen\\design.py:363:0: C0301: Line too long (125/120) (line-too-long)\r\nsrc\\gen\\design.py:373:0: C0301: Line too long (121/120) (line-too-long)\r\nsrc\\gen\\design.py:412:0: C0301: Line too long (131/120) (line-too-long)\r\nsrc\\gen\\design.py:12:0: C0103: Class name \"Ui_MainWindow\" doesn't conform to '_?_?[a-zA-Z]+?$' pattern (invalid-name)\r\nsrc\\gen\\design.py:308:8: C0103: Attribute name \"actionSplit_Settings\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:318:8: C0103: Attribute name \"actionCheck_for_Updates_on_Open\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:323:8: C0103: Attribute name \"actionLoop_Last_Split_Image_To_First_Image\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:325:8: C0103: Attribute name \"actionAuto_Start_On_Reset\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:327:8: C0103: Attribute name \"actionGroup_dummy_splits_when_undoing_skipping\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:12:0: R0205: Class 'Ui_MainWindow' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\r\nsrc\\gen\\design.py:12:0: R0902: Too many instance attributes (69/15) (too-many-instance-attributes)\r\nsrc\\gen\\design.py:13:4: C0103: Method name \"setupUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:13:22: C0103: Argument name \"MainWindow\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:16:8: C0103: Variable name \"sizePolicy\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:13:4: R0915: Too many statements (339/50) (too-many-statements)\r\nsrc\\gen\\design.py:354:4: C0103: Method name \"retranslateUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:354:28: C0103: Argument name \"MainWindow\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\design.py:354:4: R0915: Too many statements (61/50) (too-many-statements)\r\nsrc\\gen\\design.py:31:8: W0201: Attribute 'central_widget' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:33:8: W0201: Attribute 'x_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:36:8: W0201: Attribute 'select_region_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:40:8: W0201: Attribute 'start_auto_splitter_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:44:8: W0201: Attribute 'reset_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:49:8: W0201: Attribute 'undo_split_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:54:8: W0201: Attribute 'skip_split_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:59:8: W0201: Attribute 'check_fps_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:63:8: W0201: Attribute 'fps_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:66:8: W0201: Attribute 'live_image' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:75:8: W0201: Attribute 'current_split_image' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:81:8: W0201: Attribute 'current_image_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:85:8: W0201: Attribute 'width_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:88:8: W0201: Attribute 'height_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:91:8: W0201: Attribute 'fps_value_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:95:8: W0201: Attribute 'width_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:101:8: W0201: Attribute 'height_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:107:8: W0201: Attribute 'capture_region_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:111:8: W0201: Attribute 'current_image_file_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:115:8: W0201: Attribute 'take_screenshot_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:119:8: W0201: Attribute 'x_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:128:8: W0201: Attribute 'y_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:136:8: W0201: Attribute 'y_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:139:8: W0201: Attribute 'align_region_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:143:8: W0201: Attribute 'select_window_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:147:8: W0201: Attribute 'browse_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:151:8: W0201: Attribute 'split_image_folder_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:154:8: W0201: Attribute 'split_image_folder_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:158:8: W0201: Attribute 'capture_region_window_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:162:8: W0201: Attribute 'image_loop_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:165:8: W0201: Attribute 'similarity_viewer_groupbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:169:8: W0201: Attribute 'table_live_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:173:8: W0201: Attribute 'table_highest_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:177:8: W0201: Attribute 'table_threshold_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:181:8: W0201: Attribute 'line_1' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:186:8: W0201: Attribute 'table_current_image_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:189:8: W0201: Attribute 'table_reset_image_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:192:8: W0201: Attribute 'line_2' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:197:8: W0201: Attribute 'line_3' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:202:8: W0201: Attribute 'line_4' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:207:8: W0201: Attribute 'line_5' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:212:8: W0201: Attribute 'table_current_image_live_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:216:8: W0201: Attribute 'table_current_image_highest_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:220:8: W0201: Attribute 'table_current_image_threshold_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:224:8: W0201: Attribute 'table_reset_image_live_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:228:8: W0201: Attribute 'table_reset_image_highest_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:232:8: W0201: Attribute 'table_reset_image_threshold_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:236:8: W0201: Attribute 'reload_start_image_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:240:8: W0201: Attribute 'start_image_status_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:243:8: W0201: Attribute 'start_image_status_value_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:246:8: W0201: Attribute 'image_loop_value_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:249:8: W0201: Attribute 'previous_image_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:254:8: W0201: Attribute 'next_image_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:296:8: W0201: Attribute 'menu_bar' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:299:8: W0201: Attribute 'menu_help' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:301:8: W0201: Attribute 'menu_file' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:304:8: W0201: Attribute 'action_view_help' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:306:8: W0201: Attribute 'action_about' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:308:8: W0201: Attribute 'actionSplit_Settings' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:310:8: W0201: Attribute 'action_save_profile' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:312:8: W0201: Attribute 'action_load_profile' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:314:8: W0201: Attribute 'action_save_profile_as' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:316:8: W0201: Attribute 'action_check_for_updates' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:318:8: W0201: Attribute 'actionCheck_for_Updates_on_Open' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:323:8: W0201: Attribute 'actionLoop_Last_Split_Image_To_First_Image' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:325:8: W0201: Attribute 'actionAuto_Start_On_Reset' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:327:8: W0201: Attribute 'actionGroup_dummy_splits_when_undoing_skipping' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:329:8: W0201: Attribute 'action_settings' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\design.py:331:8: W0201: Attribute 'action_check_for_updates_on_open' defined outside __init__ (attribute-defined-outside-init)\r\n************* Module resources_rc\r\nsrc\\gen\\resources_rc.py:1:0: C0302: Too many lines in module (2311/1000) (too-many-lines)\r\nsrc\\gen\\resources_rc.py:8:0: C0103: Constant name \"qt_resource_data\" doesn't conform to UPPER_CASE naming style (invalid-name)\r\nsrc\\gen\\resources_rc.py:2278:0: C0103: Constant name \"qt_resource_name\" doesn't conform to UPPER_CASE naming style (invalid-name)\r\nsrc\\gen\\resources_rc.py:2294:0: C0103: Constant name \"qt_resource_struct\" doesn't conform to UPPER_CASE naming style (invalid-name)\r\nsrc\\gen\\resources_rc.py:2305:0: C0103: Function name \"qInitResources\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\resources_rc.py:2308:0: C0103: Function name \"qCleanupResources\" doesn't conform to snake_case naming style (invalid-name)\r\n************* Module settings\r\nsrc\\gen\\settings.py:2:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\settings.py:4:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\settings.py:61:0: C0301: Line too long (158/120) (line-too-long)\r\nsrc\\gen\\settings.py:123:0: C0301: Line too long (151/120) (line-too-long)\r\nsrc\\gen\\settings.py:209:0: C0301: Line too long (162/120) (line-too-long)\r\nsrc\\gen\\settings.py:214:0: C0301: Line too long (121/120) (line-too-long)\r\nsrc\\gen\\settings.py:221:0: C0301: Line too long (177/120) (line-too-long)\r\nsrc\\gen\\settings.py:223:0: C0301: Line too long (181/120) (line-too-long)\r\nsrc\\gen\\settings.py:226:0: C0301: Line too long (461/120) (line-too-long)\r\nsrc\\gen\\settings.py:228:0: C0301: Line too long (192/120) (line-too-long)\r\nsrc\\gen\\settings.py:12:0: C0103: Class name \"Ui_DialogSettings\" doesn't conform to '_?_?[a-zA-Z]+?$' pattern (invalid-name)\r\nsrc\\gen\\settings.py:12:0: R0205: Class 'Ui_DialogSettings' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\r\nsrc\\gen\\settings.py:12:0: R0902: Too many instance attributes (35/15) (too-many-instance-attributes)\r\nsrc\\gen\\settings.py:13:4: C0103: Method name \"setupUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:13:22: C0103: Argument name \"DialogSettings\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:16:8: C0103: Variable name \"sizePolicy\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:13:4: R0915: Too many statements (190/50) (too-many-statements)\r\nsrc\\gen\\settings.py:205:4: C0103: Method name \"retranslateUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:205:28: C0103: Argument name \"DialogSettings\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\settings.py:26:8: W0201: Attribute 'capture_settings_groupbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:29:8: W0201: Attribute 'fps_limit_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:36:8: W0201: Attribute 'fps_limit_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:40:8: W0201: Attribute 'live_capture_region_checkbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:46:8: W0201: Attribute 'capture_method_combobox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:49:8: W0201: Attribute 'capture_method_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:52:8: W0201: Attribute 'capture_device_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:55:8: W0201: Attribute 'capture_device_combobox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:59:8: W0201: Attribute 'image_settings_groupbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:65:8: W0201: Attribute 'default_comparison_method' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:73:8: W0201: Attribute 'default_comparison_method_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:76:8: W0201: Attribute 'default_pause_time_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:80:8: W0201: Attribute 'default_pause_time_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:87:8: W0201: Attribute 'default_similarity_threshold_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:92:8: W0201: Attribute 'default_similarity_threshold_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:98:8: W0201: Attribute 'loop_splits_checkbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:104:8: W0201: Attribute 'custom_image_settings_info_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:111:8: W0201: Attribute 'default_delay_time_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:116:8: W0201: Attribute 'default_delay_time_spinbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:121:8: W0201: Attribute 'hotkeys_groupbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:127:8: W0201: Attribute 'set_pause_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:131:8: W0201: Attribute 'split_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:137:8: W0201: Attribute 'undo_split_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:143:8: W0201: Attribute 'split_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:146:8: W0201: Attribute 'reset_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:152:8: W0201: Attribute 'set_undo_split_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:156:8: W0201: Attribute 'reset_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:159:8: W0201: Attribute 'set_reset_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:163:8: W0201: Attribute 'set_split_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:167:8: W0201: Attribute 'pause_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:170:8: W0201: Attribute 'pause_input' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:176:8: W0201: Attribute 'undo_split_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:179:8: W0201: Attribute 'set_skip_split_hotkey_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:183:8: W0201: Attribute 'skip_split_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\settings.py:186:8: W0201: Attribute 'skip_split_input' defined outside __init__ (attribute-defined-outside-init)\r\n************* Module update_checker\r\nsrc\\gen\\update_checker.py:2:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\update_checker.py:4:0: R2044: Line with empty comment (empty-comment)\r\nsrc\\gen\\update_checker.py:12:0: C0103: Class name \"Ui_UpdateChecker\" doesn't conform to '_?_?[a-zA-Z]+?$' pattern (invalid-name)\r\nsrc\\gen\\update_checker.py:12:0: R0205: Class 'Ui_UpdateChecker' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\r\nsrc\\gen\\update_checker.py:13:4: C0103: Method name \"setupUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:13:22: C0103: Argument name \"UpdateChecker\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:17:8: C0103: Variable name \"sizePolicy\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:33:8: C0103: Variable name \"sizePolicy\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:13:4: R0915: Too many statements (56/50) (too-many-statements)\r\nsrc\\gen\\update_checker.py:71:4: C0103: Method name \"retranslateUi\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:71:28: C0103: Argument name \"UpdateChecker\" doesn't conform to snake_case naming style (invalid-name)\r\nsrc\\gen\\update_checker.py:31:8: W0201: Attribute 'update_status_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:39:8: W0201: Attribute 'current_version_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:42:8: W0201: Attribute 'latest_version_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:45:8: W0201: Attribute 'go_to_download_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:48:8: W0201: Attribute 'left_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:52:8: W0201: Attribute 'right_button' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:55:8: W0201: Attribute 'current_version_number_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:59:8: W0201: Attribute 'latest_version_number_label' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:63:8: W0201: Attribute 'do_not_ask_again_checkbox' defined outside __init__ (attribute-defined-outside-init)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (region_capture -> region_selection) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (error_messages -> user_profile -> region_capture -> region_selection) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplitImage -> split_parser) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoControlledWorker -> error_messages -> AutoSplit) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> user_profile -> region_capture -> region_selection -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplitImage -> error_messages -> user_profile) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> menu_bar -> user_profile -> region_capture -> region_selection -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> region_selection -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (error_messages -> user_profile -> region_selection) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (error_messages -> user_profile) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplitImage -> split_parser -> error_messages -> user_profile) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> menu_bar -> region_selection -> error_messages) (cyclic-import)\r\nsrc\\gen\\update_checker.py:1:0: R0401: Cyclic import (AutoSplit -> menu_bar -> error_messages) (cyclic-import)\r\n\r\n--------------------------------------------------------------------------\r\nYour code has been rated at -158.32/10 (previous run: -285.20/10, +126.88)\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nsrc\\gen\\* should not be checked\r\n\r\n### Pylint version\r\n\r\n```shell\r\npylint 2.14.1\r\nastroid 2.11.5\r\nPython 3.9.6 (tags/v3.9.6:db3ff76, Jun 28 2021, 15:26:21) [MSC v.1929 64 bit (AMD64)]\r\n```\r\n\r\n\r\n### OS / Environment\r\n\r\nWindows 10.0.19044\r\n\r\n\r\n### Additional dependencies\r\n\r\n_No response_\n",
    "state": "closed",
    "repo_link": "https://github.com/testbed/pylint-dev__pylint__2.15.git",
    "requested_commit": "",
    "mayil_response": "- Verify that the `ignore-paths` setting in `pyproject.toml` is correctly formatted as a list of regular expression patterns.\n- Ensure that the `ignore-paths` setting is being correctly parsed by the configuration parser, possibly in `pylint/config/config_file_parser.py`.\n- Check if the `traverse_files_recursively` function in the hypothetical code or its equivalent in the actual codebase is correctly using the `ignore_paths` parameter to filter out the paths that should be ignored.\n- Confirm that the `ignore-paths` setting is correctly passed to the file traversal logic when the `--recursive=y` option is used.\n- If the `ignore-paths` setting is not being respected, consider debugging or adding additional logic to the file traversal function to ensure that paths matching the patterns in `ignore-paths` are excluded from checks.\n- If the issue persists, look for any recent changes in Pylint's handling of file ignoring mechanisms that might have introduced a regression, and consider reverting or fixing those changes.\n\n### Code snippets to check\n\n-  \u2192 [pylint](https://github.com/testbed/pylint-dev__pylint__2.15/tree//pylint) \u2192 [lint](https://github.com/testbed/pylint-dev__pylint__2.15/tree//pylint/lint)- [Lines 3 - 595](https://github.com/testbed/pylint-dev__pylint__2.15/blob//pylint/lint/base_options.py#L3-L595)\n\n This snippet contains the 'ignore-paths' configuration option, which is relevant to the issue as it is not being respected when running pylint recursively. \n\n\n   - [Lines 3 - 595](https://github.com/testbed/pylint-dev__pylint__2.15/blob//pylint/lint/base_options.py#L3-L595)\n\n This snippet contains the 'recursive' option which is used in the command that triggers the bug, making it relevant to the issue.",
    "ai_cost": {
        "search_embedding": 1.3e-07,
        "issue_classifier": 0.0005614999999999999,
        "snippet_processor": 0.062290000000000005,
        "issue_star_creation": 0.02021,
        "issue_star_solver": 0.05824,
        "bouncer": 0.02295
    },
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1711699866.101676,
        "relevant_snippets": [
            {
                "code": "(\n        (\n            \"ignore-on-opaque-inference\",\n            {\n                \"default\": True,\n                \"type\": \"yn\",\n                \"metavar\": \"<y or n>\",\n                \"help\": \"This flag controls whether pylint should warn about \"\n                \"no-member and similar checks whenever an opaque object \"\n                \"is returned when inferring. The inference can return \"\n                \"multiple potential results while evaluating a Python object, \"\n                \"but some branches might not be evaluated, which results in \"\n                \"partial inference. In that case, it might be useful to still emit \"\n                \"no-member and other checks for the rest of the inferred objects.\",\n            },\n        ),\n        (\n            \"mixin-class-rgx\",\n            {\n                \"default\": \".*[Mm]ixin\",\n                \"type\": \"regexp\",\n                \"metavar\": \"<regexp>\",\n                \"help\": \"Regex pattern to define which classes are considered mixins.\",\n            },\n        ),\n        (\n            \"ignore-mixin-members\",\n            {\n                \"default\": True,\n                \"type\": \"yn\",\n                \"metavar\": \"<y or n>\",\n                \"help\": \"Tells whether missing members accessed in mixin \"\n                \"class should be ignored. A class is considered mixin if its name matches \"\n                \"the mixin-class-rgx option.\",\n                \"kwargs\": {\"new_names\": [\"ignore-checks-for-mixin\"]},\n            },\n        ),\n        (\n            \"ignored-checks-for-mixins\",\n            {\n                \"default\": [\n                    \"no-member\",\n                    \"not-async-context-manager\",\n                    \"not-context-manager\",\n                    \"attribute-defined-outside-init\",\n                ],\n                \"type\": \"csv\",\n                \"metavar\": \"<list of messages names>\",\n                \"help\": \"List of symbolic message names to ignore for Mixin members.\",\n            },\n        ),\n        (\n            \"ignore-none\",\n            {\n                \"default\": True,\n                \"type\": \"yn\",\n                \"metavar\": \"<y or n>\",\n                \"help\": \"Tells whether to warn about missing members when the owner \"\n                \"of the attribute is inferred to be None.\",\n            },\n        ),\n        # the defaults here are *stdlib* names that (almost) always\n        # lead to false positives, since their idiomatic use is\n        # 'too dynamic' for pylint to grok.",
                "filename": "pylint/checkers/typecheck.py",
                "start_index": 29796,
                "end_index": 32290,
                "start_line": 3,
                "end_line": 902,
                "max_line": 2314,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.0
            },
            {
                "code": "(\n        (\n            \"ignore\",\n            {\n                \"type\": \"csv\",\n                \"metavar\": \"<file>[,<file>...]\",\n                \"dest\": \"black_list\",\n                \"kwargs\": {\"old_names\": [\"black_list\"]},\n                \"default\": constants.DEFAULT_IGNORE_LIST,\n                \"help\": \"Files or directories to be skipped. \"\n                \"They should be base names, not paths.\",\n            },\n        ),\n        (\n            \"ignore-patterns\",\n            {\n                \"type\": \"regexp_csv\",\n                \"metavar\": \"<pattern>[,<pattern>...]\",\n                \"dest\": \"black_list_re\",\n                \"default\": (re.compile(r\"^\\.#\"),),\n                \"help\": \"Files or directories matching the regular expression patterns are\"\n                \" skipped. The regex matches against base names, not paths. The default value \"\n                \"ignores Emacs file locks\",\n            },\n        ),\n        (\n            \"ignore-paths\",\n            {\n                \"type\": \"regexp_paths_csv\",\n                \"metavar\": \"<pattern>[,<pattern>...]\",\n                \"default\": [],\n                \"help\": \"Add files or directories matching the regular expressions patterns to the \"\n                \"ignore-list. The regex matches against paths and can be in \"\n                \"Posix or Windows format. Because '\\\\\\\\' represents the directory delimiter \"\n                \"on Windows systems, it can't be used as an escape character.\",\n            },\n        ),\n        (\n            \"persistent\",\n            {\n                \"default\": True,\n                \"type\": \"yn\",\n                \"metavar\": \"<y or n>\",\n                \"help\": \"Pickle collected data for later comparisons.\",\n            },\n        ),\n        (\n            \"load-plugins\",\n            {\n                \"type\": \"csv\",\n                \"metavar\": \"<modules>\",\n                \"default\": (),\n                \"help\": \"List of plugins (as comma separated values of \"\n                \"python module names) to load, usually to register \"\n                \"additional checkers.\",\n            },\n        ),\n        (\n            \"output-format\",\n            {\n                \"default\": \"text\",\n                \"action\": _OutputFormatAction,\n                \"callback\": lambda x: x,\n                \"metavar\": \"<format>\",\n                \"short\": \"f\",\n                \"group\": \"Reports\",\n                \"help\": \"Set the output format. Available formats are: text, \"\n                \"parseable, colorized, json2 (improved json format), json \"\n                \"(old json format) and msvs (visual studio). \"\n                \"You can also give a reporter class, e.g. mypackage.mymodule.\"\n                \"MyReporterClass.\",\n                \"kwargs\": {\"linter\": linter},\n            },\n        ),",
                "filename": "pylint/lint/base_options.py",
                "start_index": 1102,
                "end_index": 3885,
                "start_line": 3,
                "end_line": 595,
                "max_line": 596,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 1.0
            },
            {
                "code": "# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n# For details: https://github.com/pylint-dev/pylint/blob/main/LICENSE\n# Copyright (c) https://github.com/pylint-dev/pylint/blob/main/CONTRIBUTORS.txt\n\nfrom __future__ import annotations\n\nimport os\nimport platform\nimport sys\n\nimport astroid\nimport platformdirs\n\nfrom pylint.__pkginfo__ import __version__\nfrom pylint.typing import MessageTypesFullName\n\nPY38_PLUS = sys.version_info[:2] >= (3, 8)\nPY39_PLUS = sys.version_info[:2] >= (3, 9)\nPY310_PLUS = sys.version_info[:2] >= (3, 10)\nPY312_PLUS = sys.version_info[:2] >= (3, 12)\n\nIS_PYPY = platform.python_implementation() == \"PyPy\"\n\nPY_EXTS = (\".py\", \".pyc\", \".pyo\", \".pyw\", \".so\", \".dll\")\n\nMSG_STATE_CONFIDENCE = 2\n_MSG_ORDER = \"EWRCIF\"\nMSG_STATE_SCOPE_CONFIG = 0\nMSG_STATE_SCOPE_MODULE = 1\n\n# The line/node distinction does not apply to fatal errors and reports.\n_SCOPE_EXEMPT = \"FR\"\n\nMSG_TYPES: dict[str, MessageTypesFullName] = {\n    \"I\": \"info\",\n    \"C\": \"convention\",\n    \"R\": \"refactor\",\n    \"W\": \"warning\",\n    \"E\": \"error\",\n    \"F\": \"fatal\",\n}\nMSG_TYPES_LONG: dict[str, str] = {v: k for k, v in MSG_TYPES.items()}\n\nMSG_TYPES_STATUS = {\"I\": 0, \"C\": 16, \"R\": 8, \"W\": 4, \"E\": 2, \"F\": 1}\n\n# You probably don't want to change the MAIN_CHECKER_NAME\n# This would affect rcfile generation and retro-compatibility\n# on all project using [MAIN] in their rcfile.\nMAIN_CHECKER_NAME = \"main\"\n\nDEFAULT_PYLINT_HOME = platformdirs.user_cache_dir(\"pylint\")\n\nDEFAULT_IGNORE_LIST = (\"CVS\",)\n\n\nclass WarningScope:\n    LINE = \"line-based-msg\"\n    NODE = \"node-based-msg\"\n\n\nfull_version = f\"\"\"pylint {__version__}\nastroid {astroid.__version__}\nPython {sys.version}\"\"\"\n\nHUMAN_READABLE_TYPES = {\n    \"file\": \"file\",\n    \"module\": \"module\",\n    \"const\": \"constant\",\n    \"class\": \"class\",\n    \"function\": \"function\",\n    \"method\": \"method\",\n    \"attr\": \"attribute\",\n    \"argument\": \"argument\",\n    \"variable\": \"variable\",\n    \"class_attribute\": \"class attribute\",\n    \"class_const\": \"class constant\",\n    \"inlinevar\": \"inline iteration\",\n    \"typevar\": \"type variable\",\n    \"typealias\": \"type alias\",\n}\n\n# ignore some messages when emitting useless-suppression:\n# - cyclic-import: can show false positives due to incomplete context\n# - deprecated-{module, argument, class, method, decorator}:\n#   can cause false positives for multi-interpreter projects\n#   when linting with an interpreter on a lower python version\nINCOMPATIBLE_WITH_USELESS_SUPPRESSION = frozenset(\n    [\n        \"R0401\",  # cyclic-import\n        \"W0402\",  # deprecated-module\n        \"W1505\",  # deprecated-method\n        \"W1511\",  # deprecated-argument\n        \"W1512\",  # deprecated-class\n        \"W1513\",  # deprecated-decorator\n        \"R0801\",  # duplicate-code\n    ]\n)\n\n\ndef _get_pylint_home() -> str:\n    \"\"\"Return the pylint home.\"\"\"\n    if \"PYLINTHOME\" in os.environ:\n        return os.environ[\"PYLINTHOME\"]\n    return DEFAULT_PYLINT_HOME\n\n\nPYLINT_HOME = _get_pylint_home()",
                "filename": "pylint/constants.py",
                "start_index": 0,
                "end_index": 2966,
                "start_line": 1,
                "end_line": 107,
                "max_line": 251,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.1
            },
            {
                "code": "(\n            \"ignored-classes\",\n            {\n                \"default\": (\n                    \"optparse.Values\",\n                    \"thread._local\",\n                    \"_thread._local\",\n                    \"argparse.Namespace\",\n                ),\n                \"type\": \"csv\",\n                \"metavar\": \"<members names>\",\n                \"help\": \"List of class names for which member attributes \"\n                \"should not be checked (useful for classes with \"\n                \"dynamically set attributes). This supports \"\n                \"the use of qualified names.\",\n            },\n        ),\n        (\n            \"generated-members\",\n            {\n                \"default\": (),\n                \"type\": \"string\",\n                \"metavar\": \"<members names>\",\n                \"help\": \"List of members which are set dynamically and \\\nmissed by pylint inference system, and so shouldn't trigger E1101 when \\\naccessed. Python regular expressions are accepted.\",\n            },\n        ),\n        (\n            \"contextmanager-decorators\",\n            {\n                \"default\": [\"contextlib.contextmanager\"],\n                \"type\": \"csv\",\n                \"metavar\": \"<decorator names>\",\n                \"help\": \"List of decorators that produce context managers, \"\n                \"such as contextlib.contextmanager. Add to this list \"\n                \"to register other decorators that produce valid \"\n                \"context managers.\",\n            },\n        ),\n        (\n            \"missing-member-hint-distance\",\n            {\n                \"default\": 1,\n                \"type\": \"int\",\n                \"metavar\": \"<member hint edit distance>\",\n                \"help\": \"The minimum edit distance a name should have in order \"\n                \"to be considered a similar match for a missing member name.\",\n            },\n        ),\n        (\n            \"missing-member-max-choices\",\n            {\n                \"default\": 1,\n                \"type\": \"int\",\n                \"metavar\": \"<member hint max choices>\",\n                \"help\": \"The total number of similar names that should be taken in \"\n                \"consideration when showing a hint for a missing member.\",\n            },\n        ),\n        (\n            \"missing-member-hint\",\n            {\n                \"default\": True,\n                \"type\": \"yn\",\n                \"metavar\": \"<missing member hint>\",\n                \"help\": \"Show a hint with possible names when a member name was not \"\n                \"found. The aspect of finding the hint is based on edit distance.\",\n            },\n        ),\n        (\n            \"signature-mutators\",\n            {\n                \"default\": [],\n                \"type\": \"csv\",\n                \"metavar\": \"<decorator names>\",\n                \"help\": \"List of decorators that change the signature of \"\n                \"a decorated function.\",\n            },\n        ),\n    )",
                "filename": "pylint/checkers/typecheck.py",
                "start_index": 32299,
                "end_index": 35203,
                "start_line": 3,
                "end_line": 2228,
                "max_line": 2314,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "name: \ud83e\udd14 Support question\ndescription: Questions about pylint that are not covered in the documentation\nlabels: [\"Needs triage :inbox_tray:\", \"Question\", \"Documentation :green_book:\"]\nbody:\n  - type: markdown\n    attributes:\n      value: >\n        **Thank you for wanting to report a problem with pylint documentation!**\n\n\n        Please fill out your suggestions below. If the problem seems straightforward,\n        feel free to go ahead and submit a pull request instead!\n\n\n        \u26a0 Verify first that your issue is not [already reported on GitHub][issue\n        search].\n\n        \ud83d\udcac If you are seeking community support, please consider [starting a discussion\n        on Discord][Discussions].\n\n\n        [issue search]:\n        https://github.com/pylint-dev/pylint/issues?q=is%3Aissue+is%3Aopen+\n\n        [Discussions]: https://discord.com/invite/Egy6P8AMB5\n\n  - type: textarea\n    id: question\n    attributes:\n      label: Question\n    validations:\n      required: true\n  - type: textarea\n    id: documentation\n    attributes:\n      label: Documentation for future user\n      description:\n        Where did you expect this information to be? What do we need to add or what do\n        we need to reorganize?\n    validations:\n      required: true\n  - type: textarea\n    attributes:\n      label: Additional context\n      description: >\n        Add any other context, links, etc. about the question here.\n      placeholder: >-\n        I asked on https://stackoverflow.com/... and the community advised me to do X, Y\n        and Z.",
                "filename": ".github/ISSUE_TEMPLATE/QUESTION.yml",
                "start_index": 0,
                "end_index": 1528,
                "start_line": 1,
                "end_line": 49,
                "max_line": 49,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.0
            },
            {
                "code": "\"https://github.com/pylint-dev/pylint/pull/4942\":",
                "filename": "pylint/message/_deleted_message_ids.py",
                "start_index": 576,
                "end_index": 625,
                "start_line": 21,
                "end_line": 21,
                "max_line": 179,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.0
            },
            {
                "code": "# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n# For details: https://github.com/pylint-dev/pylint/blob/main/LICENSE\n# Copyright (c) https://github.com/pylint-dev/pylint/blob/main/CONTRIBUTORS.txt",
                "filename": "script/__init__.py",
                "start_index": 0,
                "end_index": 230,
                "start_line": 1,
                "end_line": 3,
                "max_line": 3,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.0
            },
            {
                "code": "# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n# For details: https://github.com/pylint-dev/pylint/blob/main/LICENSE\n# Copyright (c) https://github.com/pylint-dev/pylint/blob/main/CONTRIBUTORS.txt\n\nfrom __future__ import annotations\n\nimport sys\nimport warnings\nfrom glob import glob\nfrom itertools import chain\nfrom pathlib import Path\nfrom typing import TYPE_CHECKING\n\nfrom pylint import reporters\nfrom pylint.config.config_file_parser import _ConfigurationFileParser\nfrom pylint.config.exceptions import (\n    ArgumentPreprocessingError,\n    _UnrecognizedOptionError,\n)\nfrom pylint.utils import utils\n\nif TYPE_CHECKING:\n    from pylint.lint import PyLinter",
                "filename": "pylint/config/config_initialization.py",
                "start_index": 0,
                "end_index": 692,
                "start_line": 1,
                "end_line": 23,
                "max_line": 201,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "(\n            \"from-stdin\",\n            {\n                \"action\": \"store_true\",\n                \"default\": False,\n                \"metavar\": \"<flag>\",\n                \"help\": (\n                    \"Interpret the stdin as a python script, whose filename \"\n                    \"needs to be passed as the module_or_package argument.\"\n                ),\n            },\n        ),\n        (\n            \"source-roots\",\n            {\n                \"type\": \"glob_paths_csv\",\n                \"metavar\": \"<path>[,<path>...]\",\n                \"default\": (),\n                \"help\": \"Add paths to the list of the source roots. Supports globbing patterns. \"\n                \"The source root is an absolute path or a path relative to the current working \"\n                \"directory used to determine a package namespace for modules located under the \"\n                \"source root.\",\n            },\n        ),\n        (\n            \"recursive\",\n            {\n                \"type\": \"yn\",\n                \"metavar\": \"<yn>\",\n                \"default\": False,\n                \"help\": \"Discover python modules and packages in the file system subtree.\",\n            },\n        ),\n        (\n            \"py-version\",\n            {\n                \"default\": sys.version_info[:2],\n                \"type\": \"py_version\",\n                \"metavar\": \"<py_version>\",\n                \"help\": (\n                    \"Minimum Python version to use for version dependent checks. \"\n                    \"Will default to the version used to run pylint.\"\n                ),\n            },\n        ),\n        (\n            \"ignored-modules\",\n            {\n                \"default\": (),\n                \"type\": \"csv\",\n                \"metavar\": \"<module names>\",\n                \"help\": \"List of module names for which member attributes \"\n                \"should not be checked (useful for modules/projects \"\n                \"where namespaces are manipulated during runtime and \"\n                \"thus existing member attributes cannot be \"\n                \"deduced by static analysis). It supports qualified \"\n                \"module names, as well as Unix pattern matching.\",\n            },\n        ),\n        (\n            \"analyse-fallback-blocks\",\n            {\n                \"default\": False,\n                \"type\": \"yn\",\n                \"metavar\": \"<y or n>\",\n                \"help\": \"Analyse import fallback blocks. This can be used to \"\n                \"support both Python 2 and 3 compatible code, which \"\n                \"means that the block might have code that exists \"\n                \"only in one or another interpreter, leading to false \"\n                \"positives when analysed.\",\n            },\n        ),",
                "filename": "pylint/lint/base_options.py",
                "start_index": 12453,
                "end_index": 15152,
                "start_line": 3,
                "end_line": 595,
                "max_line": 596,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "#!/usr/bin/env python\n\n# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n# For details: https://github.com/pylint-dev/pylint/blob/main/LICENSE\n# Copyright (c) https://github.com/pylint-dev/pylint/blob/main/CONTRIBUTORS.txt\n\nimport pylint\n\npylint.modify_sys_path()\npylint.run_pylint()",
                "filename": "pylint/__main__.py",
                "start_index": 0,
                "end_index": 314,
                "start_line": 1,
                "end_line": 10,
                "max_line": 10,
                "git_instance": "github",
                "repo_name": "testbed/pylint-dev__pylint__2.15",
                "sha": "",
                "context_relevance": 0.2
            }
        ],
        "classification": "bug",
        "snippet_processor_task": {
            "pylint/lint/base_options.py": [
                {
                    "chunk": {
                        "code": "(\n        (\n            \"ignore\",\n            {\n                \"type\": \"csv\",\n                \"metavar\": \"<file>[,<file>...]\",\n                \"dest\": \"black_list\",\n                \"kwargs\": {\"old_names\": [\"black_list\"]},\n                \"default\": constants.DEFAULT_IGNORE_LIST,\n                \"help\": \"Files or directories to be skipped. \"\n                \"They should be base names, not paths.\",\n            },\n        ),\n        (\n            \"ignore-patterns\",\n            {\n                \"type\": \"regexp_csv\",\n                \"metavar\": \"<pattern>[,<pattern>...]\",\n                \"dest\": \"black_list_re\",\n                \"default\": (re.compile(r\"^\\.#\"),),\n                \"help\": \"Files or directories matching the regular expression patterns are\"\n                \" skipped. The regex matches against base names, not paths. The default value \"\n                \"ignores Emacs file locks\",\n            },\n        ),\n        (\n            \"ignore-paths\",\n            {\n                \"type\": \"regexp_paths_csv\",\n                \"metavar\": \"<pattern>[,<pattern>...]\",\n                \"default\": [],\n                \"help\": \"Add files or directories matching the regular expressions patterns to the \"\n                \"ignore-list. The regex matches against paths and can be in \"\n                \"Posix or Windows format. Because '\\\\\\\\' represents the directory delimiter \"\n                \"on Windows systems, it can't be used as an escape character.\",\n            },\n        ),\n        (\n            \"persistent\",\n            {\n                \"default\": True,\n                \"type\": \"yn\",\n                \"metavar\": \"<y or n>\",\n                \"help\": \"Pickle collected data for later comparisons.\",\n            },\n        ),\n        (\n            \"load-plugins\",\n            {\n                \"type\": \"csv\",\n                \"metavar\": \"<modules>\",\n                \"default\": (),\n                \"help\": \"List of plugins (as comma separated values of \"\n                \"python module names) to load, usually to register \"\n                \"additional checkers.\",\n            },\n        ),\n        (\n            \"output-format\",\n            {\n                \"default\": \"text\",\n                \"action\": _OutputFormatAction,\n                \"callback\": lambda x: x,\n                \"metavar\": \"<format>\",\n                \"short\": \"f\",\n                \"group\": \"Reports\",\n                \"help\": \"Set the output format. Available formats are: text, \"\n                \"parseable, colorized, json2 (improved json format), json \"\n                \"(old json format) and msvs (visual studio). \"\n                \"You can also give a reporter class, e.g. mypackage.mymodule.\"\n                \"MyReporterClass.\",\n                \"kwargs\": {\"linter\": linter},\n            },\n        ),",
                        "filename": "pylint/lint/base_options.py",
                        "start_index": 1102,
                        "end_index": 3885,
                        "start_line": 3,
                        "end_line": 595,
                        "max_line": 596,
                        "git_instance": "github",
                        "repo_name": "testbed/pylint-dev__pylint__2.15",
                        "sha": ""
                    },
                    "reason_for_relevance": "This snippet contains the 'ignore-paths' configuration option, which is relevant to the issue as it is not being respected when running pylint recursively."
                },
                {
                    "chunk": {
                        "code": "(\n            \"from-stdin\",\n            {\n                \"action\": \"store_true\",\n                \"default\": False,\n                \"metavar\": \"<flag>\",\n                \"help\": (\n                    \"Interpret the stdin as a python script, whose filename \"\n                    \"needs to be passed as the module_or_package argument.\"\n                ),\n            },\n        ),\n        (\n            \"source-roots\",\n            {\n                \"type\": \"glob_paths_csv\",\n                \"metavar\": \"<path>[,<path>...]\",\n                \"default\": (),\n                \"help\": \"Add paths to the list of the source roots. Supports globbing patterns. \"\n                \"The source root is an absolute path or a path relative to the current working \"\n                \"directory used to determine a package namespace for modules located under the \"\n                \"source root.\",\n            },\n        ),\n        (\n            \"recursive\",\n            {\n                \"type\": \"yn\",\n                \"metavar\": \"<yn>\",\n                \"default\": False,\n                \"help\": \"Discover python modules and packages in the file system subtree.\",\n            },\n        ),\n        (\n            \"py-version\",\n            {\n                \"default\": sys.version_info[:2],\n                \"type\": \"py_version\",\n                \"metavar\": \"<py_version>\",\n                \"help\": (\n                    \"Minimum Python version to use for version dependent checks. \"\n                    \"Will default to the version used to run pylint.\"\n                ),\n            },\n        ),\n        (\n            \"ignored-modules\",\n            {\n                \"default\": (),\n                \"type\": \"csv\",\n                \"metavar\": \"<module names>\",\n                \"help\": \"List of module names for which member attributes \"\n                \"should not be checked (useful for modules/projects \"\n                \"where namespaces are manipulated during runtime and \"\n                \"thus existing member attributes cannot be \"\n                \"deduced by static analysis). It supports qualified \"\n                \"module names, as well as Unix pattern matching.\",\n            },\n        ),\n        (\n            \"analyse-fallback-blocks\",\n            {\n                \"default\": False,\n                \"type\": \"yn\",\n                \"metavar\": \"<y or n>\",\n                \"help\": \"Analyse import fallback blocks. This can be used to \"\n                \"support both Python 2 and 3 compatible code, which \"\n                \"means that the block might have code that exists \"\n                \"only in one or another interpreter, leading to false \"\n                \"positives when analysed.\",\n            },\n        ),",
                        "filename": "pylint/lint/base_options.py",
                        "start_index": 12453,
                        "end_index": 15152,
                        "start_line": 3,
                        "end_line": 595,
                        "max_line": 596,
                        "git_instance": "github",
                        "repo_name": "testbed/pylint-dev__pylint__2.15",
                        "sha": ""
                    },
                    "reason_for_relevance": "This snippet contains the 'recursive' option which is used in the command that triggers the bug, making it relevant to the issue."
                }
            ]
        },
        "solution_task": "- Verify that the `ignore-paths` setting in `pyproject.toml` is correctly formatted as a list of regular expression patterns.\n- Ensure that the `ignore-paths` setting is being correctly parsed by the configuration parser, possibly in `pylint/config/config_file_parser.py`.\n- Check if the `traverse_files_recursively` function in the hypothetical code or its equivalent in the actual codebase is correctly using the `ignore_paths` parameter to filter out the paths that should be ignored.\n- Confirm that the `ignore-paths` setting is correctly passed to the file traversal logic when the `--recursive=y` option is used.\n- If the `ignore-paths` setting is not being respected, consider debugging or adding additional logic to the file traversal function to ensure that paths matching the patterns in `ignore-paths` are excluded from checks.\n- If the issue persists, look for any recent changes in Pylint's handling of file ignoring mechanisms that might have introduced a regression, and consider reverting or fixing those changes.",
        "bouncer_response": {
            "score": 7,
            "criteria": "RESPONSES that are highly relevant, offering clear and comprehensive guidance or solutions for the described bug, should score between 7 and 9.",
            "supporting_evidence": "The RESPONSE provides a structured approach to diagnosing and potentially resolving the issue with the `ignore-paths` setting not being respected when running pylint recursively. It suggests verifying the format of the `ignore-paths` setting, ensuring correct parsing, checking the file traversal function, confirming the correct passing of settings, and looking for recent changes that might have caused a regression. The inclusion of specific code snippets to check is particularly valuable as it directs the investigation to relevant parts of the codebase. However, the RESPONSE does not directly address the fact that the issue is specific to the `--recursive=y` flag, which might imply a more specific bug in the handling of this flag in conjunction with `ignore-paths`. Therefore, while the RESPONSE is highly relevant and provides a clear path for investigation, it is not entirely complete in addressing the specific interaction between the recursive flag and the ignore paths setting.",
            "clarification_questions": "NONE"
        },
        "end_time": 1711699971.1521978,
        "result": "- Verify that the `ignore-paths` setting in `pyproject.toml` is correctly formatted as a list of regular expression patterns.\n- Ensure that the `ignore-paths` setting is being correctly parsed by the configuration parser, possibly in `pylint/config/config_file_parser.py`.\n- Check if the `traverse_files_recursively` function in the hypothetical code or its equivalent in the actual codebase is correctly using the `ignore_paths` parameter to filter out the paths that should be ignored.\n- Confirm that the `ignore-paths` setting is correctly passed to the file traversal logic when the `--recursive=y` option is used.\n- If the `ignore-paths` setting is not being respected, consider debugging or adding additional logic to the file traversal function to ensure that paths matching the patterns in `ignore-paths` are excluded from checks.\n- If the issue persists, look for any recent changes in Pylint's handling of file ignoring mechanisms that might have introduced a regression, and consider reverting or fixing those changes.\n\n### Code snippets to check\n\n-  \u2192 [pylint](https://github.com/testbed/pylint-dev__pylint__2.15/tree//pylint) \u2192 [lint](https://github.com/testbed/pylint-dev__pylint__2.15/tree//pylint/lint)- [Lines 3 - 595](https://github.com/testbed/pylint-dev__pylint__2.15/blob//pylint/lint/base_options.py#L3-L595)\n\n This snippet contains the 'ignore-paths' configuration option, which is relevant to the issue as it is not being respected when running pylint recursively. \n\n\n   - [Lines 3 - 595](https://github.com/testbed/pylint-dev__pylint__2.15/blob//pylint/lint/base_options.py#L3-L595)\n\n This snippet contains the 'recursive' option which is used in the command that triggers the bug, making it relevant to the issue.",
        "context_relevance": 0.19,
        "hypotheses": [],
        "groundedness_score": 1.0,
        "qa_relevance_reasons": {
            "reason": "Criteria: The RESPONSE is relevant to the entire PROMPT and answers the entire PROMPT completely.\nSupporting Evidence: The RESPONSE provides a comprehensive list of steps to verify and potentially resolve the issue described in the PROMPT, which is that the `ignore-paths` setting in `pyproject.toml` is being ignored when running Pylint with the `--recursive=y` option. It suggests checking the configuration format, the parsing of the setting, the file traversal function, and the passing of the setting to the file traversal logic. It also advises looking for recent changes that might have caused a regression. The RESPONSE is directly related to the bug description, the configuration provided, the command used, the output received, the expected behavior, and the Pylint version, making it highly relevant and deserving of the highest score."
        },
        "qa_relevance": 1.0
    }
}