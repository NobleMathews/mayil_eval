{
    "id": "astropy__astropy-13438",
    "repo_name": "testbed/astropy__astropy__5.0",
    "task_id": 9215794951223801401,
    "title": "[Security] Jquery 3.1.1 is vulnerable to untrusted code execution",
    "body": "<!-- This comments are hidden when you submit the issue,\r\nso you do not need to remove them! -->\r\n\r\n<!-- Please be sure to check out our contributing guidelines,\r\nhttps://github.com/astropy/astropy/blob/main/CONTRIBUTING.md .\r\nPlease be sure to check out our code of conduct,\r\nhttps://github.com/astropy/astropy/blob/main/CODE_OF_CONDUCT.md . -->\r\n\r\n<!-- Please have a search on our GitHub repository to see if a similar\r\nissue has already been posted.\r\nIf a similar issue is closed, have a quick look to see if you are satisfied\r\nby the resolution.\r\nIf not please go ahead and open an issue! -->\r\n\r\n<!-- Please check that the development version still produces the same bug.\r\nYou can install development version with\r\npip install git+https://github.com/astropy/astropy\r\ncommand. -->\r\n\r\n### Description\r\n<!-- Provide a general description of the bug. -->\r\nPassing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code (see [CVE-2020-11022](https://nvd.nist.gov/vuln/detail/cve-2020-11022) and [CVE-2020-11023](https://nvd.nist.gov/vuln/detail/cve-2020-11023))\r\n\r\n### Expected behavior\r\n<!-- What did you expect to happen. -->\r\nUpdate jquery to the version 3.5 or newer in https://github.com/astropy/astropy/tree/main/astropy/extern/jquery/data/js\r\n\r\n### Actual behavior\r\n<!-- What actually happened. -->\r\n<!-- Was the output confusing or poorly described? -->\r\n jquery version 3.1.1 is distributed with the latest astropy release\r\n\r\n<!-- ### Steps to Reproduce \r\n<!-- Ideally a code example could be provided so we can run it ourselves. -->\r\n<!-- If you are pasting code, use triple backticks (```) around\r\nyour code snippet. -->\r\n<!-- If necessary, sanitize your screen output to be pasted so you do not\r\nreveal secrets like tokens and passwords. -->\r\n<!--\r\n1. [First Step]\r\n2. [Second Step]\r\n3. [and so on...]\r\n\r\n```python\r\n# Put your Python code snippet here.\r\n```\r\n-->\r\n<!--### System Details\r\n<!-- Even if you do not think this is necessary, it is useful information for the maintainers.\r\nPlease run the following snippet and paste the output below:\r\nimport platform; print(platform.platform())\r\nimport sys; print(\"Python\", sys.version)\r\nimport numpy; print(\"Numpy\", numpy.__version__)\r\nimport erfa; print(\"pyerfa\", erfa.__version__)\r\nimport astropy; print(\"astropy\", astropy.__version__)\r\nimport scipy; print(\"Scipy\", scipy.__version__)\r\nimport matplotlib; print(\"Matplotlib\", matplotlib.__version__)\r\n-->\n",
    "state": "closed",
    "repo_link": "https://github.com/testbed/astropy__astropy__5.0.git",
    "requested_commit": "",
    "mayil_response": "- Update the jQuery version in the `astropy/extern/jquery/data/js` directory to 3.5.0 or newer to address the vulnerabilities CVE-2020-11022 and CVE-2020-11023.\n- Modify the `astropy/table/jsviewer.py` configuration to point to the updated jQuery version:\n  ```python\n  jquery_url = _config.ConfigItem(\n      \"https://code.jquery.com/jquery-3.5.0.min.js\", \"The URL to the jquery library.\"\n  )\n  ```\n- Perform a security audit to identify and sanitize any usage of `.html()` or `.append()` methods that handle untrusted HTML content within the JavaScript files in the repository.\n- Ensure that the updated jQuery version does not introduce breaking changes that affect the existing functionality. If there are breaking changes, update the code accordingly.\n\n### Code snippets to check\n\n-  \u2192 [astropy](https://github.com/testbed/astropy__astropy__5.0/tree//astropy) \u2192 [extern](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/extern) \u2192 [jquery](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/extern/jquery) \u2192 [data](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/extern/jquery/data) \u2192 [js](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/extern/jquery/data/js)- [Lines 1 - 1](https://github.com/testbed/astropy__astropy__5.0/blob//astropy/extern/jquery/data/js/jquery-3.6.0.min.js#L1-L1)\n\n This snippet shows the updated jQuery version 3.6.0 which is not vulnerable to the reported security issue.\n-  \u2192 [astropy](https://github.com/testbed/astropy__astropy__5.0/tree//astropy) \u2192 [table](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/table)- [Lines 1 - 107](https://github.com/testbed/astropy__astropy__5.0/blob//astropy/table/jsviewer.py#L1-L107)\n\n This snippet contains the configuration for the jQuery URL which might need to be updated to ensure the application uses the secure version of jQuery.",
    "ai_cost": {
        "search_embedding": 1.3e-07,
        "issue_classifier": 0.0020169999999999997,
        "snippet_processor": 0.10021000000000001,
        "issue_star_creation": 0.02848,
        "issue_star_solver": 0.06717000000000001,
        "bouncer": 0.03083
    },
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1711736378.959179,
        "relevant_snippets": [
            {
                "code": "name: Bug report\ndescription: Create a report describing unexpected or incorrect behavior in astropy.\nlabels: Bug\nbody:\n  - type: markdown\n    attributes:\n      value: >-\n        Thanks for taking the time to fill out this bug report!\n        Please have a search on our GitHub repository to see if a similar\n        issue has already been posted. If a similar issue is closed, have a\n        quick look to see if you are satisfied by the resolution.\n        If not please go ahead and open an issue!\n        Please check that the\n        [development version](https://docs.astropy.org/en/latest/development/workflow/get_devel_version.html)\n        still produces the same bug.\n  - type: textarea\n    attributes:\n      label: Description\n      description: >-\n        A clear and concise description of what the bug is.\n  - type: textarea\n    attributes:\n      label: Expected behavior\n      description: >-\n        A clear and concise description of what you expected to happen.\n  - type: textarea\n    attributes:\n      label: How to Reproduce\n      description: >-\n        A clear and concise description of what actually happened instead.\n        Was the output confusing or poorly described? Please provide steps to reproduce this bug.\n      value: |\n        1. Get package from '...'\n        2. Then run '...'\n        3. An error occurs.\n\n        ```python\n        # Put your Python code snippet here.\n        ```\n  - type: textarea\n    attributes:\n      label: Versions\n      description: Version of relevant packages.\n      value: |\n        import platform; print(platform.platform())\n        import sys; print(\"Python\", sys.version)\n        import astropy; print(\"astropy\", astropy.__version__)\n        import numpy; print(\"Numpy\", numpy.__version__)\n        import erfa; print(\"pyerfa\", erfa.__version__)\n        import scipy; print(\"Scipy\", scipy.__version__)\n        import matplotlib; print(\"Matplotlib\", matplotlib.__version__)",
                "filename": ".github/ISSUE_TEMPLATE/bug_report.yaml",
                "start_index": 0,
                "end_index": 1940,
                "start_line": 1,
                "end_line": 51,
                "max_line": 51,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 1.0
            },
            {
                "code": "/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */",
                "filename": "astropy/extern/jquery/data/js/jquery-3.6.0.min.js",
                "start_index": 0,
                "end_index": 88,
                "start_line": 1,
                "end_line": 1,
                "max_line": 2,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 1.0
            },
            {
                "code": "name: Feature request\ndescription: Suggest an idea to improve astropy.\nlabels: \"Feature Request\"\nbody:\n  - type: markdown\n    attributes:\n      value: >-\n        Thanks for taking the time to fill out this feature request!\n        Please have a search on our GitHub repository to see if a similar\n        issue has already been posted. If a similar issue is closed, have a\n        quick look to see if you are satisfied by the resolution.\n        If not please go ahead and open an issue!\n  - type: textarea\n    attributes:\n      label: What is the problem this feature will solve?\n      description: >-\n        What are you trying to do, that you are unable to achieve with astropy\n        and its affiliated packages as it currently stands?\n  - type: textarea\n    attributes:\n      label: Describe the desired outcome\n      description: >-\n        Clear and concise description of what you want to happen. Please use examples\n        of real world use cases that this would help with, and how it solves the\n        problem described above. If you want to, you can suggest a draft design or API\n        so we can have a deeper discussion on the feature.\n  - type: textarea\n    attributes:\n      label: Additional context\n      description: >-\n        Add any other context, links, etc. relevant to the feature request.\n        You may also include screenshots if necessary.",
                "filename": ".github/ISSUE_TEMPLATE/feature_request.yaml",
                "start_index": 0,
                "end_index": 1374,
                "start_line": 1,
                "end_line": 32,
                "max_line": 32,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "/*!\n * jQuery JavaScript Library v3.6.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-03-02T17:08Z\n */",
                "filename": "astropy/extern/jquery/data/js/jquery-3.6.0.js",
                "start_index": 0,
                "end_index": 267,
                "start_line": 1,
                "end_line": 10359,
                "max_line": 10881,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 1.0
            },
            {
                "code": "// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.6.0\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};",
                "filename": "astropy/extern/jquery/data/js/jquery-3.6.0.js",
                "start_index": 4107,
                "end_index": 6629,
                "start_line": 148,
                "end_line": 10868,
                "max_line": 10881,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 1.0
            },
            {
                "code": "// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;",
                "filename": "astropy/extern/jquery/data/js/jquery-3.6.0.js",
                "start_index": 285305,
                "end_index": 288131,
                "start_line": 10760,
                "end_line": 10856,
                "max_line": 10881,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "#error \"Since version 0.3, astropy.wcs public API should be imported as \\\"astropy_wcs/astropy_wcs_api.h\"",
                "filename": "astropy/wcs/include/astropy_wcs_api.h",
                "start_index": 0,
                "end_index": 104,
                "start_line": 1,
                "end_line": 1,
                "max_line": 1,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 0.0
            },
            {
                "code": "# Licensed under a 3-clause BSD style license - see LICENSE.rst\n\nfrom os.path import abspath, dirname, join\n\nimport astropy.config as _config\nimport astropy.io.registry as io_registry\nfrom astropy import extern\n\nfrom .table import Table\n\n\nclass Conf(_config.ConfigNamespace):\n    \"\"\"\n    Configuration parameters for `astropy.table.jsviewer`.\n    \"\"\"\n\n    jquery_url = _config.ConfigItem(\n        \"https://code.jquery.com/jquery-3.6.0.min.js\", \"The URL to the jquery library.\"\n    )\n\n    datatables_url = _config.ConfigItem(\n        \"https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js\",\n        \"The URL to the jquery datatables library.\",\n    )\n\n    css_urls = _config.ConfigItem(\n        [\"https://cdn.datatables.net/1.10.12/css/jquery.dataTables.css\"],\n        \"The URLs to the css file(s) to include.\",\n        cfgtype=\"string_list\",\n    )\n\n\nconf = Conf()\n\n\nEXTERN_JS_DIR = abspath(join(dirname(extern.__file__), \"jquery\", \"data\", \"js\"))\nEXTERN_CSS_DIR = abspath(join(dirname(extern.__file__), \"jquery\", \"data\", \"css\"))\n\n_SORTING_SCRIPT_PART_1 = \"\"\"\nvar astropy_sort_num = function(a, b) {{\n    var a_num = parseFloat(a);\n    var b_num = parseFloat(b);\n\n    if (isNaN(a_num) && isNaN(b_num))\n        return ((a < b) ? -1 : ((a > b) ? 1 : 0));\n    else if (!isNaN(a_num) && !isNaN(b_num))\n        return ((a_num < b_num) ? -1 : ((a_num > b_num) ? 1 : 0));\n    else\n        return isNaN(a_num) ? -1 : 1;\n}}\n\"\"\"\n\n_SORTING_SCRIPT_PART_2 = \"\"\"\njQuery.extend( jQuery.fn.dataTableExt.oSort, {{\n    \"optionalnum-asc\": astropy_sort_num,\n    \"optionalnum-desc\": function (a,b) {{ return -astropy_sort_num(a, b); }}\n}});\n\"\"\"\n\nIPYNB_JS_SCRIPT = \"\"\"\n<script>\n%(sorting_script1)s\nrequire.config({{paths: {{\n    datatables: '{datatables_url}'\n}}}});\nrequire([\"datatables\"], function(){{\n    console.log(\"$('#{tid}').dataTable()\");\n    %(sorting_script2)s\n    $('#{tid}').dataTable({{\n        order: [],\n        pageLength: {display_length},\n        lengthMenu: {display_length_menu},\n        pagingType: \"full_numbers\",\n        columnDefs: [{{targets: {sort_columns}, type: \"optionalnum\"}}]\n    }});\n}});\n</script>\n\"\"\" % dict(  # noqa: UP031\n    sorting_script1=_SORTING_SCRIPT_PART_1, sorting_script2=_SORTING_SCRIPT_PART_2\n)\n\nHTML_JS_SCRIPT = (\n    _SORTING_SCRIPT_PART_1\n    + _SORTING_SCRIPT_PART_2\n    + \"\"\"\n$(document).ready(function() {{\n    $('#{tid}').dataTable({{\n        order: [],\n        pageLength: {display_length},\n        lengthMenu: {display_length_menu},\n        pagingType: \"full_numbers\",\n        columnDefs: [{{targets: {sort_columns}, type: \"optionalnum\"}}]\n    }});\n}} );\n\"\"\"\n)\n\n\n# Default CSS for the JSViewer writer\nDEFAULT_CSS = \"\"\"\\\nbody {font-family: sans-serif;}\ntable.dataTable {width: auto !important; margin: 0 !important;}\n.dataTables_filter, .dataTables_paginate {float: left !important; margin-left:1em}\n\"\"\"\n\n\n# Default CSS used when rendering a table in the IPython notebook",
                "filename": "astropy/table/jsviewer.py",
                "start_index": 0,
                "end_index": 2912,
                "start_line": 1,
                "end_line": 107,
                "max_line": 225,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "jQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, parserErrorElem;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {}\n\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\n\tif ( !xml || parserErrorElem ) {\n\t\tjQuery.error( \"Invalid XML: \" + (\n\t\t\tparserErrorElem ?\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\n\t\t\t\t\treturn el.textContent;\n\t\t\t\t} ).join( \"\\n\" ) :\n\t\t\t\tdata\n\t\t) );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;",
                "filename": "astropy/extern/jquery/data/js/jquery-3.6.0.js",
                "start_index": 233622,
                "end_index": 236318,
                "start_line": 3080,
                "end_line": 8892,
                "max_line": 10881,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "# Licensed under a 3-clause BSD style license - see LICENSE.rst\n\n# STDLIB\nimport contextlib\nimport os\nimport re\nfrom math import ceil\n\nfrom astropy import online_docs_root\nfrom astropy.io.votable import exceptions\nfrom astropy.utils.xml.writer import XMLWriter, xml_escape\n\nhtml_header = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html\n        PUBLIC \"-//W3C//DTD XHTML Basic 1.0//EN\"\n        \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\">\n\"\"\"\n\ndefault_style = \"\"\"\nbody {\nfont-family: sans-serif\n}\na {\ntext-decoration: none\n}\n.highlight {\ncolor: red;\nfont-weight: bold;\ntext-decoration: underline;\n}\n.green { background-color: #ddffdd }\n.red   { background-color: #ffdddd }\n.yellow { background-color: #ffffdd }\ntr:hover { background-color: #dddddd }\ntable {\n        border-width: 1px;\n        border-spacing: 0px;\n        border-style: solid;\n        border-color: gray;\n        border-collapse: collapse;\n        background-color: white;\n        padding: 5px;\n}\ntable th {\n        border-width: 1px;\n        padding: 5px;\n        border-style: solid;\n        border-color: gray;\n}\ntable td {\n        border-width: 1px;\n        padding: 5px;\n        border-style: solid;\n        border-color: gray;\n}\n\"\"\"\n\n\n@contextlib.contextmanager\ndef make_html_header(w):\n    w.write(html_header)\n    with w.tag(\"html\", xmlns=\"http://www.w3.org/1999/xhtml\", lang=\"en-US\"):\n        with w.tag(\"head\"):\n            w.element(\"title\", \"VO Validation results\")\n            w.element(\"style\", default_style)\n\n            with w.tag(\"body\"):\n                yield\n\n\ndef write_source_line(w, line, nchar=0):\n    part1 = xml_escape(line[:nchar].decode(\"utf-8\"))\n    char = xml_escape(line[nchar : nchar + 1].decode(\"utf-8\"))\n    part2 = xml_escape(line[nchar + 1 :].decode(\"utf-8\"))\n\n    w.write(\"  \")\n    w.write(part1)\n    w.write(f'<span class=\"highlight\">{char}</span>')\n    w.write(part2)\n    w.write(\"\\n\\n\")\n\n\ndef write_warning(w, line, xml_lines):\n    warning = exceptions.parse_vowarning(line)\n    if not warning[\"is_something\"]:\n        w.data(line)\n    else:\n        w.write(f\"Line {warning['nline']:d}: \")\n        if warning[\"warning\"]:\n            w.write(\n                '<a href=\"{}/{}\">{}</a>: '.format(\n                    online_docs_root, warning[\"doc_url\"], warning[\"warning\"]\n                )\n            )\n        msg = warning[\"message\"]\n        if not isinstance(warning[\"message\"], str):\n            msg = msg.decode(\"utf-8\")\n        w.write(xml_escape(msg))\n        w.write(\"\\n\")\n        if 1 <= warning[\"nline\"] < len(xml_lines):\n            write_source_line(w, xml_lines[warning[\"nline\"] - 1], warning[\"nchar\"])",
                "filename": "astropy/io/votable/validator/html.py",
                "start_index": 0,
                "end_index": 2637,
                "start_line": 1,
                "end_line": 101,
                "max_line": 312,
                "git_instance": "github",
                "repo_name": "testbed/astropy__astropy__5.0",
                "sha": "",
                "context_relevance": 0.2
            }
        ],
        "classification": "bug",
        "snippet_processor_task": {
            "astropy/extern/jquery/data/js/jquery-3.6.0.min.js": [
                {
                    "chunk": {
                        "code": "/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */",
                        "filename": "astropy/extern/jquery/data/js/jquery-3.6.0.min.js",
                        "start_index": 0,
                        "end_index": 88,
                        "start_line": 1,
                        "end_line": 1,
                        "max_line": 2,
                        "git_instance": "github",
                        "repo_name": "testbed/astropy__astropy__5.0",
                        "sha": ""
                    },
                    "reason_for_relevance": "This snippet shows the updated jQuery version 3.6.0 which is not vulnerable to the reported security issue."
                }
            ],
            "astropy/table/jsviewer.py": [
                {
                    "chunk": {
                        "code": "# Licensed under a 3-clause BSD style license - see LICENSE.rst\n\nfrom os.path import abspath, dirname, join\n\nimport astropy.config as _config\nimport astropy.io.registry as io_registry\nfrom astropy import extern\n\nfrom .table import Table\n\n\nclass Conf(_config.ConfigNamespace):\n    \"\"\"\n    Configuration parameters for `astropy.table.jsviewer`.\n    \"\"\"\n\n    jquery_url = _config.ConfigItem(\n        \"https://code.jquery.com/jquery-3.6.0.min.js\", \"The URL to the jquery library.\"\n    )\n\n    datatables_url = _config.ConfigItem(\n        \"https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js\",\n        \"The URL to the jquery datatables library.\",\n    )\n\n    css_urls = _config.ConfigItem(\n        [\"https://cdn.datatables.net/1.10.12/css/jquery.dataTables.css\"],\n        \"The URLs to the css file(s) to include.\",\n        cfgtype=\"string_list\",\n    )\n\n\nconf = Conf()\n\n\nEXTERN_JS_DIR = abspath(join(dirname(extern.__file__), \"jquery\", \"data\", \"js\"))\nEXTERN_CSS_DIR = abspath(join(dirname(extern.__file__), \"jquery\", \"data\", \"css\"))\n\n_SORTING_SCRIPT_PART_1 = \"\"\"\nvar astropy_sort_num = function(a, b) {{\n    var a_num = parseFloat(a);\n    var b_num = parseFloat(b);\n\n    if (isNaN(a_num) && isNaN(b_num))\n        return ((a < b) ? -1 : ((a > b) ? 1 : 0));\n    else if (!isNaN(a_num) && !isNaN(b_num))\n        return ((a_num < b_num) ? -1 : ((a_num > b_num) ? 1 : 0));\n    else\n        return isNaN(a_num) ? -1 : 1;\n}}\n\"\"\"\n\n_SORTING_SCRIPT_PART_2 = \"\"\"\njQuery.extend( jQuery.fn.dataTableExt.oSort, {{\n    \"optionalnum-asc\": astropy_sort_num,\n    \"optionalnum-desc\": function (a,b) {{ return -astropy_sort_num(a, b); }}\n}});\n\"\"\"\n\nIPYNB_JS_SCRIPT = \"\"\"\n<script>\n%(sorting_script1)s\nrequire.config({{paths: {{\n    datatables: '{datatables_url}'\n}}}});\nrequire([\"datatables\"], function(){{\n    console.log(\"$('#{tid}').dataTable()\");\n    %(sorting_script2)s\n    $('#{tid}').dataTable({{\n        order: [],\n        pageLength: {display_length},\n        lengthMenu: {display_length_menu},\n        pagingType: \"full_numbers\",\n        columnDefs: [{{targets: {sort_columns}, type: \"optionalnum\"}}]\n    }});\n}});\n</script>\n\"\"\" % dict(  # noqa: UP031\n    sorting_script1=_SORTING_SCRIPT_PART_1, sorting_script2=_SORTING_SCRIPT_PART_2\n)\n\nHTML_JS_SCRIPT = (\n    _SORTING_SCRIPT_PART_1\n    + _SORTING_SCRIPT_PART_2\n    + \"\"\"\n$(document).ready(function() {{\n    $('#{tid}').dataTable({{\n        order: [],\n        pageLength: {display_length},\n        lengthMenu: {display_length_menu},\n        pagingType: \"full_numbers\",\n        columnDefs: [{{targets: {sort_columns}, type: \"optionalnum\"}}]\n    }});\n}} );\n\"\"\"\n)\n\n\n# Default CSS for the JSViewer writer\nDEFAULT_CSS = \"\"\"\\\nbody {font-family: sans-serif;}\ntable.dataTable {width: auto !important; margin: 0 !important;}\n.dataTables_filter, .dataTables_paginate {float: left !important; margin-left:1em}\n\"\"\"\n\n\n# Default CSS used when rendering a table in the IPython notebook",
                        "filename": "astropy/table/jsviewer.py",
                        "start_index": 0,
                        "end_index": 2912,
                        "start_line": 1,
                        "end_line": 107,
                        "max_line": 225,
                        "git_instance": "github",
                        "repo_name": "testbed/astropy__astropy__5.0",
                        "sha": ""
                    },
                    "reason_for_relevance": "This snippet contains the configuration for the jQuery URL which might need to be updated to ensure the application uses the secure version of jQuery."
                }
            ]
        },
        "solution_task": "- Update the jQuery version in the `astropy/extern/jquery/data/js` directory to 3.5.0 or newer to address the vulnerabilities CVE-2020-11022 and CVE-2020-11023.\n- Modify the `astropy/table/jsviewer.py` configuration to point to the updated jQuery version:\n  ```python\n  jquery_url = _config.ConfigItem(\n      \"https://code.jquery.com/jquery-3.5.0.min.js\", \"The URL to the jquery library.\"\n  )\n  ```\n- Perform a security audit to identify and sanitize any usage of `.html()` or `.append()` methods that handle untrusted HTML content within the JavaScript files in the repository.\n- Ensure that the updated jQuery version does not introduce breaking changes that affect the existing functionality. If there are breaking changes, update the code accordingly.",
        "bouncer_response": {
            "score": 9,
            "criteria": "The RESPONSE delivers precise, actionable, and highly relevant hints and solutions that can directly lead to resolving the issues outlined in the PROMPT.",
            "supporting_evidence": "The RESPONSE provides a clear and actionable set of steps to address the security vulnerabilities associated with jQuery 3.1.1. It suggests updating jQuery to version 3.5.0 or newer, which is directly relevant to the expected behavior described in the PROMPT. The RESPONSE also includes a specific code snippet to update the jQuery URL in the `astropy/table/jsviewer.py` configuration, which is a necessary step in the update process. Additionally, it advises performing a security audit to identify and sanitize any usage of vulnerable methods, which is a prudent recommendation for maintaining security. The RESPONSE also considers the potential for breaking changes due to the update and suggests verifying and updating the existing functionality accordingly. Lastly, it provides links to code snippets that may need to be checked, which is helpful for locating the relevant sections of the codebase. The RESPONSE does not receive a perfect score because it does not explicitly mention testing the updated jQuery version for compatibility with the rest of the project, which is an important step in the update process.",
            "clarification_questions": "NONE"
        },
        "end_time": 1711736584.708572,
        "result": "- Update the jQuery version in the `astropy/extern/jquery/data/js` directory to 3.5.0 or newer to address the vulnerabilities CVE-2020-11022 and CVE-2020-11023.\n- Modify the `astropy/table/jsviewer.py` configuration to point to the updated jQuery version:\n  ```python\n  jquery_url = _config.ConfigItem(\n      \"https://code.jquery.com/jquery-3.5.0.min.js\", \"The URL to the jquery library.\"\n  )\n  ```\n- Perform a security audit to identify and sanitize any usage of `.html()` or `.append()` methods that handle untrusted HTML content within the JavaScript files in the repository.\n- Ensure that the updated jQuery version does not introduce breaking changes that affect the existing functionality. If there are breaking changes, update the code accordingly.\n\n### Code snippets to check\n\n-  \u2192 [astropy](https://github.com/testbed/astropy__astropy__5.0/tree//astropy) \u2192 [extern](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/extern) \u2192 [jquery](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/extern/jquery) \u2192 [data](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/extern/jquery/data) \u2192 [js](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/extern/jquery/data/js)- [Lines 1 - 1](https://github.com/testbed/astropy__astropy__5.0/blob//astropy/extern/jquery/data/js/jquery-3.6.0.min.js#L1-L1)\n\n This snippet shows the updated jQuery version 3.6.0 which is not vulnerable to the reported security issue.\n-  \u2192 [astropy](https://github.com/testbed/astropy__astropy__5.0/tree//astropy) \u2192 [table](https://github.com/testbed/astropy__astropy__5.0/tree//astropy/table)- [Lines 1 - 107](https://github.com/testbed/astropy__astropy__5.0/blob//astropy/table/jsviewer.py#L1-L107)\n\n This snippet contains the configuration for the jQuery URL which might need to be updated to ensure the application uses the secure version of jQuery.",
        "context_relevance": 0.5,
        "hypotheses": [],
        "groundedness_score": 1.0,
        "qa_relevance_reasons": {
            "reason": "Criteria: The RESPONSE is relevant and answers the entire PROMPT completely.\nSupporting Evidence: The RESPONSE directly addresses the security vulnerability in jQuery 3.1.1 mentioned in the PROMPT by providing a detailed action plan to update jQuery to a secure version, thus mitigating the risk of untrusted code execution. It also includes steps to update the configuration in the `astropy` project to use the new jQuery version and suggests a security audit to ensure safe usage of jQuery methods. Additionally, the RESPONSE provides a link to the code snippet showing the updated jQuery version, which is relevant to the PROMPT's request for updating jQuery in the `astropy` project. The RESPONSE fulfills all aspects of the PROMPT, making it highly relevant."
        },
        "qa_relevance": 1.0
    }
}