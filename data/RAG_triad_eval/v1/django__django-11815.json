{
    "id": "django__django-11815",
    "repo_name": "testbed/django__django__3.1",
    "task_id": 3426994540940214091,
    "title": "Migrations uses value of enum object instead of its name.",
    "body": "Description\n\t \n\t\t(last modified by oasl)\n\t \nWhen using Enum object as a default value for a CharField, the generated migration file uses the value of the Enum object instead of the its name. This causes a problem when using Django translation on the value of the Enum object. \nThe problem is that, when the Enum object value get translated to the users language, the old migration files raise an error stating that the Enum does not have the corresponding value. (because the Enum value is translated to another language)\nExample:\nLet say we have this code in models.py:\nfrom enum import Enum\nfrom django.utils.translation import gettext_lazy as _\nfrom django.db import models\nclass Status(Enum):\n\tGOOD = _('Good') # 'Good' will be translated\n\tBAD = _('Bad') # 'Bad' will be translated\n\tdef __str__(self):\n\t\treturn self.name\nclass Item(models.Model):\n\tstatus = models.CharField(default=Status.GOOD, max_length=128)\nIn the generated migration file, the code will be:\n...\n('status', models.CharField(default=Status('Good'), max_length=128))\n...\nAfter the translation, 'Good' will be translated to another word and it will not be part of the Status Enum class any more, so the migration file will raise the error on the previous line:\nValueError: 'Good' is not a valid Status\nShouldn't the code generated by the migration uses the name of the Status Enum 'GOOD', not the value of it, since it is changeable?\nIt should be:\n('status', models.CharField(default=Status['GOOD'], max_length=128))\nThis will be correct regardless of the translated word\n",
    "state": "closed",
    "repo_link": "https://github.com/testbed/django__django__3.1.git",
    "requested_commit": "",
    "mayil_response": "Based on the provided information, the solution to the issue is as follows:\n\n- Modify the `default` parameter in the `Item` model's `CharField` to use the `name` attribute of the `Status` Enum member.\n- Update the migration file to use the `name` attribute of the `Status` Enum member instead of the value.\n\nHere is the corrected code snippet for the `Item` model:\n\n```python\nclass Item(models.Model):\n    status = models.CharField(default=Status.GOOD.name, max_length=128)\n```\n\nAnd the corrected migration file snippet should look like this:\n\n```python\n...\n('status', models.CharField(default=Status.GOOD.name, max_length=128))\n...\n```\n\nMake sure to generate a new migration after updating the model to reflect these changes.\n\n### Code snippets to check\n\n-  \u2192 [django](https://github.com/testbed/django__django__3.1/tree//django) \u2192 [core](https://github.com/testbed/django__django__3.1/tree//django/core) \u2192 [management](https://github.com/testbed/django__django__3.1/tree//django/core/management) \u2192 [commands](https://github.com/testbed/django__django__3.1/tree//django/core/management/commands)- [Lines 299 - 341](https://github.com/testbed/django__django__3.1/blob//django/core/management/commands/makemigrations.py#L299-L341)\n\n This snippet is from the 'makemigrations' command, which is responsible for generating migration files. The issue described is related to how default values are set in migrations, particularly for Enum fields. This snippet may contain the logic that needs to be changed to use the Enum name instead of its value.",
    "ai_cost": {
        "search_embedding": 1.3e-07,
        "issue_classifier": 0.00033,
        "snippet_processor": 0.050890000000000005,
        "issue_star_creation": 0.023889999999999998,
        "issue_star_solver": 0.04168000000000001,
        "bouncer": 0.02727
    },
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1711732771.33703,
        "relevant_snippets": [
            {
                "code": "for migration in app_migrations:\n                # Describe the migration",
                "filename": "django/core/management/commands/makemigrations.py",
                "start_index": 13742,
                "end_index": 13815,
                "start_line": 299,
                "end_line": 341,
                "max_line": 513,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "from django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"auth\", \"0001_initial\"),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name=\"permission\",\n            name=\"name\",\n            field=models.CharField(max_length=255, verbose_name=\"name\"),\n        ),\n    ]",
                "filename": "django/contrib/auth/migrations/0002_alter_permission_name_max_length.py",
                "start_index": 0,
                "end_index": 345,
                "start_line": 1,
                "end_line": 15,
                "max_line": 15,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "from django.db import migrations, models\n\n\ndef add_legacy_name(apps, schema_editor):\n    alias = schema_editor.connection.alias\n    ContentType = apps.get_model(\"contenttypes\", \"ContentType\")\n    for ct in ContentType.objects.using(alias):\n        try:\n            ct.name = apps.get_model(ct.app_label, ct.model)._meta.object_name\n        except LookupError:\n            ct.name = ct.model\n        ct.save()\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"contenttypes\", \"0001_initial\"),\n    ]\n\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"contenttype\",\n            options={\n                \"verbose_name\": \"content type\",\n                \"verbose_name_plural\": \"content types\",\n            },\n        ),\n        migrations.AlterField(\n            model_name=\"contenttype\",\n            name=\"name\",\n            field=models.CharField(max_length=100, null=True),\n        ),\n        migrations.RunPython(\n            migrations.RunPython.noop,\n            add_legacy_name,\n            hints={\"model_name\": \"contenttype\"},\n        ),\n        migrations.RemoveField(\n            model_name=\"contenttype\",\n            name=\"name\",\n        ),\n    ]",
                "filename": "django/contrib/contenttypes/migrations/0002_remove_content_type_name.py",
                "start_index": 0,
                "end_index": 1198,
                "start_line": 1,
                "end_line": 42,
                "max_line": 42,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "migrations.CreateModel",
                "filename": "django/contrib/auth/migrations/0001_initial.py",
                "start_index": 287,
                "end_index": 309,
                "start_line": 13,
                "end_line": 81,
                "max_line": 204,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "from django.contrib.auth import validators\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"auth\", \"0007_alter_validators_add_error_messages\"),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name=\"user\",\n            name=\"username\",\n            field=models.CharField(\n                error_messages={\"unique\": \"A user with that username already exists.\"},\n                help_text=(\n                    \"Required. 150 characters or fewer. Letters, digits and @/./+/-/_ \"\n                    \"only.\"\n                ),\n                max_length=150,\n                unique=True,\n                validators=[validators.UnicodeUsernameValidator()],\n                verbose_name=\"username\",\n            ),\n        ),\n    ]",
                "filename": "django/contrib/auth/migrations/0008_alter_user_username_max_length.py",
                "start_index": 0,
                "end_index": 813,
                "start_line": 1,
                "end_line": 26,
                "max_line": 26,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "from django.contrib.auth import validators\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"auth\", \"0006_require_contenttypes_0002\"),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name=\"user\",\n            name=\"username\",\n            field=models.CharField(\n                error_messages={\"unique\": \"A user with that username already exists.\"},\n                help_text=(\n                    \"Required. 30 characters or fewer. Letters, digits and @/./+/-/_ \"\n                    \"only.\"\n                ),\n                max_length=30,\n                unique=True,\n                validators=[validators.UnicodeUsernameValidator()],\n                verbose_name=\"username\",\n            ),\n        ),\n    ]",
                "filename": "django/contrib/auth/migrations/0007_alter_validators_add_error_messages.py",
                "start_index": 0,
                "end_index": 801,
                "start_line": 1,
                "end_line": 26,
                "max_line": 26,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "class Migration(migrations.Migration):",
                "filename": "django/contrib/auth/migrations/0001_initial.py",
                "start_index": 154,
                "end_index": 192,
                "start_line": 7,
                "end_line": 7,
                "max_line": 204,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "from django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"admin\", \"0002_logentry_remove_auto_add\"),\n    ]\n\n    # No database changes; adds choices to action_flag.\n    operations = [\n        migrations.AlterField(\n            model_name=\"logentry\",\n            name=\"action_flag\",\n            field=models.PositiveSmallIntegerField(\n                choices=[(1, \"Addition\"), (2, \"Change\"), (3, \"Deletion\")],\n                verbose_name=\"action flag\",\n            ),\n        ),\n    ]",
                "filename": "django/contrib/admin/migrations/0003_logentry_add_action_flag_choices.py",
                "start_index": 0,
                "end_index": 537,
                "start_line": 1,
                "end_line": 19,
                "max_line": 19,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "from django.contrib.auth import validators\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"auth\", \"0003_alter_user_email_max_length\"),\n    ]\n\n    # No database changes; modifies validators and error_messages (#13147).\n    operations = [\n        migrations.AlterField(\n            model_name=\"user\",\n            name=\"username\",\n            field=models.CharField(\n                error_messages={\"unique\": \"A user with that username already exists.\"},\n                max_length=30,\n                validators=[validators.UnicodeUsernameValidator()],\n                help_text=(\n                    \"Required. 30 characters or fewer. Letters, digits and @/./+/-/_ \"\n                    \"only.\"\n                ),\n                unique=True,\n                verbose_name=\"username\",\n            ),\n        ),\n    ]",
                "filename": "django/contrib/auth/migrations/0004_alter_user_username_opts.py",
                "start_index": 0,
                "end_index": 879,
                "start_line": 1,
                "end_line": 27,
                "max_line": 27,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            },
            {
                "code": "from django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"auth\", \"0009_alter_user_last_name_max_length\"),\n    ]\n\n    operations = [\n        migrations.AlterField(\n            model_name=\"group\",\n            name=\"name\",\n            field=models.CharField(max_length=150, unique=True, verbose_name=\"name\"),\n        ),\n    ]",
                "filename": "django/contrib/auth/migrations/0010_alter_group_name_max_length.py",
                "start_index": 0,
                "end_index": 377,
                "start_line": 1,
                "end_line": 15,
                "max_line": 15,
                "git_instance": "github",
                "repo_name": "testbed/django__django__3.1",
                "sha": "",
                "context_relevance": 0.2
            }
        ],
        "classification": "bug",
        "snippet_processor_task": {
            "django/core/management/commands/makemigrations.py": [
                {
                    "chunk": {
                        "code": "for migration in app_migrations:\n                # Describe the migration",
                        "filename": "django/core/management/commands/makemigrations.py",
                        "start_index": 13742,
                        "end_index": 13815,
                        "start_line": 299,
                        "end_line": 341,
                        "max_line": 513,
                        "git_instance": "github",
                        "repo_name": "testbed/django__django__3.1",
                        "sha": ""
                    },
                    "reason_for_relevance": "This snippet is from the 'makemigrations' command, which is responsible for generating migration files. The issue described is related to how default values are set in migrations, particularly for Enum fields. This snippet may contain the logic that needs to be changed to use the Enum name instead of its value."
                }
            ]
        },
        "solution_task": "Based on the provided information, the solution to the issue is as follows:\n\n- Modify the `default` parameter in the `Item` model's `CharField` to use the `name` attribute of the `Status` Enum member.\n- Update the migration file to use the `name` attribute of the `Status` Enum member instead of the value.\n\nHere is the corrected code snippet for the `Item` model:\n\n```python\nclass Item(models.Model):\n    status = models.CharField(default=Status.GOOD.name, max_length=128)\n```\n\nAnd the corrected migration file snippet should look like this:\n\n```python\n...\n('status', models.CharField(default=Status.GOOD.name, max_length=128))\n...\n```\n\nMake sure to generate a new migration after updating the model to reflect these changes.",
        "bouncer_response": {
            "score": 7,
            "criteria": "The RESPONSE must provide actionable, relevant guidance to more parts of the PROMPT's described issue to score higher.",
            "supporting_evidence": "The RESPONSE provides a clear and actionable solution to the problem described in the PROMPT by suggesting to modify the `default` parameter in the `Item` model's `CharField` to use the `name` attribute of the `Status` Enum member. It also correctly advises updating the migration file to reflect this change and to generate a new migration after updating the model. The RESPONSE includes corrected code snippets for both the model and the migration file, which are directly relevant to the issue. However, the RESPONSE does not address the underlying issue in Django's migration system that causes the Enum value to be used instead of the name. While the RESPONSE provides a workaround, it does not suggest a permanent fix to the migration generation process itself, which would prevent the issue from recurring in future migrations. Therefore, the RESPONSE is not complete in terms of providing a comprehensive solution to the problem, but it does offer a practical immediate fix.",
            "clarification_questions": "NONE"
        },
        "end_time": 1711732973.011182,
        "result": "Based on the provided information, the solution to the issue is as follows:\n\n- Modify the `default` parameter in the `Item` model's `CharField` to use the `name` attribute of the `Status` Enum member.\n- Update the migration file to use the `name` attribute of the `Status` Enum member instead of the value.\n\nHere is the corrected code snippet for the `Item` model:\n\n```python\nclass Item(models.Model):\n    status = models.CharField(default=Status.GOOD.name, max_length=128)\n```\n\nAnd the corrected migration file snippet should look like this:\n\n```python\n...\n('status', models.CharField(default=Status.GOOD.name, max_length=128))\n...\n```\n\nMake sure to generate a new migration after updating the model to reflect these changes.\n\n### Code snippets to check\n\n-  \u2192 [django](https://github.com/testbed/django__django__3.1/tree//django) \u2192 [core](https://github.com/testbed/django__django__3.1/tree//django/core) \u2192 [management](https://github.com/testbed/django__django__3.1/tree//django/core/management) \u2192 [commands](https://github.com/testbed/django__django__3.1/tree//django/core/management/commands)- [Lines 299 - 341](https://github.com/testbed/django__django__3.1/blob//django/core/management/commands/makemigrations.py#L299-L341)\n\n This snippet is from the 'makemigrations' command, which is responsible for generating migration files. The issue described is related to how default values are set in migrations, particularly for Enum fields. This snippet may contain the logic that needs to be changed to use the Enum name instead of its value.",
        "context_relevance": 0.2,
        "hypotheses": [],
        "groundedness_score": 1.0,
        "qa_relevance_reasons": {
            "reason": "Criteria: The RESPONSE is relevant to the entire PROMPT and answers the entire PROMPT completely.\nSupporting Evidence: The RESPONSE directly addresses the issue described in the PROMPT by providing a solution to the problem of using Enum object values in Django migrations. It offers a corrected code snippet for the `Item` model and the migration file, which is exactly what the PROMPT is seeking. Additionally, the RESPONSE includes a reference to the relevant code in the Django repository, which is related to the generation of migration files and could contain the logic that needs to be modified. This shows that the RESPONSE is fully relevant and provides a comprehensive answer to the PROMPT."
        },
        "qa_relevance": 1.0
    }
}