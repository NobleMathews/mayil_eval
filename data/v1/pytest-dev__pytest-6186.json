{
    "id": "pytest-dev__pytest-6186",
    "repo_name": "testbed/pytest-dev__pytest__5.2",
    "task_id": 3411791387703718456,
    "title": "Show deprecation warning if junit_family is not set",
    "body": "Show a deprecation warning if the user has not configured `junit_family` (#6178)\n",
    "state": "closed",
    "repo_link": "https://github.com/testbed/pytest-dev__pytest__5.2.git",
    "requested_commit": "",
    "mayil_response": "Doesn't seem like we have fully grasped all the specifics of this ticket \ud83d\ude41.                   But we've outlined some ideas that might help you get started:\n\n- Set a default value for `junit_family` in the configuration handling code to avoid the deprecation warning when it is not set by the user.\n- Modify the `check_junit_family_deprecation` function to only call `show_deprecation_warning` if the `junit_family` configuration is set to a deprecated value.\n- Ensure that the default value for `junit_family` is a non-deprecated value that is expected to be supported in the future.\n\n### Code snippets to check\n\n- - [Lines 73 - 108](https://github.com/testbed/pytest-dev__pytest__5.2/blob//.pre-commit-config.yaml#L73-L108)\n\n This snippet contains a pre-commit hook configuration that checks for deprecated usage of the 'py' library. Since the issue is about showing a deprecation warning, this hook could be modified or a new one could be added to check for the 'junit_family' configuration and warn if it is not set.",
    "ai_cost": {
        "search_embedding": 1.3e-07,
        "issue_classifier": 0.000584,
        "snippet_processor": 0.051460000000000006,
        "issue_star_creation": 0.02536,
        "issue_star_solver": 0.043750000000000004,
        "bouncer": 0.02
    },
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1711735221.772526,
        "relevant_snippets": [
            {
                "code": "# shim for pylib going away\n# if pylib is installed this file will get skipped\n# (`py/__init__.py` has higher precedence)\nimport sys\n\nimport _pytest._py.error as error\nimport _pytest._py.path as path\n\nsys.modules[\"py.error\"] = error\nsys.modules[\"py.path\"] = path",
                "filename": "src/py.py",
                "start_index": 0,
                "end_index": 262,
                "start_line": 1,
                "end_line": 10,
                "max_line": 10,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "blank_issues_enabled: false\ncontact_links:\n  - name: \u2753 Support Question\n    url: https://github.com/pytest-dev/pytest/discussions\n    about: Use GitHub's new Discussions feature for questions",
                "filename": ".github/ISSUE_TEMPLATE/config.yml",
                "start_index": 0,
                "end_index": 191,
                "start_line": 1,
                "end_line": 5,
                "max_line": 5,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "rtd:\n  project: pytest",
                "filename": ".github/config.yml",
                "start_index": 0,
                "end_index": 22,
                "start_line": 1,
                "end_line": 2,
                "max_line": 2,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "# reference: https://docs.codecov.io/docs/codecovyml-reference\ncoverage:\n  status:\n    patch: true\n    project: false\ncomment: false",
                "filename": "codecov.yml",
                "start_index": 0,
                "end_index": 132,
                "start_line": 1,
                "end_line": 6,
                "max_line": 6,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "# info:\n# * https://help.github.com/en/articles/displaying-a-sponsor-button-in-your-repository\n# * https://tidelift.com/subscription/how-to-connect-tidelift-with-github\ntidelift: pypi/pytest\nopen_collective: pytest",
                "filename": ".github/FUNDING.yml",
                "start_index": 0,
                "end_index": 214,
                "start_line": 1,
                "end_line": 5,
                "max_line": 5,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "import pytest\n\nSKIP = True\n\n\n@pytest.mark.parametrize(\"x\", range(5000))\ndef test_foo(x):\n    if SKIP:\n        pytest.skip(\"heh\")",
                "filename": "bench/skip.py",
                "start_index": 0,
                "end_index": 128,
                "start_line": 1,
                "end_line": 9,
                "max_line": 9,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "\"\"\"\nThis script is part of the pytest release process which is triggered manually in the Actions\ntab of the repository.\n\nThe user will need to enter the base branch to start the release from (for example\n``6.1.x`` or ``main``) and if it should be a major release.\n\nThe appropriate version will be obtained based on the given branch automatically.\n\nAfter that, it will create a release using the `release` tox environment, and push a new PR.\n\n**Token**: currently the token from the GitHub Actions is used, pushed with\n`pytest bot <pytestbot@gmail.com>` commit author.\n\"\"\"\nimport argparse\nimport re\nfrom pathlib import Path\nfrom subprocess import check_call\nfrom subprocess import check_output\nfrom subprocess import run\n\nfrom colorama import Fore\nfrom colorama import init\nfrom github3.repos import Repository\n\n\nclass InvalidFeatureRelease(Exception):\n    pass\n\n\nSLUG = \"pytest-dev/pytest\"\n\nPR_BODY = \"\"\"\\\nCreated automatically from manual trigger.\n\nOnce all builds pass and it has been **approved** by one or more maintainers, the build\ncan be released by pushing a tag `{version}` to this repository.\n\"\"\"\n\n\ndef login(token: str) -> Repository:\n    import github3\n\n    github = github3.login(token=token)\n    owner, repo = SLUG.split(\"/\")\n    return github.repository(owner, repo)",
                "filename": "scripts/prepare-release-pr.py",
                "start_index": 0,
                "end_index": 1281,
                "start_line": 1,
                "end_line": 46,
                "max_line": 174,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "import sys\n\nif __name__ == \"__main__\":\n    import cProfile\n    import pytest  # NOQA\n    import pstats\n\n    script = sys.argv[1:] if len(sys.argv) > 1 else [\"empty.py\"]\n    cProfile.run(\"pytest.cmdline.main(%r)\" % script, \"prof\")\n    p = pstats.Stats(\"prof\")\n    p.strip_dirs()\n    p.sort_stats(\"cumulative\")\n    print(p.print_stats(500))",
                "filename": "bench/bench.py",
                "start_index": 0,
                "end_index": 338,
                "start_line": 1,
                "end_line": 13,
                "max_line": 13,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "from setuptools import setup\n\nif __name__ == \"__main__\":\n    setup()",
                "filename": "setup.py",
                "start_index": 0,
                "end_index": 68,
                "start_line": 1,
                "end_line": 4,
                "max_line": 4,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            },
            {
                "code": "-   repo: local\n    hooks:\n    -   id: rst\n        name: rst\n        entry: rst-lint --encoding utf-8\n        files: ^(RELEASING.rst|README.rst|TIDELIFT.rst)$\n        language: python\n        additional_dependencies: [pygments, restructuredtext_lint]\n    -   id: changelogs-rst\n        name: changelog filenames\n        language: fail\n        entry: 'changelog files must be named ####.(breaking|bugfix|deprecation|doc|feature|improvement|trivial|vendor).rst'\n        exclude: changelog/(\\d+\\.(breaking|bugfix|deprecation|doc|feature|improvement|trivial|vendor).rst|README.rst|_template.rst)\n        files: ^changelog/\n    -   id: py-deprecated\n        name: py library is deprecated\n        language: pygrep\n        entry: >\n            (?x)\\bpy\\.(\n                _code\\.|\n                builtin\\.|\n                code\\.|\n                io\\.|\n                path\\.local\\.sysfind|\n                process\\.|\n                std\\.|\n                error\\.|\n                xml\\.\n            )\n        types: [python]\n    -   id: py-path-deprecated\n        name: py.path usage is deprecated\n        exclude: docs|src/_pytest/deprecated.py|testing/deprecated_test.py|src/_pytest/legacypath.py\n        language: pygrep\n        entry: \\bpy\\.path\\.local\n        types: [python]",
                "filename": ".pre-commit-config.yaml",
                "start_index": 2166,
                "end_index": 3442,
                "start_line": 73,
                "end_line": 108,
                "max_line": 108,
                "git_instance": "github",
                "repo_name": "testbed/pytest-dev__pytest__5.2",
                "sha": ""
            }
        ],
        "classification": "bug",
        "snippet_processor_task": {
            ".pre-commit-config.yaml": [
                {
                    "chunk": {
                        "code": "-   repo: local\n    hooks:\n    -   id: rst\n        name: rst\n        entry: rst-lint --encoding utf-8\n        files: ^(RELEASING.rst|README.rst|TIDELIFT.rst)$\n        language: python\n        additional_dependencies: [pygments, restructuredtext_lint]\n    -   id: changelogs-rst\n        name: changelog filenames\n        language: fail\n        entry: 'changelog files must be named ####.(breaking|bugfix|deprecation|doc|feature|improvement|trivial|vendor).rst'\n        exclude: changelog/(\\d+\\.(breaking|bugfix|deprecation|doc|feature|improvement|trivial|vendor).rst|README.rst|_template.rst)\n        files: ^changelog/\n    -   id: py-deprecated\n        name: py library is deprecated\n        language: pygrep\n        entry: >\n            (?x)\\bpy\\.(\n                _code\\.|\n                builtin\\.|\n                code\\.|\n                io\\.|\n                path\\.local\\.sysfind|\n                process\\.|\n                std\\.|\n                error\\.|\n                xml\\.\n            )\n        types: [python]\n    -   id: py-path-deprecated\n        name: py.path usage is deprecated\n        exclude: docs|src/_pytest/deprecated.py|testing/deprecated_test.py|src/_pytest/legacypath.py\n        language: pygrep\n        entry: \\bpy\\.path\\.local\n        types: [python]",
                        "filename": ".pre-commit-config.yaml",
                        "start_index": 2166,
                        "end_index": 3442,
                        "start_line": 73,
                        "end_line": 108,
                        "max_line": 108,
                        "git_instance": "github",
                        "repo_name": "testbed/pytest-dev__pytest__5.2",
                        "sha": ""
                    },
                    "reason_for_relevance": "This snippet contains a pre-commit hook configuration that checks for deprecated usage of the 'py' library. Since the issue is about showing a deprecation warning, this hook could be modified or a new one could be added to check for the 'junit_family' configuration and warn if it is not set."
                }
            ]
        },
        "solution_task": "- Set a default value for `junit_family` in the configuration handling code to avoid the deprecation warning when it is not set by the user.\n- Modify the `check_junit_family_deprecation` function to only call `show_deprecation_warning` if the `junit_family` configuration is set to a deprecated value.\n- Ensure that the default value for `junit_family` is a non-deprecated value that is expected to be supported in the future.",
        "bouncer_response": {
            "score": 3,
            "criteria": "The RESPONSE offers some actionable advice but is incomplete or partially relevant to the described bug in the PROMPT.",
            "supporting_evidence": "The RESPONSE suggests setting a default value for `junit_family` and modifying the `check_junit_family_deprecation` function to only show a deprecation warning if a deprecated value is set. This is actionable advice but does not directly address the requirement of showing a deprecation warning when `junit_family` is not set, as described in the PROMPT. The RESPONSE also suggests ensuring that the default value is non-deprecated, which is good practice but again does not address the specific issue of warning the user when the setting is not configured. The mention of modifying a pre-commit hook is tangentially related but does not provide a direct solution to the problem described in the PROMPT.",
            "clarification_questions": "NONE"
        },
        "end_time": 1711735252.02965,
        "result": "Doesn't seem like we have fully grasped all the specifics of this ticket \ud83d\ude41.                   But we've outlined some ideas that might help you get started:\n\n- Set a default value for `junit_family` in the configuration handling code to avoid the deprecation warning when it is not set by the user.\n- Modify the `check_junit_family_deprecation` function to only call `show_deprecation_warning` if the `junit_family` configuration is set to a deprecated value.\n- Ensure that the default value for `junit_family` is a non-deprecated value that is expected to be supported in the future.\n\n### Code snippets to check\n\n- - [Lines 73 - 108](https://github.com/testbed/pytest-dev__pytest__5.2/blob//.pre-commit-config.yaml#L73-L108)\n\n This snippet contains a pre-commit hook configuration that checks for deprecated usage of the 'py' library. Since the issue is about showing a deprecation warning, this hook could be modified or a new one could be added to check for the 'junit_family' configuration and warn if it is not set."
    }
}