{
    "id": "BEAM-3124",
    "repo_name": "testbed/aftersell",
    "title": "Fix notes widget editing UX",
    "body": "\n[IMG_1]\n\n[IMG_2]\n\n* There should be no \"Active\" vs \"Inactive\" state of a note. If someone doesn't want a note, they should delete it. We can remove the checkbox beside \"Add a gift message?\" in the edit modal\n* Add a title above the text box in the edit modal: \"Checkbox title\"\n* Reword \"Define text box placeholder\" to \"Text box placeholder\"\n* Change defaults:\n  * Checkbox title from \"Planning to gift this? Let us know!\" to \"Add a gift message\"\n  * Text box placeholder from \"Write your note here!\" to \"Write your note here\u2026\"\n---\nGlossary:\nimage_2: The image displays a user interface section titled \"Content\" with a downward-pointing arrow next to it, suggesting it can be expanded or collapsed. Below this title, there is a subsection labeled \"Notes\" in a larger font. Directly underneath, there is a toggle switch labeled \"Add a gift message?\" with the word \"active\" highlighted in green, indicating the toggle is in the 'on' position. To the right of the toggle switch, there are two buttons: \"Reorder\" and \"Add note,\" both enclosed in a rounded rectangle shape. In the far right corner, there are two icons: a pencil, indicating an edit function, and a trash can, suggesting a delete function. The overall layout is clean with plenty of white space around the elements.\nimage_3: The image displays a user interface for an \"Edit Note\" modal. At the top of the modal, there is a title \"Edit Note\" aligned to the left. Below the title, there are two options, each with a checkbox to the left of the text. The first option is labeled \"Add a gift message?\" and the checkbox is checked, indicating it is currently selected. The second option is labeled \"Show text box when selected\" and also has a checked checkbox.\n\nBelow these options, there is a label \"Define text box placeholder\" followed by a text box. Inside the text box, the placeholder text \"Write your note here!\" is visible. The text box has a rectangular shape with rounded corners and a thin border.\n\nAt the bottom of the modal, there are two buttons aligned to the right. The button on the left is labeled \"Cancel\" and the button on the right is labeled \"Confirm\". Both buttons have a rectangular shape with rounded corners; the \"Cancel\" button has a light outline, while the \"Confirm\" button is filled with a darker shade, suggesting it is the primary action.\n\nThe overall color scheme of the modal is monochromatic with shades of gray, and the modal appears to be overlaid on a lighter background, suggesting it is a pop-up over the main content.\ngithub_pr_1: https://github.com/beam-commerce/aftersell/pull/1107\n\n",
    "classification": "bug",
    "state": "closed",
    "repo_link": "https://github.com/testbed/aftersell.git",
    "requested_commit": null,
    "issue_tracker_identifier": "",
    "ai_cost": {
        "issue_classifier": 0.000452,
        "issue_summarizer": 0.01466,
        "search_embedding": 7.761e-05,
        "documentation_agent": 0.005960000000000001,
        "repo_summary": 0.09163100000000002,
        "issue_star_solver": 0.1128325,
        "snippet_processor": 0.02287,
        "bouncer": 0.03977
    },
    "attachments": [
        {
            "title": "Beam 3124/fix notes widget editing ux",
            "url": "https://github.com/beam-commerce/aftersell/pull/1107",
            "content": "",
            "placeholder_tag": "github_pr_1",
            "content_type": "ExternalAssetsType.GITHUB_PR"
        }
    ],
    "inline_assets": [
        {
            "title": "",
            "url": "https://uploads.linear.app/a4f50fbf-738c-4ae7-b7ca-dc198278934f/05960260-e422-41e8-8d15-d13852cebcdf/a6487e8a-d104-4029-947c-22549f96bb48",
            "content": "",
            "placeholder_tag": "image_2",
            "content_type": "ExternalAssetsType.IMAGE"
        },
        {
            "title": "",
            "url": "https://uploads.linear.app/a4f50fbf-738c-4ae7-b7ca-dc198278934f/17f9d32d-9dbf-4c71-aefb-f3c26f8a2e21/c66a78fd-4568-482a-bafc-7fb2ffba4ad5",
            "content": "",
            "placeholder_tag": "image_3",
            "content_type": "ExternalAssetsType.IMAGE"
        }
    ],
    "linked_issue_ids": [],
    "comments": [],
    "issue_summary": "- Remove \"Active\" vs \"Inactive\" state of a note\n- Remove checkbox beside \"Add a gift message?\" in the edit modal\n- Add title \"Checkbox title\" above the text box in the edit modal\n- Reword \"Define text box placeholder\" to \"Text box placeholder\"\n- Change default Checkbox title from \"Planning to gift this? Let us know!\" to \"Add a gift message\"\n- Change default Text box placeholder from \"Write your note here!\" to \"Write your note here\u2026\"\n\nRelevant UI elements and labels:\n- \"Add a gift message?\" toggle switch\n- \"Reorder\" button\n- \"Add note\" button\n- Pencil icon (edit function)\n- Trash can icon (delete function)\n- \"Edit Note\" modal title\n- \"Show text box when selected\" checkbox\n- \"Define text box placeholder\" label\n- \"Cancel\" button\n- \"Confirm\" button\n\nPull Request for reference:\n- GitHub PR URL: https://github.com/beam-commerce/aftersell/pull/1107",
    "repo_summary": "The project is a complex web application named AfterSell, structured into multiple directories such as web, extensions, and theme-app-extension-src. It utilizes TypeScript heavily, with various configurations for linting, testing, and building using tools like ESLint, Jest, and webpack. The project involves frontend components for checkout, funnels, settings, and widgets, along with backend modules for server-side logic.\n\nThe ticket pertains to fixing the UX of the notes widget editing feature. Changes include removing the \"Active\" vs \"Inactive\" state, adding a title above the text box, rewording placeholders, and updating default values for checkbox title and text box placeholder. The issue involves modifying the behavior and appearance of the note editing modal to enhance user experience.",
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1714389652.444493,
        "classification": "bug",
        "initial_code_snippets": [
            {
                "code": "import { asChoiceField, Field, useDynamicList } from '@shopify/react-form';\nimport {\n    Badge,\n    Box,\n    Button,\n    Card,\n    Checkbox,\n    Divider,\n    HorizontalStack,\n    IconSource,\n    Modal,\n    ResourceItem,\n    ResourceList,\n    Text,\n    TextField,\n    Tooltip,\n    VerticalStack,\n} from '@shopify/polaris';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DynamicList } from '@shopify/react-form/build/ts/hooks/list/dynamiclist';\nimport { NotesContentType, NoteType } from '../../../../../../server/src/modules/checkout-v2/checkout-v2.dtos';\nimport { usePrevious } from 'src/hooks/usePrevious';\nimport { EmptyStateDashedWithButton } from './empty-state-dashed-with-button';\nimport { LineItemWrapper, LineItemWrapperProps, PriorityModal } from './priority-modal';\nimport { DeleteMajor, EditMajor } from '@shopify/polaris-icons';\nimport styles from './styles.module.scss';\n\nexport const NotesContentEditor = ({ content }: { content: Field<NotesContentType> }) => {\n    const [editingItem, setEditingItem] = useState<null | number>(null);\n    const [priorityModal, setPriorityModal] = useState(false);\n\n    const contentValue = useMemo(() => content.value.notes, [content.value.notes]);\n    const list = useDynamicList(contentValue, () => ({\n        id: uuidv4(),\n        checked: false,\n        text: { text: 'Planning to gift this? Let us know!' },\n        showTextBox: false,\n        textBoxPlaceholder: 'Write your note here!',\n    }));\n    const previousList = usePrevious<DynamicList<NoteType>['value']>(list.value);\n\n    const handleListItemChange = () => {\n        content.onChange({\n            ...content.value,\n            notes: list.value,\n        });\n    };\n\n    const onSave = () => {\n        handleListItemChange();\n    };\n\n    useEffect(() => {\n        if (!previousList) return; //initial render\n        if (list.value.length === previousList?.length) {\n            const changedPriority = previousList.some((value, index) => value.id !== list.value?.[index]?.id);\n            if (changedPriority) {\n                return;\n            }\n        }\n        handleListItemChange();\n    }, [list.value]);\n\n    return (\n        <>\n            <VerticalStack gap=\"3\">\n                {list.value.length === 0 ? (\n                    <EmptyStateDashedWithButton buttonText=\"Add note\" onClick={() => list.addItem()} />\n                ) : (\n                    <Card padding=\"0\">\n                        <Box padding=\"4\" background=\"bg-subdued\">\n                            <HorizontalStack align=\"space-between\" blockAlign=\"center\">\n                                <Text as=\"h4\" variant=\"headingMd\">\n                                    Notes\n                                </Text>\n                                <HorizontalStack gap=\"2\">\n                                    <Button onClick={() => setPriorityModal(true)}>Reorder</Button>\n                                    <Button onClick=",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx",
                "start_index": 0,
                "end_index": 2974,
                "start_line": 1,
                "end_line": 79,
                "max_line": 219,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { default as ReactGlobal } from 'react';\nimport {\n    NoteRemoveChange,\n    NoteUpdateChange,\n} from '@shopify/ui-extensions/build/ts/surfaces/checkout/api/checkout/checkout';\nimport {\n    NoteWidgetConfig,\n    Note as NoteTypeV1,\n} from '../../../web/server/src/modules/checkout-widgets/checkout-widgets.model';\nimport { NotesContentType, NoteType as NoteTypeV2 } from '../../../web/server/src/modules/checkout-v2/checkout-v2.dtos';\nimport { parseTextToString } from '../utils/parseDifferentVersions';\nimport { CheckoutWidgetProps } from '../types';\n\ntype RenderNoteType = NoteWidgetConfig['notes'][0] & {\n    name: string;\n    isSelected: boolean;\n    textBoxValue: string;\n    fromInitialCart: false;\n};\n\nconst stringifyNote = (notes: [string, string][]): string => {\n    return notes.map(([key, value]) => (value ? `${key} : ${value}` : key)).join(' \\n ');\n};\n\nconst parseNote = (notes: string, keys: string[]): { [key: string]: string } => {\n    if (!notes) return {};\n\n    const noteArray = notes.split(' \\n ');\n    const noteEntries = noteArray.map((note) => {\n        const [key, value] = note.split(' : ');\n        return keys.includes(key || '') ? [key, value || ''] : [note, ''];\n    });\n\n    return Object.fromEntries(noteEntries);\n};\n\ntype NoteWidgetType = NoteWidgetConfig | NotesContentType;\ntype NoteType = NoteTypeV1 | NoteTypeV2;\n\ntype CurrentNote = {\n    fromInitialCart: boolean;\n    name: string;\n    textBoxValue: string;\n    isSelected: boolean;\n} & Partial<NoteType>;\n\nexport const NoteWidget: ReactGlobal.FC<CheckoutWidgetProps<NoteWidgetType>> = ({ globals }) => {\n    const {\n        React,\n        components: { BlockStack, Checkbox, TextField },\n        hooks: { useNote, useApplyNoteChange },\n        widget: { notes: notesFromDb = [] },\n    } = globals;\n\n    const checkedNotesFromDb = React.useMemo(\n        () =>\n            (notesFromDb as NoteType[])\n                .filter((note) => Boolean(note.checked))\n                .map(({ text, ...note }) => ({ ...note, text: parseTextToString(text) })),\n        [notesFromDb]\n    );\n    const checkedNotesText = React.useMemo(() => checkedNotesFromDb.map(({ text }) => text), [checkedNotesFromDb]);\n\n    const [loading, setLoading] = React.useState(false);\n    const [error, setError] = React.useState('');\n\n    const notesFromCart = useNote() || '';\n    const applyNoteChange = useApplyNoteChange();\n\n    const parsedNotesFromCart = React.useMemo(() => {\n        let preparedParsedNotes: { [name: string]: string } = parseNote(notesFromCart, checkedNotesText);\n\n        return preparedParsedNotes;\n    }, [notesFromCart, checkedNotesText]);",
                "filename": "extensions-web-common/checkout/widgets/note.tsx",
                "start_index": 0,
                "end_index": 2628,
                "start_line": 1,
                "end_line": 74,
                "max_line": 191,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { Button, HorizontalStack, InlineError, Text, VerticalStack } from '@shopify/polaris';\nimport { notEmpty, useDynamicList, useField, useForm } from '@shopify/react-form';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport useCheckoutFormState from '../../../../../hooks/useCheckoutFormState';\nimport { NoteWidgetConfig, WidgetSettingsProps } from '../../../../../types';\nimport Triggers from '../triggers';\nimport { Note } from './note';\n\nexport type NoteType = NoteWidgetConfig['notes'][0];\nconst defaultNoteValues = {\n    checked: false,\n    text: '',\n    showTextBox: false,\n    textBoxPlaceholder: 'Write your note here!',\n};\n\nconst emptyNoteFactory = (): NoteType => ({\n    ...defaultNoteValues,\n    id: Date.now(),\n});\n\nexport const NoteSettings = ({\n    widgetData,\n    handleConfigChange,\n    handleChange,\n    hasChanges,\n}: WidgetSettingsProps<NoteWidgetConfig>) => {\n    const initialWidgetValues = useMemo(() => widgetData, []);\n\n    const {\n        fields: notesList,\n        dirty,\n        addItem,\n        removeItem,\n        value,\n    } = useDynamicList<NoteType>(\n        {\n            list: initialWidgetValues.notes.map((note) => ({\n                ...defaultNoteValues,\n                ...note,\n            })),\n            validates: {\n                text: [notEmpty('Note text is required')],\n            },\n        },\n        emptyNoteFactory\n    );\n\n    const {\n        fields: { notes, triggers },\n        dirty: formDirty,\n    } = useForm({\n        fields: {\n            notes: notesList,\n            triggers: useField(initialWidgetValues.triggers),\n        },\n    });\n\n    const commonDirty = useMemo(() => hasChanges || dirty || formDirty, [hasChanges, dirty, formDirty]);\n    const [noteLengthError, setNoteLengthError] = useState(false);\n    const notesErrors = notesList.reduce((errors, note) => {\n        return [\n            ...errors,\n            ...Object.values(note)\n                .map((field) => field?.error)\n                .filter(Boolean),\n        ] as string[];\n    }, [] as string[]);\n\n    const [commonErrors, setCommonErrors] = useState(!!triggers.error || !!notesErrors.length);\n\n    useCheckoutFormState(handleChange, commonDirty, commonErrors);\n\n    //handle change nested config options in redux\n    const handleNotesChange = useCallback(handleConfigChange('notes'), [handleConfigChange]);",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/note-settings/note-settings.tsx",
                "start_index": 0,
                "end_index": 2380,
                "start_line": 1,
                "end_line": 75,
                "max_line": 123,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\"Write your note here\"\n                                        label=\"\"\n                                        value={text.value.text}\n                                        onChange={(val) => text.onChange({ ...text.value, text: val })}\n                                        autoComplete=\"off\"\n                                    />\n                                </div>\n                            </HorizontalStack>\n                            <VerticalStack gap=\"2\">\n                                <Checkbox label=\"Show text box when selected\" {...asChoiceField(showTextBox)} />\n                                {!!showTextBox.value && (\n                                    <TextField\n                                        label=\"Define text box placeholder\"\n                                        {...textBoxPlaceholder}\n                                        autoComplete=\"off\"\n                                    />\n                                )}\n                            </VerticalStack>\n                        </VerticalStack>\n                    );\n                })()}\n            </Modal>\n            <PriorityModal\n                open={priorityModal}\n                onClose={() => {\n                    list.reset();\n                    setPriorityModal(false);\n                }}\n                dynamicList={list}\n                onSave={() => {\n                    onSave();\n                    setPriorityModal(false);\n                }}\n                Item={({ item, index, ...props }: LineItemWrapperProps & { item: NoteType; index: number }) => {\n                    return (\n                        <LineItemWrapper {...props}>\n                            <HorizontalStack wrap={false} gap=\"2\" blockAlign={'center'}>\n                                <Text as=\"span\">{item.text.text}</Text>\n                                <Text as=\"span\" fontWeight=\"bold\">\n                                    {index}\n                                </Text>\n                            </HorizontalStack>\n                        </LineItemWrapper>\n                    );\n                }}\n            />\n        </>\n    );\n};",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx",
                "start_index": 8117,
                "end_index": 10267,
                "start_line": 171,
                "end_line": 219,
                "max_line": 219,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\"Delete note\">\n                                                    <div onClick={(e) => e.stopPropagation()}>\n                                                        <Button\n                                                            icon={DeleteMajor as IconSource}\n                                                            destructive\n                                                            outline\n                                                            onClick={() => list.removeItem(index)}\n                                                        />\n                                                    </div>\n                                                </Tooltip>\n                                            </HorizontalStack>\n                                        </HorizontalStack>\n                                    </ResourceItem>\n                                );\n                            }}\n                        />\n                    </Card>\n                )}\n            </VerticalStack>\n\n            <Modal\n                title=\"Edit Note\"\n                open={editingItem !== null}\n                onClose={() => setEditingItem(null)}\n                primaryAction={{\n                    content: 'Confirm',\n                    onAction: () => {\n                        onSave();\n                        setEditingItem(null);\n                    },\n                }}\n                secondaryActions={[\n                    {\n                        content: 'Cancel',\n                        onAction: () => {\n                            list.reset();\n                            setEditingItem(null);\n                        },\n                    },\n                ]}\n                sectioned\n            >\n                {(() => {\n                    if (editingItem === null || !list.fields[editingItem]) return null;\n\n                    const { text, checked, showTextBox, textBoxPlaceholder } = list.fields[editingItem];\n\n                    return (\n                        <VerticalStack gap=\"2\">\n                            <HorizontalStack gap=\"1\" blockAlign=\"start\">\n                                <Checkbox label=\"\" {...asChoiceField(checked)} />\n                                <div className={styles.flexStretch}>\n                                    <TextField\n                                        placeholder=",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx",
                "start_index": 5742,
                "end_index": 8117,
                "start_line": 118,
                "end_line": 171,
                "max_line": 219,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "=\"Show style settings\">\n                    <VerticalStack gap=\"2\">\n                        <Checkbox\n                            label=\"Show border around upsells\"\n                            checked={content.value.bordered}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    bordered: val,\n                                });\n                            }}\n                        />\n                        <Checkbox\n                            label=\"Use outlined button\"\n                            checked={content.value.buttonStyle === 'secondary'}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    buttonStyle: val ? 'secondary' : 'primary',\n                                });\n                            }}\n                        />\n\n                        {content.value.upsellType === 'single' && (\n                            <Checkbox\n                                label={'Use full width button?'}\n                                checked={content.value.fullWidthButton}\n                                onChange={(val) => {\n                                    content.onChange({\n                                        ...content.value,\n                                        fullWidthButton: val,\n                                    });\n                                }}\n                            />\n                        )}\n                        {content.value.upsellType === 'multi' && (\n                            <Select\n                                label=\"Layout Direction\"\n                                options={[\n                                    { label: 'Horizontal (Scrollable)', value: 'horizontal' },\n                                    { label: 'Vertical', value: 'vertical' },\n                                ]}\n                                value={content.value.direction}\n                                onChange={(val: 'horizontal' | 'vertical') => {\n                                    content.onChange({\n                                        ...content.value,\n                                        direction: val,\n                                    });\n                                }}\n                            />\n                        )}\n                    </VerticalStack>\n                </ShowAdvanced>\n            </VerticalStack>\n\n            <Modal\n                title=\"Edit Upsell Product\"\n                open={editingItem !== null}\n                onClose={() => setEditingItem(null)}\n                primaryAction={{\n                    content: 'Confirm',\n                    onAction: ()",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                "start_index": 22668,
                "end_index": 25517,
                "start_line": 517,
                "end_line": 586,
                "max_line": 742,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{list.addItem}>Add note</Button>\n                                </HorizontalStack>\n                            </HorizontalStack>\n                        </Box>\n                        <Divider />\n                        <ResourceList\n                            alternateTool={<></>}\n                            resourceName={{ singular: 'note', plural: 'notes' }}\n                            items={list.fields}\n                            showHeader={false}\n                            renderItem={(item, id, index) => {\n                                const isActive = item.checked.value;\n                                return (\n                                    <ResourceItem id={id} onClick={() => setEditingItem(index)}>\n                                        <HorizontalStack align=\"space-between\" blockAlign=\"center\">\n                                            <HorizontalStack gap=\"2\">\n                                                <VerticalStack gap=\"0\">\n                                                    <Text as=\"span\" fontWeight=\"bold\">\n                                                        {/*todo: validation?*/}\n                                                        {/*<InlineError*/}\n                                                        {/*  message={'Active notes length should be less than 5000 symbols because of Shopify limitations!'}*/}\n                                                        {/*  fieldID={''}*/}\n                                                        {/*/>*/}\n                                                        {item.text.value.text}\n                                                    </Text>\n                                                </VerticalStack>\n                                                <Badge status={isActive ? 'success' : 'attention'}>\n                                                    {isActive ? 'active' : 'inactive'}\n                                                </Badge>\n                                            </HorizontalStack>\n                                            <HorizontalStack gap=\"2\">\n                                                <Tooltip content=\"Edit note\">\n                                                    <div onClick={(e) => e.stopPropagation()}>\n                                                        <Button\n                                                            icon={EditMajor as IconSource}\n                                                            onClick={() => setEditingItem(index)}\n                                                        />\n                                                    </div>\n                                                </Tooltip>\n                                                <Tooltip content=",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx",
                "start_index": 2974,
                "end_index": 5742,
                "start_line": 79,
                "end_line": 118,
                "max_line": 219,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { Button, Checkbox, Text, TextField, VerticalStack, HorizontalStack } from '@shopify/polaris';\nimport { asChoiceField, FieldDictionary } from '@shopify/react-form';\nimport React, { FC, useEffect } from 'react';\nimport type { NoteType } from './note-settings';\nimport styles from './styles.module.scss';\n\ninterface NoteSettingsProps {\n    fields: FieldDictionary<NoteType>;\n    index: number;\n    removeBadge(index: number): void;\n}\n\nexport const Note: FC<NoteSettingsProps> = ({ fields, removeBadge, index }) => {\n    const { text, checked, showTextBox, textBoxPlaceholder } = fields;\n\n    useEffect(() => {\n        text.runValidation();\n    }, []);\n\n    return (\n        <VerticalStack gap=\"2\">\n            <HorizontalStack blockAlign=\"center\" align=\"space-between\">\n                <Text variant=\"headingXs\" as=\"h3\">{`Note ${index + 1}`}</Text>\n                <Button plain destructive onClick={() => removeBadge(index)}>\n                    Remove note\n                </Button>\n            </HorizontalStack>\n            <HorizontalStack gap=\"1\" blockAlign=\"start\">\n                <Checkbox label=\"\" {...asChoiceField(checked)} />\n                <div className={styles.flexStretch}>\n                    <TextField placeholder=\"Write your note here\" label=\"\" {...text} autoComplete=\"off\" />\n                </div>\n            </HorizontalStack>\n            <VerticalStack gap=\"2\">\n                <Checkbox label=\"Show text box when selected\" {...asChoiceField(showTextBox)} />\n                {!!showTextBox.value && (\n                    <TextField label=\"Define text box placeholder\" {...textBoxPlaceholder} autoComplete=\"off\" />\n                )}\n            </VerticalStack>\n        </VerticalStack>\n    );\n};",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/note-settings/note.tsx",
                "start_index": 0,
                "end_index": 1728,
                "start_line": 1,
                "end_line": 42,
                "max_line": 42,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "const currentNotes = React.useMemo(() => {\n        const parsedNotesArray = Object.entries(parsedNotesFromCart);\n        const res: CurrentNote[] = checkedNotesFromDb.map(({ text, ...note }) => {\n            const isSelected = parsedNotesArray.find(([name]) => name === text);\n\n            return {\n                ...note,\n                name: text,\n                isSelected: !!isSelected,\n                textBoxValue: isSelected?.[1] || '',\n                fromInitialCart: false,\n            };\n        });\n\n        const noteFromCart = parsedNotesArray.find(([noteName]) =>\n            checkedNotesFromDb.every((note) => note.text !== noteName)\n        );\n\n        if (noteFromCart) {\n            res.push({ fromInitialCart: true, name: noteFromCart[0], textBoxValue: '', isSelected: true });\n        }\n\n        return res;\n    }, [parsedNotesFromCart, checkedNotesFromDb]);\n\n    const applyUpdates = React.useCallback(\n        (currentNotes: CurrentNote[]) => {\n            const updatedNotesObj = currentNotes\n                .filter((note) => note.isSelected)\n                .map((note) => [note.name, note.textBoxValue] as [string, string]);\n\n            const updatedNotes = stringifyNote(updatedNotesObj);\n\n            let changes: NoteRemoveChange | NoteUpdateChange;\n            if (updatedNotes) {\n                changes = { type: 'updateNote', note: updatedNotes };\n            } else {\n                changes = { type: 'removeNote' };\n            }\n\n            if (notesFromCart === updatedNotes) return;\n\n            setLoading(true);\n\n            applyNoteChange(changes)\n                .then((res) => {\n                    if (res.type === 'error' && res.message) {\n                        setError(res.message);\n                        return;\n                    }\n                })\n                .finally(() => setLoading(false));\n        },\n        [applyNoteChange]\n    );\n\n    const handleUpdateCheckbox = React.useCallback(\n        (id: number) => (isSelected: boolean) => {\n            const handledNote = currentNotes.find((note) => note.id === id);\n            if (!handledNote) return;\n\n            handledNote.isSelected = isSelected;\n\n            applyUpdates(currentNotes);\n        },\n        [currentNotes]\n    );\n\n    const handleUpdateTextBox = React.useCallback(\n        (id: number) => (newText: string) => {\n            const handledNote = currentNotes.find((note) => note.id === id);\n            if (!handledNote) return;\n\n            handledNote.textBoxValue = newText;\n            applyUpdates(currentNotes);\n        },\n        [currentNotes, parsedNotesFromCart]\n    );\n\n    const notesForRender = React.useMemo(\n        () => currentNotes.filter((note) => !note.fromInitialCart) as RenderNoteType[],\n        [currentNotes]\n    );\n\n    return (\n        <BlockStack>\n            {notesForRender.map(\n                ({ id, name, showTextBox = false, textBoxPlaceholder = '', isSelected, textBoxValue }) => {",
                "filename": "extensions-web-common/checkout/widgets/note.tsx",
                "start_index": 2634,
                "end_index": 5594,
                "start_line": 76,
                "end_line": 163,
                "max_line": 191,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<VerticalStack align=\"space-between\">\n            <WidgetHeading {...title}>Edit text widget</WidgetHeading>\n            <Box paddingInlineStart=\"3\" paddingInlineEnd=\"3\" paddingBlockEnd=\"4\" paddingBlockStart=\"2\">\n                <VerticalStack gap=\"3\">\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Heading\n                    </Text>\n                    <RichTextEditor\n                        isMultiProduct={isMultiProduct}\n                        editorState={fields.heading.value}\n                        offerVersion={offerVersion}\n                        onChange={getHandleChangeRichTextEditor('heading')}\n                        isPostPurchase\n                    />\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Body text\n                    </Text>\n                    <RichTextEditor\n                        isMultiProduct={isMultiProduct}\n                        editorState={fields.text.value}\n                        offerVersion={offerVersion}\n                        onChange={getHandleChangeRichTextEditor('text')}\n                        isPostPurchase\n                    />\n                    {offerVersion === 'v2' && (\n                        <>\n                            <RangeSlider\n                                onChange={(val: number) => {\n                                    onChangeConfig({ topPadding: val });\n                                }}\n                                output\n                                step={2}\n                                value={config.topPadding ?? 0}\n                                label=\"Top padding\"\n                                min={0}\n                                max={10}\n                                prefix={<p>0</p>}\n                                suffix={<p>10</p>}\n                            />\n                            <RangeSlider\n                                onChange={(val: number) => {\n                                    onChangeConfig({ bottomPadding: val });\n                                }}\n                                output\n                                step={2}\n                                value={config.bottomPadding ?? 0}\n                                label=\"Bottom padding\"\n                                min={0}\n                                max={10}\n                                prefix={<p>0</p>}\n                                suffix={<p>10</p>}\n                            />\n                        </>\n                    )}\n                </VerticalStack>\n            </Box>\n            <Box paddingInlineStart=\"3\" paddingInlineEnd=\"3\" paddingBlockEnd=\"4\" paddingBlockStart=\"2\">\n                <Button\n                    size=\"large\"\n                    fullWidth\n                    outline\n                    destructive\n                    icon={DeleteMinor as IconSource}\n                    onClick={title.onDelete}\n                >\n                    Delete Widget\n                <",
                "filename": "web/client/src/pages/funnels/components/text-widget-settings.tsx",
                "start_index": 1991,
                "end_index": 4985,
                "start_line": 55,
                "end_line": 121,
                "max_line": 125,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Layout>\n                            <Layout.Section fullWidth>\n                                <AdditionalScopesBanner\n                                    requiredAdditionalScopes={['write_checkout_branding_settings']}\n                                />\n                            </Layout.Section>\n                            <StickyLayoutSection oneThird>\n                                <Card padding=\"1\">\n                                    <VerticalStack>\n                                        <Box\n                                            paddingInlineStart=\"4\"\n                                            paddingInlineEnd=\"4\"\n                                            paddingBlockStart=\"3\"\n                                            paddingBlockEnd=\"3\"\n                                        >\n                                            <VerticalStack gap=\"2\" align=\"start\" inlineAlign=\"start\">\n                                                <HorizontalStack blockAlign=\"center\" align=\"space-between\">\n                                                    <Text variant=\"headingMd\" as=\"h6\">\n                                                        Edit branding\n                                                    </Text>\n                                                </HorizontalStack>\n                                                <HorizontalStack gap=\"2\" blockAlign=\"center\">\n                                                    {currentCheckoutProfile?.isPublished ? (\n                                                        <Badge status=\"success\" progress=\"complete\" size=\"small\">\n                                                            Live\n                                                        </Badge>\n                                                    ) : (\n                                                        <Badge status=\"info\" progress=\"complete\" size=\"small\">\n                                                            Draft\n                                                        </Badge>\n                                                    )}\n                                                    <ButtonSelect\n                                                        plain\n                                                        value={currentCheckoutProfile?.id}\n                                                        onChange={(value) => {\n                                                            setCurrentCheckoutProfile(\n                                                                checkoutProfiles.find(\n                                                                    (profile) => profile?.id === value\n                                                                )\n                                                            );\n                                                        }",
                "filename": "web/client/src/pages/checkout/checkout-branding.page.tsx",
                "start_index": 6634,
                "end_index": 9487,
                "start_line": 176,
                "end_line": 299,
                "max_line": 320,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Checkbox\n                                    label=\"Release fulfillment holds from 1-click offers when offer timer ends\"\n                                    helpText='If the customer closes their browser tab while on the post-purchase page, the order will stay \"On Hold\" for 60 minutes by default. This setting reduces the delay to be equal to the upsell offer timer duration (e.g. 10 minutes).'\n                                    checked={fields.releaseFulfillmentHoldsAsap.value}\n                                    onChange={fields.releaseFulfillmentHoldsAsap.onChange}\n                                    disabled={!hasAllRequiredScopes}\n                                />\n                            </VerticalStack>\n                        </VerticalStack>\n                    </Card>\n                </AnnotatedLayout>\n                <AnnotatedLayout title=\"Partially paid\">\n                    <Card>\n                        <VerticalStack gap=\"3\">\n                            <VerticalStack gap=\"2\">\n                                <Checkbox\n                                    label={\n                                        tyPageOrderMergingEnabled\n                                            ? 'Automatically remove unpaid upsell products (from 1-click and TY page) from orders'\n                                            : 'Automatically remove unpaid 1-click upsell products from orders'\n                                    }\n                                    checked={fields.removePartiallyPaidItems.value}\n                                    onChange={fields.removePartiallyPaidItems.onChange}\n                                />\n                                {fields.removePartiallyPaidItems.value && (\n                                    <Box paddingInlineStart=\"6\">",
                "filename": "web/client/src/pages/settings/settings-fulfillment-and-payment.page.tsx",
                "start_index": 2848,
                "end_index": 4640,
                "start_line": 68,
                "end_line": 93,
                "max_line": 141,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "[\n                {\n                    appId: 'addTextWidget',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 0,\n                    config: {\n                        heading: {\n                            value: '<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, before you go!</strong></span></p>',\n                        },\n                        text: {\n                            value: '',\n                        },\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },\n                {\n                    appId: 'timer',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 1,\n                    config: {\n                        minutes: '5',\n                        heading: `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\", sans-serif;\">Your order is confirmed but you can still add the following for a limited time</span><span style=\"font-size: 18px;\"> </span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span></p>`,\n                        text: '',\n                        textColor: 'Black',\n                        backgroundColor: 'Yellow',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 24366,
                "end_index": 26314,
                "start_line": 29,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Banner\n                                            status=\"warning\"\n                                            title={'\ud83d\ude80 Faster, Smoother, & Better Checkout Editor'}\n                                            action={{\n                                                content: 'Update Now',\n                                                loading: updateVersionLoading,\n                                                onAction: () => {\n                                                    updateCheckoutVersion('V2');\n                                                },\n                                            }}\n                                        >\n                                            <Text variant=\"bodyLg\" as=\"p\">\n                                                Explore our upgraded checkout editor. Discover new triggers, AI upsells,\n                                                multiple widget configurations, split testing and other customization\n                                                features. Upgrading is fully reversible and will automatically transfer\n                                                your current setup.\n                                            </Text>\n                                        </Banner>\n                                    )}\n                                    {currentSplitTestTab === 'A' || !currentSplitTestTab\n                                        ? widgetsVersionA\n                                        : widgetsVersionB}\n                                </VerticalStack>\n                            )}\n                        </div>\n                        <div className={styles.preview}>\n                            <div>\n                                <Preview widget={selectedWidgetData} widgetType={previewSelection?.type} />\n                                {selectedTab === 'rewardsWidget' && (\n                                    <div style={{ marginTop: '20px' }}>\n                                        <Banner title=\"\" status=\"info\">\n                                            The rewards bar widget is intended to be used with one or more upsell\n                                            widgets. If a customer sees that they're $10 away from free shipping, they\n                                            might want to accept one of your upsell products to get there!\n                                        </Banner>\n                                        <Banner\n                                            title=\"Create discount\"\n                                            action={{\n                                                content: 'Create discount',",
                "filename": "web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx",
                "start_index": 10154,
                "end_index": 12821,
                "start_line": 236,
                "end_line": 274,
                "max_line": 306,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Card>\n                <HorizontalStack align=\"space-between\" blockAlign=\"center\">\n                    <HorizontalStack gap=\"2\">\n                        <Thumbnail source={image} size=\"large\" alt=\"Product Image\" />\n                        <VerticalStack gap=\"1\">\n                            <Text variant=\"headingMd\" as=\"h2\">\n                                {customTitle || cleanProductTitle(title)}\n                            </Text>\n                            <OfferDiscountSettings\n                                displayMode=\"minimal\"\n                                checkoutDiscountRuleId={checkoutDiscountRuleId}\n                                setCheckoutDiscountRuleId={(newRuleId) => {\n                                    handleOfferChange(\n                                        { offer: { _id: offerId } },\n                                        {\n                                            ...offerSettings,\n                                            discount: {\n                                                ...offerSettings.discount,\n                                                checkoutDiscountRuleId: newRuleId,\n                                            },\n                                        }\n                                    );\n                                }}\n                            />\n                            {!!offerTriggers && (\n                                <Text variant=\"bodyMd\" as=\"span\" color=\"subdued\">\n                                    {(\n                                        [\n                                            { label: 'Show for all customers', value: 'showToAllCustomersTrigger' },\n                                            {\n                                                label: 'Trigger for product/collection',\n                                                value: 'productAndOrCollectionTrigger',\n                                            },\n                                        ] as const\n                                    ).find(({ value }) => offerTriggers?.[value]?.isEnabled)?.label || ''}\n                                </Text>\n                            )}\n                        </VerticalStack>\n                    </HorizontalStack>\n                    <ButtonGroup>\n                        <VerticalStack inlineAlign=\"center\" align=\"end\" gap=\"5\">\n                            <Button onClick={handleEditOffer}>Edit Offer</Button>\n                            <Button plain destructive onClick={removeOffer}>\n                                Remove Offer\n                            </Button>\n                        </VerticalStack>\n                    </ButtonGroup>\n                </HorizontalStack>\n\n                <Modal\n                    open={editOfferActive}\n                    onClose={handleEditOffer}\n                    title=\"Edit Offer\"\n                    primaryAction={{\n                        content: 'Confirm' as string,\n                        onAction:",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-card.tsx",
                "start_index": 2957,
                "end_index": 5943,
                "start_line": 90,
                "end_line": 145,
                "max_line": 218,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "useEffect(() => {\n        handleNotesChange(value);\n\n        const activeNoteLength = notes\n            .filter((note) => note.checked.value)\n            .map((note) => note.text.value)\n            .join(' / ').length;\n        const isLengthMoreThanAvailable = activeNoteLength >= 5000;\n\n        if ((noteLengthError && !isLengthMoreThanAvailable) || (!noteLengthError && isLengthMoreThanAvailable)) {\n            setNoteLengthError(isLengthMoreThanAvailable);\n        }\n\n        if (\n            notes.some((note) => Object.values(note).some(({ error }) => Boolean(error))) ||\n            isLengthMoreThanAvailable\n        ) {\n            setCommonErrors(true);\n        } else if (commonErrors) {\n            setCommonErrors(false);\n        }\n    }, [value, noteLengthError]);\n\n    return (\n        <VerticalStack gap=\"4\">\n            <Triggers triggers={triggers.value} onTriggersChange={handleConfigChange('triggers', triggers.onChange)} />\n            <HorizontalStack blockAlign=\"center\" align=\"space-between\">\n                <Text variant=\"headingMd\" as=\"h2\">\n                    Notes\n                </Text>\n                <Button plain onClick={addItem}>\n                    Add note\n                </Button>\n            </HorizontalStack>\n            {noteLengthError && (\n                <InlineError\n                    message={'Active notes length should be less than 5000 symbols because of Shopify limitations!'}\n                    fieldID={''}\n                />\n            )}\n            <VerticalStack gap=\"2\">\n                {notes.map((note, index) => (\n                    <Note key={`${note.id.value}`} fields={note} removeBadge={removeItem} index={index} />\n                ))}\n            </VerticalStack>\n        </VerticalStack>\n    );\n};",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/note-settings/note-settings.tsx",
                "start_index": 2385,
                "end_index": 4156,
                "start_line": 76,
                "end_line": 123,
                "max_line": 123,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "@modelOptions({ schemaOptions: { _id: false } })\nexport class Note {\n    @prop({ required: true })\n    id!: number;\n\n    @prop({ required: true })\n    checked!: boolean;\n\n    @prop({ required: true })\n    text!: string;\n\n    @prop({ required: true, default: false })\n    showTextBox!: boolean;\n\n    @prop({ required: true, default: '' })\n    textBoxPlaceholder!: string;\n}\n\n@modelOptions({ schemaOptions: { _id: false } })\nexport class NoteWidgetConfig {\n    @prop({ required: true, type: Note })\n    notes!: Note[];\n\n    @prop({ required: false })\n    triggers?: CheckoutTriggers;\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~models~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n@modelOptions({ schemaOptions: { versionKey: false, discriminatorKey: 'type' } })\nexport class CheckoutWidgets {\n    _id!: string; // For TS, not for Mongo. This is stored as an ObjectID in Mongo.\n\n    @prop({ required: true })\n    type!: string;\n\n    @prop({ required: true })\n    shop!: string;\n\n    @prop({ required: true, default: false })\n    status!: boolean;\n\n    /** legacy field. Didn't used nowhere */\n    @prop({ required: false })\n    hasSplitTest?: boolean;\n\n    @prop({ required: true, default: new Date() })\n    createdAt!: Date;\n\n    @prop({ required: false, enum: SplitTestEnum, default: null, addNullToEnum: true })\n    splitTestVersion?: SplitTestEnum;\n\n    config!: { [key: string]: any };\n}\n\nexport class UpsellCheckoutWidget extends CheckoutWidgets {\n    @prop({ required: true })\n    declare config: UpsellWidgetConfig;\n}\n\nexport type IUpsellCheckoutWidget = InstanceType<typeof UpsellCheckoutWidget>;\n\nexport class UpsellCheckoutWidgetOne extends UpsellCheckoutWidget {\n    declare type: CHECKOUT_WIDGETS_TYPES.UPSELL_WIDGET_ONE;\n}\n\nexport class UpsellCheckoutWidgetTwo extends UpsellCheckoutWidget {\n    declare type: CHECKOUT_WIDGETS_TYPES.UPSELL_WIDGET_TWO;\n}\n\nexport class UpsellCheckoutWidgetThree extends UpsellCheckoutWidget {\n    declare type: CHECKOUT_WIDGETS_TYPES.UPSELL_WIDGET_THREE;\n}\n\nexport class TrustBadgeCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.TRUST_BADGES_WIDGET;\n\n    @prop({ required: true })\n    declare config: TrustBadgeWidgetConfig;\n}\n\nexport class TimerCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.TIMER_WIDGET;\n\n    @prop({ required: true })\n    declare config: TimerWidgetConfig;\n}\n\nexport class RewardsCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.REWARDS_WIDGET;\n\n    @prop({ required: true })\n    declare config: RewardsWidgetConfig;\n}\n\nexport class TestimonialsCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.TESTIMONIALS_WIDGET;\n\n    @prop({ required: true })\n    declare config: TestimonialWidgetConfig;\n}\n\nexport class FAQCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.FAQ_WIDGET;\n\n    // @prop({ required: true })\n    // config!: null;\n}",
                "filename": "web/server/src/modules/checkout-widgets/checkout-widgets.model.ts",
                "start_index": 8689,
                "end_index": 11617,
                "start_line": 73,
                "end_line": 498,
                "max_line": 565,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Checkbox label=\"Show quantity selector\" {...asChoiceField(showQuantity)} />\n                            <TextField\n                                autoComplete={'off'}\n                                label={'Custom product title'}\n                                placeholder={'Default product title'}\n                                value={customTitle.value.text || `${fullProduct.cuwp_product_title}`}\n                                onChange={(val) =>\n                                    customTitle.onChange({\n                                        ...customTitle.value,\n                                        text: val,\n                                    })\n                                }\n                            />\n                            <TextField\n                                autoComplete={'off'}\n                                label={'Product description'}\n                                placeholder={'Add a description for your upsell'}\n                                value={customDescription.value.text}\n                                onChange={(val) =>\n                                    customDescription.onChange({\n                                        ...customDescription.value,\n                                        text: val,\n                                    })\n                                }\n                            />\n                        </VerticalStack>\n                    );\n                })()}\n            </Modal>\n\n            <PriorityModal\n                open={priorityModal}\n                onClose={() => {\n                    list.reset();\n                    setPriorityModal(false);\n                }}\n                dynamicList={list}\n                onSave={() => {\n                    onSave();\n                    setPriorityModal(false);\n                }}\n                Item={({ it",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                "start_index": 28117,
                "end_index": 29983,
                "start_line": 636,
                "end_line": 677,
                "max_line": 742,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "The quantity will be rounded up to the nearest whole number. Enter 50% for half, 100% for the same quantity, 200% for double, etc. Preview is based on an initial purchase with quantity of 5.\"\n                                        />\n                                    )}\n                                </VerticalStack>\n                            </ShowAdvanced>\n                        )}\n                        <Checkbox\n                            label={\n                                isSingleProduct\n                                    ? 'Skip offer if product is in original order'\n                                    : 'Hide product if product is in original order'\n                            }\n                            // Even if this setting somehow got enabled for most/least expensive products, we will show\n                            // that it is disabled since the offer will be shown anyways.\n                            checked={config.hideIfInOriginalOrder && !isMostOrLeastExpensiveProduct}\n                            onChange={(val) =>\n                                onChangeConfig({\n                                    hideIfInOriginalOrder: val,\n                                })\n                            }\n                            disabled={isMostOrLeastExpensiveProduct}\n                            helpText={\n                                isMostOrLeastExpensiveProduct\n                                    ? 'This setting is disabled because most/least expensive products will always be from the original order'\n                                    : ''\n                            }\n                        />\n                        {isSingleConfigV2(config, offerVersion) && (\n                            <Checkbox\n                                label=\"Show shipping and tax breakdown\"\n                                checked={config?.showBreakdown}\n                                onChange={(val) =>\n                                    onChangeConfig({\n                                        showBreakdown: val,\n                                    })\n                                }\n                            />\n                        )}\n                    </VerticalStack>\n                    {isConfigV2(config, offerVersion) && (\n                        <>\n                            <Text variant=\"bodyMd\" as=\"p\">\n                                Product title\n                            </Text>\n                            <RichTextEditor\n                                isMultiProduct={false}\n                                editorState={fields.productTitle.value}\n                                offerVersion={'v2'}\n                                onChange={getHandleChangeRichTextEditor('productTitle')}\n                                isPostPurchase\n                            />\n                            <Text variant=\"bodyMd\" as=\"p",
                "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                "start_index": 61516,
                "end_index": 64420,
                "start_line": 1164,
                "end_line": 1263,
                "max_line": 1401,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "const productsToEdit = useMemo(\n        () =>\n            editingProductIds ? products.filter((product) => editingProductIds.includes(product.product.id)) : products,\n        [products, editingProductIds]\n    );\n\n    const isMostOrLeastExpensiveProduct =\n        !!productsToEdit.length &&\n        productsToEdit.every(\n            ({ product }) =>\n                product.productType === 'mostExpensiveProduct' || product.productType === 'leastExpensiveProduct'\n        );\n\n    const isAiRecommendedProduct =\n        !!productsToEdit.length &&\n        productsToEdit.every(\n            (info) =>\n                info.product.productType === 'aiRecommendedProduct' ||\n                info.product.productType === 'aiRecommendedProduct'\n        );\n    const allProductsArePlaceholder =\n        !!productsToEdit.length && productsToEdit.every((info) => info.product.productType !== 'specificProduct');\n\n    const hasReviewCountError =\n        !!productsToEdit.length && productsToEdit.every((info) => info.product.productReviewsCount === 0);\n\n    const productIsSubscriptionOnly =\n        !!productsToEdit.length && productsToEdit.every((info) => info.requiresSellingPlan);\n    const hasProductIsSubscriptionOnly = productsToEdit.some((info) => info.requiresSellingPlan);\n    const hasSubscriptionVariants =\n        !!productsToEdit.length && productsToEdit.every((info) => (info.product.subscriptionVariants?.length || 0) > 0);\n\n    //prevent setting the 'one-time purchase' option for subscription products only when editing multiple products at once\n    const shouldShowSubscriptionSettings = editingProductIds\n        ? (!hasProductIsSubscriptionOnly && hasSubscriptionVariants) || allProductsArePlaceholder\n        : hasSubscriptionVariants || allProductsArePlaceholder;\n\n    const postPurchaseReplacementUpsellsAreEnabled = useFeatureFlagIsEnabled(\n        'postPurchaseReplacementUpsellsAreEnabled'\n    );\n    const hasCustomReviewAccess = useFeatureFlagIsEnabled('productReviewCustomizationIsEnabled');\n\n    const presetQuantity = isConfigV2(config, offerVersion) ? config.presetQuantity : void 0;\n\n    const product = products[0]?.product || {};\n\n    return (\n        <VerticalStack align=\"space-between\">\n            <WidgetHeading onNavBack={onNavBack}>\n                {editingProductIds ? 'Edit all products' : isSingleProduct ? 'Edit upsell product' : product.title}\n            </WidgetHeading>\n            <SectionSettings\n                name={'Select products to edit'}\n                icon={ChecklistAlternateMajor as IconSource}\n                show={!isSingleProduct && !!editingProductIds?.length && !!products.length}\n                defaultOpen={preselectedSubsection === PreselectedSubsection.PRODUCT_SELECTION}\n            >\n                {!!editingProductIds && !!handleChangeEditingProductIds && (\n                    <ChoiceList\n                        allowMultiple\n                        title=\"\"\n                        choices={products.map(({ product }) => ({",
                "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                "start_index": 11583,
                "end_index": 14577,
                "start_line": 291,
                "end_line": 352,
                "max_line": 1401,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "initial_doc_snippets": [
            {
                "code": "# AfterSell\n\n### All Docs on Notion \ud83d\udc49 [AfterSell Notion Docs](https://www.notion.so/aftersell/AfterSell-Docs-9d43566167b5426d86b5983925872953?pvs=4)",
                "filename": "README.md",
                "start_index": 0,
                "end_index": 148,
                "start_line": 1,
                "end_line": 3,
                "max_line": 3,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"hidden\">\n                            <span class=\"visually-hidden\" id=\"forwarding-external-new-window-message\">\n                                Opens external website in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-new-window-message\">\n                                Opens in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-external-message\">\n                                Opens external website.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"checkout-context-step-one\">\n                                Customer information - Checkout\n                            </span>\n                        </div>\n                    </main>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 322226,
                "end_index": 323078,
                "start_line": 6265,
                "end_line": 6282,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script src=\"https://cdn.shopify.com/shopifycloud/app-bridge.js\"></script>\n        <!-- Shopify App Bridge [END] -->\n\n        <!-- User Pre-fetching [START] -->\n        <script>\n            window.indexHtmlPrefetchedUserPromise = fetch('/api/v1/user').then((res) => res.json());\n        </script>\n        <!-- User Pre-fetching [END] -->\n\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" id=\"aftersell-viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" type=\"image/png\" href=\"/favicon.svg\" />\n        <meta name=\"description\" content=\"AfterSell App\" />\n        <script>\n            const global = globalThis;\n        </script>\n        <script>\n            (function () {\n                const w = window;\n                const ic = w.Intercom;\n                if (typeof ic === 'function') {\n                    ic('reattach_activator');\n                    ic('update', w.intercomSettings);\n                } else {\n                    const d = document;\n                    var i = function () {\n                        i.c(arguments);\n                    };\n                    i.q = [];\n                    i.c = function (args) {\n                        i.q.push(args);\n                    };\n                    w.Intercom = i;\n                    const l = function () {\n                        const s = d.createElement('script');\n                        s.type = 'text/javascript';\n                        s.async = true;\n                        s.src = 'https://widget.intercom.io/widget/l7yr8zsg';\n                        const x = d.getElementsByTagName('script')[0];\n                        x.parentNode.insertBefore(s, x);\n                    };\n                    if (w.attachEvent) {\n                        w.attachEvent('onload', l);\n                    } else {\n                        w.addEventListener('load', l, false);\n                    }\n                }\n            })();\n        </script>\n\n        <!-- FirstPromoter [START] -->\n        <script>\n            (function (w) {\n                w.fpr =\n                    w.fpr ||\n                    function () {\n                        w.fpr.q = w.fpr.q || [];\n                        w.fpr.q[arguments[0] == 'set' ? 'unshift' : 'push'](arguments);\n                    };\n            })(window);\n            fpr('init', { cid: '1z5h5vjx' });\n            fpr('click');\n        </script>\n        <!-- NOTE this FirstPromoter script is our own copy of the source file with some modifications. Original: https://cdn.firstpromoter.com/fpr.js -->\n        <script type=\"module\" src=\"/src/libs/fpr/fpr.ts\" defer></script>\n        <!-- FirstPromoter [END] -->\n\n        <!-- Facebook Pixel Code -->",
                "filename": "web/client/index.html",
                "start_index": 3507,
                "end_index": 6223,
                "start_line": 51,
                "end_line": 118,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"order-summary-toggle__inner\">\n                        <span class=\"order-summary-toggle__icon-wrapper\">\n                            <svg\n                                width=\"20\"\n                                height=\"19\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__icon\"\n                            >\n                                <path\n                                    d=\"M17.178 13.088H5.453c-.454 0-.91-.364-.91-.818L3.727 1.818H0V0h4.544c.455 0 .91.364.91.818l.09 1.272h13.45c.274 0 .547.09.73.364.18.182.27.454.18.727l-1.817 9.18c-.09.455-.455.728-.91.728zM6.27 11.27h10.09l1.454-7.362H5.634l.637 7.362zm.092 7.715c1.004 0 1.818-.813 1.818-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817zm9.18 0c1.004 0 1.817-.813 1.817-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--show\">\n                            <span>Show order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"6\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M.504 1.813l4.358 3.845.496.438.496-.438 4.642-4.096L9.504.438 4.862 4.534h.992L1.496.69.504 1.812z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--hide\">\n                            <span>Hide order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"7\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M6.138.876L5.642.438l-.496.438L.504 4.972l.992 1.124L6.138 2l-.496.436 3.862 3.408.992-1.122L6.138.876z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span\n                            class=\"order-summary-toggle__total-recap total-recap\"\n                            data-order-summary-section=\"toggle-total-recap\"\n                        >\n                            <span class=\"total-recap__final-price\" data-checkout-payment-due-target=\"5073\">$50.73</span>\n                        </span>\n                    </span>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 242214,
                "end_index": 245205,
                "start_line": 6097,
                "end_line": 6446,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<body class=\"aftersell-preview\">\n        <a href=\"#main-header\" class=\"skip-to-content\"> Skip to content </a>\n\n        <header class=\"banner\" data-header=\"\" role=\"banner\">\n            <div class=\"wrap\">\n                <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n            </div>\n        </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241387,
                "end_index": 241804,
                "start_line": 6077,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"step__sections\">\n                                <div class=\"section\">\n                                    <div class=\"section__header os-header\">\n                                        <svg\n                                            width=\"56\"\n                                            height=\"56\"\n                                            viewBox=\"0 0 56 56\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <circle cx=\"28\" cy=\"28\" r=\"26\" stroke=\"#E5E5E5\" stroke-width=\"2.29412\" />\n                                            <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M22.4811 37.3603L16.3636 31.3947C15.5663 30.6172 15.5663 29.3605 16.3636 28.583C17.1609 27.8055 18.4497 27.8055 19.247 28.583L23.8066 33.0293L36.6493 18.7538C37.3834 17.9186 38.6701 17.8231 39.5225 18.537C40.379 19.2529 40.4789 20.5056 39.7448 21.3388L25.4706 37.2469C25.1015 37.6685 24.5672 37.9191 24.0003 37.9409C23.3825 37.9429 22.8625 37.7341 22.4811 37.3603Z\"\n                                                fill=\"#008060\"\n                                                stroke=\"#E5E5E5\"\n                                                stroke-width=\"0.764706\"\n                                            />\n                                        </svg>\n                                        <div class=\"os-header__heading\">\n                                            <span class=\"os-order-number\"> Order #1001 </span>\n                                            <h2 class=\"os-header__title\" id=\"main-header\" tabindex=\"-1\">\n                                                Thank you {{Customer Name}}!\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245858,
                "end_index": 247957,
                "start_line": 6161,
                "end_line": 6451,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Checkout Upsell Discounts\n\n## Overview\n\nThis document describes the data flow and security reasoning for our implementation of checkout upsell discounts.\n\nIt is difficult to understand the overall process for checkout upsell discounts by just looking at the code. This is because the code is fragmented across different areas and data is indirectly passed across some boundaries. This convoluted system is necessary for security reasons described below, but it makes the code harder to trace.\n\nThis document can hopefully be used to better understand the checkout upsell discount system as a whole, to allow us to debug or make changes in the future.\n\n## Implementation\n\n### Checkout\n\n> Part 1. Generate a `TamperProofCartAttribute` (Checkout Extension and Server)\n\n1. **Checkout Extension:** Request a `TamperProofCartAttribute` from the server for the offer being added.\n    - **Action:** The checkout extension sends a request to the server with the current `CheckoutData` and the ID of the offer.\n2. **Server:** Decide if a discount should be applied.\n    - **Action:** The server decides if a discount should be applied based on the provided `CheckoutData`. The server must **ONLY** use the provided `CheckoutData`, along with active offers from the database, when determining whether or not to apply a discount. The server must **NOT** use any other information regarding the current checkout.\n    - **Security:**\n        - The `CheckoutData` from the checkout extension is **NOT** secure since it is being sent to an insecure endpoint. Note that even with checkout session tokens, the `CheckoutData` is not secure because a customer could inspect the network requests to find the session token and then make arbitrary requests.\n        - The server does not need to verify the `CheckoutData`. It only needs to decide whether or not a discount should be applied _if the provided `CheckoutData` turns out to be verified_. The server can assume that the discount will only be applied for the given `CheckoutData`. If the checkout data is not actually what was provided, the discount will not be applied. Verification of the `CheckoutData` occurs in the Function.\n        - The server must not use any data other than the provided `CheckoutData` when determining whether or not a discount should be applied. This is because the Function is only provided the trusted `CheckoutData` by Shopify. The Function would not be able to invalidate a discount when a necessary factor changed, if that factor was not part of the `CheckoutData`.\n3. **Server:** Create a `TamperProofCartAttribute` using an HMAC signature of the `UnverifiedState` and `DiscountToApplyIfStateIsVerified`.\n    - **Action:** The server creates an HMAC signature from the combination of the `UnverifiedState` and the `DiscountToApplyIfStateIsVerified`. The `UnverifiedState` is composed of the `CheckoutData` and the `ActiveOfferVersion`.\n        - Creating an HMAC signature involves first stringifying the relevant data and then signing the string with the shared secret between the Function and the server.\n    - **Security:**\n        - This HMAC signature will be used by the Function to verify that the `TamperProofCartAttribute` has not been tampered with. If the HMAC signature matches in the Function, this means that _if the `State` is X_, then the discount should be applied. The HMAC does not provide any indication of whether or not the `State` is verified.\n        - The `ActiveOfferVersion` is included in the `State` to ensure that the discount can be invalidated in the future. For example, the merchant might offer a lower discount amount after BFCM is finished, in which case the old discounts should no longer be valid. The merchant may also change the triggers for an offer such that the offer is only valid over $100, in which case any old discounts should no longer be valid.\n4. **Server:** Respond to the Checkout Extension with a `TamperProofCartAttribute`.\n    - **Action:** The server responds to the checkout extension's request with the newly generated `TamperProofCartAttribute`.\n5. **Checkout Extension:** Add the `TamperProofCartAttribute` to the cart.\n\n> Part 2. Apply a Discount from a `TamperProofCartAttribute` (Function)\n\n6. **Function:** Read the `TamperProofCartAttribute` and `TrustedState` from GraphQL input.\n    - **Security:**\n        - The `TrustedState` is composed of:\n            - `CheckoutData` from the GraphQL input. This is trusted because it is provided directly to the Function by Shopify's servers.\n            - A map of `ActiveOfferVersion`s from a discount private metafield. This is trusted because it can only be set from our server using the Admin API.\n7. **Function:** Verify that the `TamperProofCartAttribute` has not been tampered with.\n    - **Action:** The Function creates an HMAC signature from the data string of the `TamperProofCartAttribute` and the shared secret. The Function compares the HMAC that it generated against the HMAC from the `TamperProofCartAttribute`. If these are not equal, then the discount should **NOT** be applied.\n    - **Security:**\n        - This ensures that the attribute was generated by our server, and has not been modified (e.g., by the customer).\n        - This does **NOT** provide any indication of whether or not the state contained in the data of the `TamperProofCartAttribute` matches reality. The state must still be verified against the trusted state.\n        - This tells us that the _relationship_ between the `UnverifiedState` and the `DiscountToApplyIfStateIsVerified` is true. That is, if the `UnverifiedState` is true then our server says that the discount should be applied.\n8. **Function:** Verify the `UnverifiedState` using the `TrustedState`.\n    - **Action:** The Function compares the `UnverifiedState` from the `TamperProofCartAttribute` to the `TrustedState` from its GraphQL input. If these are not equal, then the discount should **NOT** be applied.\n    - **Security:**\n        - If the `TrustedState` matches the `UnverifiedState`, then it is safe to apply the `DiscountToApplyIfStateIsVerified`.\n        - If the states are not equal, then one of the following may have happened:\n            1. The request to the server was forged and sent with a `CheckoutData` that did not match reality, or\n            2. The `CheckoutData` has changed since the `TamperProofCartAttribute` was created, or\n            3. The `ActiveOfferVersion` has changed since the `TamperProofCartAttribute` (e.g., due to the merchant editing the offer)\n9. **Function:** Apply the `DiscountToApplyIfStateIsVerified` from the `TamperProofCartAttribute`, if all previous checks pass.\n\n### Editor\n\n**Discount Metafields**\n\n-   `$app:upsell-offer-discount-function.private-state`:\n    -   `activeOfferVersions`: A key-value map of offer ID to active version number. This is used by the Function as part of the `TrustedState`.\n-   `$app:upsell-offer-discount-function.private-shared-secret-key`: This is the shared secret between the server and the Function used to generate HMAC signatures. This value should be _unique_ for each discount code to limit the damage if a key is compromised.\n\n**Updating Offers**\n\nWhen a discounted offer is changed, the active version number must be incremented. The combination of the offer ID and the active version number are used to create a `ActiveOfferVersion`. When the version number is incremented, then any `ActiveOfferVersion` that uses the old version number becomes invalid. This ensures that discounts from previous offer versions cannot be applied.\n\n## Type Definitions\n\n```typescript\n/**\n * A cart attribute that is used to transfer non-secret trusted data from our Server to the Function.\n * This is created on our server and verified in the Function.\n */\ninterface TamperProofCartAttribute {\n    /**\n     * A string containing the non-secret trusted data to be transfered.  In the case of checkout\n     * upsell discounts, this is the JSON stringification of a `TamperProofCartAttributeData` object.\n     */\n    data: string;\n    /**\n     *  A SHA-256 hash of the `data`, generating using a shared secret key between the Server and\n     * Function. This can be verified to ensure the integrity of the `data`.\n     */\n    hmac: string;\n}\n\n/**\n * The data contained in a `TamperProofCartAttribute` for checkout upsell discounts.\n */\ninterface TamperProofCartAttributeData {\n    unverifiedState: UnverifiedState;\n    discountToApplyIfStateIsVerified: DiscountToApplyIfStateIsVerified;\n}\n\n/**\n * All of the relevant information about the contents of a checkout that are necessary to determine\n * whether or not the checkout is eligible for a given discount.\n */\ninterface CheckoutData {\n    lineItems: GenericLineItem[];\n}\n\ninterface GenericLineItem {\n    quantity: number; // u64\n    /**\n     * The numeric ID of the variant. This is `null` if the line item is not a product on the\n     * store (e.g., custom line items in draft orders).\n     *\n     * Also known as the legacy ID.\n     *\n     * @example 123456789\n     */\n    variantId: number | null; // u128\n}\n\n/**\n * This is the same as the `GenericLineItem`, except the `variantId` is non-null.\n */\ninterface VariantLineItem {\n    quantity: number;\n    variantId: number;\n}\n\n/**\n * The discount which should be applied by the function if the `UnverifiedState` is verified.\n */\ninterface DiscountToApplyIfStateIsVerified {\n    targetLineItem: VariantLineItem;\n    value:\n        | {\n              discountType: 'percentage';\n              percentageOutOf100: number; // f64\n          }\n        | {\n              discountType: 'fixedAmount';\n              amountInShopCurrency: number; // f64\n          };\n}\n\n/**\n * A general concept including the ID of an offer and the most recent version number. Version\n * numbers should be incremented whenever a change happens to the offer that would affect\n * the discount. For example, changing the triggers for the offer or changing the discount\n * amount.\n */\ninterface ActiveOfferVersion {}\n\n/**\n * All information required to determine whether or not a discount should be applied to a checkout.\n * See `UnverifiedState` and `TrustedState` for specific usages.\n */\ninterface State {}\n\n/**\n * A `State` that may or may not be match reality. The `UnverifiedState` may be outright incorrect,\n * or reality may have changed since the `UnverifiedState` was created. This is used to determine\n * the `DiscountToApplyIfStateIsVerified`.\n */\ninterface UnverifiedState {\n    checkoutData: CheckoutData;\n    activeOfferVersion: {\n        offerId: string;\n        offerVersion: number; // u32\n    };\n}\n\n/**\n * The \"real\" `State`, strictly composed of trusted information. This can be used to verify the\n * `UnverifiedState`.\n */\ninterface TrustedState {\n    checkoutData: CheckoutData;\n    /**\n     * A key-value map containing all active offer IDs (keys) and their corresponding version numbers (values).\n     */\n    activeOfferVersions: Record<string, number>;\n}\n```",
                "filename": "docs/checkout-upsell-discounts.md",
                "start_index": 0,
                "end_index": 10969,
                "start_line": 1,
                "end_line": 181,
                "max_line": 181,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<aside class=\"sidebar\" role=\"complementary\">\n                    <div class=\"sidebar__header\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323196,
                "end_index": 323511,
                "start_line": 6285,
                "end_line": 6493,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"section__content\">\n                                                    <div\n                                                        class=\"section__content__column section__content__column--half\"\n                                                    >\n                                                        <div class=\"text-container\">\n                                                            <h3 class=\"heading-3\">Contact information</h3>\n\n                                                            <p class=\"as-dummy-line\"></p>\n\n                                                            <h3 class=\"heading-3\">Shipping address</h3>\n                                                            <address class=\"address\">\n                                                                <p class=\"as-dummy-line\"></p>\n                                                                <p class=\"as-dummy-line as-w80\"></p>\n                                                                <p class=\"as-dummy-line as-w40\"></p>\n                                                            </address>\n\n                                                            <h3 class=\"heading-3\">Shipping method</h3>\n                                                            <p class=\"as-dummy-line as-w40\"></p>\n                                                        </div>\n                                                    </div>\n\n                                                    <div\n                                                        class=\"section__content__column section__content__column--half\"\n                                                    >\n                                                        <div class=\"text-container\">\n                                                            <h3 class=\"heading-3\">Payment method</h3>\n                                                            <ul class=\"payment-method-list\">\n                                                                <li class=\"payment-method-list__item\">\n                                                                    <p class=\"as-dummy-line as-w80\"></p>\n                                                                </li>\n                                                            </ul>\n\n                                                            <h3 class=\"heading-3\">Billing address</h3>\n                                                            <address class=\"address\">\n                                                                <p class=\"as-dummy-line\"></p>\n                                                                <p class=\"as-dummy-line as-w80\"></p>\n                                                                <p class=\"as-dummy-line as-w40\"></p>\n                                                            </address>\n                                                        </div>\n                                                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318877,
                "end_index": 321837,
                "start_line": 6191,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<html\n    lang=\"en\"\n    dir=\"ltr\"\n    class=\"js desktop page--no-banner page--logo-main page--show page--show card-fields cors svg opacity placeholder no-touchevents displaytable display-table generatedcontent cssanimations flexbox no-flexboxtweener anyflexbox shopemoji floating-labels\"\n>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 0,
                "end_index": 289,
                "start_line": 1,
                "end_line": 6518,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Post-purchase checkout extension\n\n## Dev Setup\n\n1. Ensure that you have an `.env` file in the `/server` directory. The extension will use the `HOST` variable from this file\n\n2. Run `yarn dev` to start serving the post-purchase extension code. This will print:\n\n```\n\ud83d\udd2d > Your extension is available at http://localhost:{{PORT}}/assets/extension.js\n```\n\n3. Download the [Shopify post-purchase Chrome extension](https://chrome.google.com/webstore/detail/shopify-post-purchase-dev/nenmcifhoegealiiblnpihbnjenleong)\n\n4. Enable the Chrome extension\n   ![](docs/images/chrome-extension-activate.png)\n\n5. Open the post-purchase Chrome extension setup page\n   ![](docs/images/chrome-extension-details.png)\n   ![](docs/images/chrome-extension-options-link.png)\n\n6. Past the `http://localhost:{{PORT}}/assets/extension.js` URL into the setup page\n7. Copy the API key from your app setup page and paste into the setup page\n   ![](docs/images/chrome-extension-script-url.png)\n   ![](docs/images/app-api-key.png)",
                "filename": "extensions/post-purchase/README.md",
                "start_index": 0,
                "end_index": 999,
                "start_line": 1,
                "end_line": 25,
                "max_line": 25,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box\">\n                                            <div class=\"content-box__row content-box__row--no-border\">\n                                                <h2>Customer information</h2>\n                                            </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318496,
                "end_index": 318753,
                "start_line": 6192,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"main\">\n                    <header class=\"main__header\" role=\"banner\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245397,
                "end_index": 245703,
                "start_line": 6153,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<head>\n        <meta charset=\"utf-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n        <meta\n            id=\"thankyoupage_viewport_meta\"\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0\"\n        />\n        <meta name=\"referrer\" content=\"origin\" />\n\n        <title>Thank you! - Checkout</title>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 294,
                "end_index": 717,
                "start_line": 6,
                "end_line": 16,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script defer src=\"./thankyoupage_bundle.js?v2\"></script>\n        <script defer src=\"/apps/aftersell_sdk.bundle.min.js?v2\"></script>\n    </head>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241237,
                "end_index": 241381,
                "start_line": 6073,
                "end_line": 6075,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"order-summary__section__content\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323949,
                "end_index": 323994,
                "start_line": 6297,
                "end_line": 6297,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<button\n                class=\"order-summary-toggle order-summary-toggle--show shown-if-js\"\n                data-trekkie-id=\"order_summary_toggle\"\n                aria-expanded=\"false\"\n                aria-controls=\"order-summary\"\n                data-drawer-toggle=\"[data-order-summary]\"\n            >",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241855,
                "end_index": 242157,
                "start_line": 6089,
                "end_line": 6488,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<th class=\"product__description\" scope=\"row\">\n                                                        <span class=\"product__description__name order-summary__emphasis\"\n                                                            >Product Name</span\n                                                        >\n                                                        <span\n                                                            class=\"product__description__variant order-summary__small-text\"\n                                                            >Variant Name</span\n                                                        >\n                                                    </th>\n                                                    <td class=\"product__quantity visually-hidden\">1</td>\n                                                    <td class=\"product__price\">\n                                                        <span class=\"order-summary__emphasis\">$42.99</span>\n                                                    </td>\n                                                </tr>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 331038,
                "end_index": 332129,
                "start_line": 6363,
                "end_line": 6376,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row text-container\">\n                                                <h2 class=\"heading-2 os-step__title\" id=\"main-header\" tabindex=\"-1\">\n                                                    Your order is confirmed\n                                                </h2>\n                                                <p class=\"os-step__description\">\n                                                    You\u2019ll receive an email when your order is ready.\n                                                </p>\n                                            </div>\n                                        </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 317828,
                "end_index": 318454,
                "start_line": 6200,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row content-box__row--no-padding\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248190,
                "end_index": 248249,
                "start_line": 6193,
                "end_line": 6193,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "intial_documentation_sources": {},
        "external_documentation_snippets": {},
        "mmr_code_snippets_initial": [
            {
                "code": "import { asChoiceField, Field, useDynamicList } from '@shopify/react-form';\nimport {\n    Badge,\n    Box,\n    Button,\n    Card,\n    Checkbox,\n    Divider,\n    HorizontalStack,\n    IconSource,\n    Modal,\n    ResourceItem,\n    ResourceList,\n    Text,\n    TextField,\n    Tooltip,\n    VerticalStack,\n} from '@shopify/polaris';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DynamicList } from '@shopify/react-form/build/ts/hooks/list/dynamiclist';\nimport { NotesContentType, NoteType } from '../../../../../../server/src/modules/checkout-v2/checkout-v2.dtos';\nimport { usePrevious } from 'src/hooks/usePrevious';\nimport { EmptyStateDashedWithButton } from './empty-state-dashed-with-button';\nimport { LineItemWrapper, LineItemWrapperProps, PriorityModal } from './priority-modal';\nimport { DeleteMajor, EditMajor } from '@shopify/polaris-icons';\nimport styles from './styles.module.scss';\n\nexport const NotesContentEditor = ({ content }: { content: Field<NotesContentType> }) => {\n    const [editingItem, setEditingItem] = useState<null | number>(null);\n    const [priorityModal, setPriorityModal] = useState(false);\n\n    const contentValue = useMemo(() => content.value.notes, [content.value.notes]);\n    const list = useDynamicList(contentValue, () => ({\n        id: uuidv4(),\n        checked: false,\n        text: { text: 'Planning to gift this? Let us know!' },\n        showTextBox: false,\n        textBoxPlaceholder: 'Write your note here!',\n    }));\n    const previousList = usePrevious<DynamicList<NoteType>['value']>(list.value);\n\n    const handleListItemChange = () => {\n        content.onChange({\n            ...content.value,\n            notes: list.value,\n        });\n    };\n\n    const onSave = () => {\n        handleListItemChange();\n    };\n\n    useEffect(() => {\n        if (!previousList) return; //initial render\n        if (list.value.length === previousList?.length) {\n            const changedPriority = previousList.some((value, index) => value.id !== list.value?.[index]?.id);\n            if (changedPriority) {\n                return;\n            }\n        }\n        handleListItemChange();\n    }, [list.value]);\n\n    return (\n        <>\n            <VerticalStack gap=\"3\">\n                {list.value.length === 0 ? (\n                    <EmptyStateDashedWithButton buttonText=\"Add note\" onClick={() => list.addItem()} />\n                ) : (\n                    <Card padding=\"0\">\n                        <Box padding=\"4\" background=\"bg-subdued\">\n                            <HorizontalStack align=\"space-between\" blockAlign=\"center\">\n                                <Text as=\"h4\" variant=\"headingMd\">\n                                    Notes\n                                </Text>\n                                <HorizontalStack gap=\"2\">\n                                    <Button onClick={() => setPriorityModal(true)}>Reorder</Button>\n                                    <Button onClick=",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx",
                "start_index": 0,
                "end_index": 2974,
                "start_line": 1,
                "end_line": 79,
                "max_line": 219,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "[\n                {\n                    appId: 'addTextWidget',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 0,\n                    config: {\n                        heading: {\n                            value: '<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, before you go!</strong></span></p>',\n                        },\n                        text: {\n                            value: '',\n                        },\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },\n                {\n                    appId: 'timer',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 1,\n                    config: {\n                        minutes: '5',\n                        heading: `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\", sans-serif;\">Your order is confirmed but you can still add the following for a limited time</span><span style=\"font-size: 18px;\"> </span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span></p>`,\n                        text: '',\n                        textColor: 'Black',\n                        backgroundColor: 'Yellow',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 24366,
                "end_index": 26314,
                "start_line": 29,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Checkbox\n                                    label=\"Release fulfillment holds from 1-click offers when offer timer ends\"\n                                    helpText='If the customer closes their browser tab while on the post-purchase page, the order will stay \"On Hold\" for 60 minutes by default. This setting reduces the delay to be equal to the upsell offer timer duration (e.g. 10 minutes).'\n                                    checked={fields.releaseFulfillmentHoldsAsap.value}\n                                    onChange={fields.releaseFulfillmentHoldsAsap.onChange}\n                                    disabled={!hasAllRequiredScopes}\n                                />\n                            </VerticalStack>\n                        </VerticalStack>\n                    </Card>\n                </AnnotatedLayout>\n                <AnnotatedLayout title=\"Partially paid\">\n                    <Card>\n                        <VerticalStack gap=\"3\">\n                            <VerticalStack gap=\"2\">\n                                <Checkbox\n                                    label={\n                                        tyPageOrderMergingEnabled\n                                            ? 'Automatically remove unpaid upsell products (from 1-click and TY page) from orders'\n                                            : 'Automatically remove unpaid 1-click upsell products from orders'\n                                    }\n                                    checked={fields.removePartiallyPaidItems.value}\n                                    onChange={fields.removePartiallyPaidItems.onChange}\n                                />\n                                {fields.removePartiallyPaidItems.value && (\n                                    <Box paddingInlineStart=\"6\">",
                "filename": "web/client/src/pages/settings/settings-fulfillment-and-payment.page.tsx",
                "start_index": 2848,
                "end_index": 4640,
                "start_line": 68,
                "end_line": 93,
                "max_line": 141,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "@modelOptions({ schemaOptions: { _id: false } })\nexport class Note {\n    @prop({ required: true })\n    id!: number;\n\n    @prop({ required: true })\n    checked!: boolean;\n\n    @prop({ required: true })\n    text!: string;\n\n    @prop({ required: true, default: false })\n    showTextBox!: boolean;\n\n    @prop({ required: true, default: '' })\n    textBoxPlaceholder!: string;\n}\n\n@modelOptions({ schemaOptions: { _id: false } })\nexport class NoteWidgetConfig {\n    @prop({ required: true, type: Note })\n    notes!: Note[];\n\n    @prop({ required: false })\n    triggers?: CheckoutTriggers;\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~models~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n@modelOptions({ schemaOptions: { versionKey: false, discriminatorKey: 'type' } })\nexport class CheckoutWidgets {\n    _id!: string; // For TS, not for Mongo. This is stored as an ObjectID in Mongo.\n\n    @prop({ required: true })\n    type!: string;\n\n    @prop({ required: true })\n    shop!: string;\n\n    @prop({ required: true, default: false })\n    status!: boolean;\n\n    /** legacy field. Didn't used nowhere */\n    @prop({ required: false })\n    hasSplitTest?: boolean;\n\n    @prop({ required: true, default: new Date() })\n    createdAt!: Date;\n\n    @prop({ required: false, enum: SplitTestEnum, default: null, addNullToEnum: true })\n    splitTestVersion?: SplitTestEnum;\n\n    config!: { [key: string]: any };\n}\n\nexport class UpsellCheckoutWidget extends CheckoutWidgets {\n    @prop({ required: true })\n    declare config: UpsellWidgetConfig;\n}\n\nexport type IUpsellCheckoutWidget = InstanceType<typeof UpsellCheckoutWidget>;\n\nexport class UpsellCheckoutWidgetOne extends UpsellCheckoutWidget {\n    declare type: CHECKOUT_WIDGETS_TYPES.UPSELL_WIDGET_ONE;\n}\n\nexport class UpsellCheckoutWidgetTwo extends UpsellCheckoutWidget {\n    declare type: CHECKOUT_WIDGETS_TYPES.UPSELL_WIDGET_TWO;\n}\n\nexport class UpsellCheckoutWidgetThree extends UpsellCheckoutWidget {\n    declare type: CHECKOUT_WIDGETS_TYPES.UPSELL_WIDGET_THREE;\n}\n\nexport class TrustBadgeCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.TRUST_BADGES_WIDGET;\n\n    @prop({ required: true })\n    declare config: TrustBadgeWidgetConfig;\n}\n\nexport class TimerCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.TIMER_WIDGET;\n\n    @prop({ required: true })\n    declare config: TimerWidgetConfig;\n}\n\nexport class RewardsCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.REWARDS_WIDGET;\n\n    @prop({ required: true })\n    declare config: RewardsWidgetConfig;\n}\n\nexport class TestimonialsCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.TESTIMONIALS_WIDGET;\n\n    @prop({ required: true })\n    declare config: TestimonialWidgetConfig;\n}\n\nexport class FAQCheckoutWidget extends CheckoutWidgets {\n    declare type: CHECKOUT_WIDGETS_TYPES.FAQ_WIDGET;\n\n    // @prop({ required: true })\n    // config!: null;\n}",
                "filename": "web/server/src/modules/checkout-widgets/checkout-widgets.model.ts",
                "start_index": 8689,
                "end_index": 11617,
                "start_line": 73,
                "end_line": 498,
                "max_line": 565,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Banner\n                                            status=\"warning\"\n                                            title={'\ud83d\ude80 Faster, Smoother, & Better Checkout Editor'}\n                                            action={{\n                                                content: 'Update Now',\n                                                loading: updateVersionLoading,\n                                                onAction: () => {\n                                                    updateCheckoutVersion('V2');\n                                                },\n                                            }}\n                                        >\n                                            <Text variant=\"bodyLg\" as=\"p\">\n                                                Explore our upgraded checkout editor. Discover new triggers, AI upsells,\n                                                multiple widget configurations, split testing and other customization\n                                                features. Upgrading is fully reversible and will automatically transfer\n                                                your current setup.\n                                            </Text>\n                                        </Banner>\n                                    )}\n                                    {currentSplitTestTab === 'A' || !currentSplitTestTab\n                                        ? widgetsVersionA\n                                        : widgetsVersionB}\n                                </VerticalStack>\n                            )}\n                        </div>\n                        <div className={styles.preview}>\n                            <div>\n                                <Preview widget={selectedWidgetData} widgetType={previewSelection?.type} />\n                                {selectedTab === 'rewardsWidget' && (\n                                    <div style={{ marginTop: '20px' }}>\n                                        <Banner title=\"\" status=\"info\">\n                                            The rewards bar widget is intended to be used with one or more upsell\n                                            widgets. If a customer sees that they're $10 away from free shipping, they\n                                            might want to accept one of your upsell products to get there!\n                                        </Banner>\n                                        <Banner\n                                            title=\"Create discount\"\n                                            action={{\n                                                content: 'Create discount',",
                "filename": "web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx",
                "start_index": 10154,
                "end_index": 12821,
                "start_line": 236,
                "end_line": 274,
                "max_line": 306,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<VerticalStack align=\"space-between\">\n            <WidgetHeading {...title}>Edit text widget</WidgetHeading>\n            <Box paddingInlineStart=\"3\" paddingInlineEnd=\"3\" paddingBlockEnd=\"4\" paddingBlockStart=\"2\">\n                <VerticalStack gap=\"3\">\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Heading\n                    </Text>\n                    <RichTextEditor\n                        isMultiProduct={isMultiProduct}\n                        editorState={fields.heading.value}\n                        offerVersion={offerVersion}\n                        onChange={getHandleChangeRichTextEditor('heading')}\n                        isPostPurchase\n                    />\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Body text\n                    </Text>\n                    <RichTextEditor\n                        isMultiProduct={isMultiProduct}\n                        editorState={fields.text.value}\n                        offerVersion={offerVersion}\n                        onChange={getHandleChangeRichTextEditor('text')}\n                        isPostPurchase\n                    />\n                    {offerVersion === 'v2' && (\n                        <>\n                            <RangeSlider\n                                onChange={(val: number) => {\n                                    onChangeConfig({ topPadding: val });\n                                }}\n                                output\n                                step={2}\n                                value={config.topPadding ?? 0}\n                                label=\"Top padding\"\n                                min={0}\n                                max={10}\n                                prefix={<p>0</p>}\n                                suffix={<p>10</p>}\n                            />\n                            <RangeSlider\n                                onChange={(val: number) => {\n                                    onChangeConfig({ bottomPadding: val });\n                                }}\n                                output\n                                step={2}\n                                value={config.bottomPadding ?? 0}\n                                label=\"Bottom padding\"\n                                min={0}\n                                max={10}\n                                prefix={<p>0</p>}\n                                suffix={<p>10</p>}\n                            />\n                        </>\n                    )}\n                </VerticalStack>\n            </Box>\n            <Box paddingInlineStart=\"3\" paddingInlineEnd=\"3\" paddingBlockEnd=\"4\" paddingBlockStart=\"2\">\n                <Button\n                    size=\"large\"\n                    fullWidth\n                    outline\n                    destructive\n                    icon={DeleteMinor as IconSource}\n                    onClick={title.onDelete}\n                >\n                    Delete Widget\n                <",
                "filename": "web/client/src/pages/funnels/components/text-widget-settings.tsx",
                "start_index": 1991,
                "end_index": 4985,
                "start_line": 55,
                "end_line": 121,
                "max_line": 125,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "const productsToEdit = useMemo(\n        () =>\n            editingProductIds ? products.filter((product) => editingProductIds.includes(product.product.id)) : products,\n        [products, editingProductIds]\n    );\n\n    const isMostOrLeastExpensiveProduct =\n        !!productsToEdit.length &&\n        productsToEdit.every(\n            ({ product }) =>\n                product.productType === 'mostExpensiveProduct' || product.productType === 'leastExpensiveProduct'\n        );\n\n    const isAiRecommendedProduct =\n        !!productsToEdit.length &&\n        productsToEdit.every(\n            (info) =>\n                info.product.productType === 'aiRecommendedProduct' ||\n                info.product.productType === 'aiRecommendedProduct'\n        );\n    const allProductsArePlaceholder =\n        !!productsToEdit.length && productsToEdit.every((info) => info.product.productType !== 'specificProduct');\n\n    const hasReviewCountError =\n        !!productsToEdit.length && productsToEdit.every((info) => info.product.productReviewsCount === 0);\n\n    const productIsSubscriptionOnly =\n        !!productsToEdit.length && productsToEdit.every((info) => info.requiresSellingPlan);\n    const hasProductIsSubscriptionOnly = productsToEdit.some((info) => info.requiresSellingPlan);\n    const hasSubscriptionVariants =\n        !!productsToEdit.length && productsToEdit.every((info) => (info.product.subscriptionVariants?.length || 0) > 0);\n\n    //prevent setting the 'one-time purchase' option for subscription products only when editing multiple products at once\n    const shouldShowSubscriptionSettings = editingProductIds\n        ? (!hasProductIsSubscriptionOnly && hasSubscriptionVariants) || allProductsArePlaceholder\n        : hasSubscriptionVariants || allProductsArePlaceholder;\n\n    const postPurchaseReplacementUpsellsAreEnabled = useFeatureFlagIsEnabled(\n        'postPurchaseReplacementUpsellsAreEnabled'\n    );\n    const hasCustomReviewAccess = useFeatureFlagIsEnabled('productReviewCustomizationIsEnabled');\n\n    const presetQuantity = isConfigV2(config, offerVersion) ? config.presetQuantity : void 0;\n\n    const product = products[0]?.product || {};\n\n    return (\n        <VerticalStack align=\"space-between\">\n            <WidgetHeading onNavBack={onNavBack}>\n                {editingProductIds ? 'Edit all products' : isSingleProduct ? 'Edit upsell product' : product.title}\n            </WidgetHeading>\n            <SectionSettings\n                name={'Select products to edit'}\n                icon={ChecklistAlternateMajor as IconSource}\n                show={!isSingleProduct && !!editingProductIds?.length && !!products.length}\n                defaultOpen={preselectedSubsection === PreselectedSubsection.PRODUCT_SELECTION}\n            >\n                {!!editingProductIds && !!handleChangeEditingProductIds && (\n                    <ChoiceList\n                        allowMultiple\n                        title=\"\"\n                        choices={products.map(({ product }) => ({",
                "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                "start_index": 11583,
                "end_index": 14577,
                "start_line": 291,
                "end_line": 352,
                "max_line": 1401,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "const currentNotes = React.useMemo(() => {\n        const parsedNotesArray = Object.entries(parsedNotesFromCart);\n        const res: CurrentNote[] = checkedNotesFromDb.map(({ text, ...note }) => {\n            const isSelected = parsedNotesArray.find(([name]) => name === text);\n\n            return {\n                ...note,\n                name: text,\n                isSelected: !!isSelected,\n                textBoxValue: isSelected?.[1] || '',\n                fromInitialCart: false,\n            };\n        });\n\n        const noteFromCart = parsedNotesArray.find(([noteName]) =>\n            checkedNotesFromDb.every((note) => note.text !== noteName)\n        );\n\n        if (noteFromCart) {\n            res.push({ fromInitialCart: true, name: noteFromCart[0], textBoxValue: '', isSelected: true });\n        }\n\n        return res;\n    }, [parsedNotesFromCart, checkedNotesFromDb]);\n\n    const applyUpdates = React.useCallback(\n        (currentNotes: CurrentNote[]) => {\n            const updatedNotesObj = currentNotes\n                .filter((note) => note.isSelected)\n                .map((note) => [note.name, note.textBoxValue] as [string, string]);\n\n            const updatedNotes = stringifyNote(updatedNotesObj);\n\n            let changes: NoteRemoveChange | NoteUpdateChange;\n            if (updatedNotes) {\n                changes = { type: 'updateNote', note: updatedNotes };\n            } else {\n                changes = { type: 'removeNote' };\n            }\n\n            if (notesFromCart === updatedNotes) return;\n\n            setLoading(true);\n\n            applyNoteChange(changes)\n                .then((res) => {\n                    if (res.type === 'error' && res.message) {\n                        setError(res.message);\n                        return;\n                    }\n                })\n                .finally(() => setLoading(false));\n        },\n        [applyNoteChange]\n    );\n\n    const handleUpdateCheckbox = React.useCallback(\n        (id: number) => (isSelected: boolean) => {\n            const handledNote = currentNotes.find((note) => note.id === id);\n            if (!handledNote) return;\n\n            handledNote.isSelected = isSelected;\n\n            applyUpdates(currentNotes);\n        },\n        [currentNotes]\n    );\n\n    const handleUpdateTextBox = React.useCallback(\n        (id: number) => (newText: string) => {\n            const handledNote = currentNotes.find((note) => note.id === id);\n            if (!handledNote) return;\n\n            handledNote.textBoxValue = newText;\n            applyUpdates(currentNotes);\n        },\n        [currentNotes, parsedNotesFromCart]\n    );\n\n    const notesForRender = React.useMemo(\n        () => currentNotes.filter((note) => !note.fromInitialCart) as RenderNoteType[],\n        [currentNotes]\n    );\n\n    return (\n        <BlockStack>\n            {notesForRender.map(\n                ({ id, name, showTextBox = false, textBoxPlaceholder = '', isSelected, textBoxValue }) => {",
                "filename": "extensions-web-common/checkout/widgets/note.tsx",
                "start_index": 2634,
                "end_index": 5594,
                "start_line": 76,
                "end_line": 163,
                "max_line": 191,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Layout>\n                            <Layout.Section fullWidth>\n                                <AdditionalScopesBanner\n                                    requiredAdditionalScopes={['write_checkout_branding_settings']}\n                                />\n                            </Layout.Section>\n                            <StickyLayoutSection oneThird>\n                                <Card padding=\"1\">\n                                    <VerticalStack>\n                                        <Box\n                                            paddingInlineStart=\"4\"\n                                            paddingInlineEnd=\"4\"\n                                            paddingBlockStart=\"3\"\n                                            paddingBlockEnd=\"3\"\n                                        >\n                                            <VerticalStack gap=\"2\" align=\"start\" inlineAlign=\"start\">\n                                                <HorizontalStack blockAlign=\"center\" align=\"space-between\">\n                                                    <Text variant=\"headingMd\" as=\"h6\">\n                                                        Edit branding\n                                                    </Text>\n                                                </HorizontalStack>\n                                                <HorizontalStack gap=\"2\" blockAlign=\"center\">\n                                                    {currentCheckoutProfile?.isPublished ? (\n                                                        <Badge status=\"success\" progress=\"complete\" size=\"small\">\n                                                            Live\n                                                        </Badge>\n                                                    ) : (\n                                                        <Badge status=\"info\" progress=\"complete\" size=\"small\">\n                                                            Draft\n                                                        </Badge>\n                                                    )}\n                                                    <ButtonSelect\n                                                        plain\n                                                        value={currentCheckoutProfile?.id}\n                                                        onChange={(value) => {\n                                                            setCurrentCheckoutProfile(\n                                                                checkoutProfiles.find(\n                                                                    (profile) => profile?.id === value\n                                                                )\n                                                            );\n                                                        }",
                "filename": "web/client/src/pages/checkout/checkout-branding.page.tsx",
                "start_index": 6634,
                "end_index": 9487,
                "start_line": 176,
                "end_line": 299,
                "max_line": 320,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "=\"Show style settings\">\n                    <VerticalStack gap=\"2\">\n                        <Checkbox\n                            label=\"Show border around upsells\"\n                            checked={content.value.bordered}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    bordered: val,\n                                });\n                            }}\n                        />\n                        <Checkbox\n                            label=\"Use outlined button\"\n                            checked={content.value.buttonStyle === 'secondary'}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    buttonStyle: val ? 'secondary' : 'primary',\n                                });\n                            }}\n                        />\n\n                        {content.value.upsellType === 'single' && (\n                            <Checkbox\n                                label={'Use full width button?'}\n                                checked={content.value.fullWidthButton}\n                                onChange={(val) => {\n                                    content.onChange({\n                                        ...content.value,\n                                        fullWidthButton: val,\n                                    });\n                                }}\n                            />\n                        )}\n                        {content.value.upsellType === 'multi' && (\n                            <Select\n                                label=\"Layout Direction\"\n                                options={[\n                                    { label: 'Horizontal (Scrollable)', value: 'horizontal' },\n                                    { label: 'Vertical', value: 'vertical' },\n                                ]}\n                                value={content.value.direction}\n                                onChange={(val: 'horizontal' | 'vertical') => {\n                                    content.onChange({\n                                        ...content.value,\n                                        direction: val,\n                                    });\n                                }}\n                            />\n                        )}\n                    </VerticalStack>\n                </ShowAdvanced>\n            </VerticalStack>\n\n            <Modal\n                title=\"Edit Upsell Product\"\n                open={editingItem !== null}\n                onClose={() => setEditingItem(null)}\n                primaryAction={{\n                    content: 'Confirm',\n                    onAction: ()",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                "start_index": 22668,
                "end_index": 25517,
                "start_line": 517,
                "end_line": 586,
                "max_line": 742,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "reranked_doc_snippets_initial": [
            {
                "code": "# AfterSell\n\n### All Docs on Notion \ud83d\udc49 [AfterSell Notion Docs](https://www.notion.so/aftersell/AfterSell-Docs-9d43566167b5426d86b5983925872953?pvs=4)",
                "filename": "README.md",
                "start_index": 0,
                "end_index": 148,
                "start_line": 1,
                "end_line": 3,
                "max_line": 3,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"hidden\">\n                            <span class=\"visually-hidden\" id=\"forwarding-external-new-window-message\">\n                                Opens external website in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-new-window-message\">\n                                Opens in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-external-message\">\n                                Opens external website.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"checkout-context-step-one\">\n                                Customer information - Checkout\n                            </span>\n                        </div>\n                    </main>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 322226,
                "end_index": 323078,
                "start_line": 6265,
                "end_line": 6282,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script src=\"https://cdn.shopify.com/shopifycloud/app-bridge.js\"></script>\n        <!-- Shopify App Bridge [END] -->\n\n        <!-- User Pre-fetching [START] -->\n        <script>\n            window.indexHtmlPrefetchedUserPromise = fetch('/api/v1/user').then((res) => res.json());\n        </script>\n        <!-- User Pre-fetching [END] -->\n\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" id=\"aftersell-viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" type=\"image/png\" href=\"/favicon.svg\" />\n        <meta name=\"description\" content=\"AfterSell App\" />\n        <script>\n            const global = globalThis;\n        </script>\n        <script>\n            (function () {\n                const w = window;\n                const ic = w.Intercom;\n                if (typeof ic === 'function') {\n                    ic('reattach_activator');\n                    ic('update', w.intercomSettings);\n                } else {\n                    const d = document;\n                    var i = function () {\n                        i.c(arguments);\n                    };\n                    i.q = [];\n                    i.c = function (args) {\n                        i.q.push(args);\n                    };\n                    w.Intercom = i;\n                    const l = function () {\n                        const s = d.createElement('script');\n                        s.type = 'text/javascript';\n                        s.async = true;\n                        s.src = 'https://widget.intercom.io/widget/l7yr8zsg';\n                        const x = d.getElementsByTagName('script')[0];\n                        x.parentNode.insertBefore(s, x);\n                    };\n                    if (w.attachEvent) {\n                        w.attachEvent('onload', l);\n                    } else {\n                        w.addEventListener('load', l, false);\n                    }\n                }\n            })();\n        </script>\n\n        <!-- FirstPromoter [START] -->\n        <script>\n            (function (w) {\n                w.fpr =\n                    w.fpr ||\n                    function () {\n                        w.fpr.q = w.fpr.q || [];\n                        w.fpr.q[arguments[0] == 'set' ? 'unshift' : 'push'](arguments);\n                    };\n            })(window);\n            fpr('init', { cid: '1z5h5vjx' });\n            fpr('click');\n        </script>\n        <!-- NOTE this FirstPromoter script is our own copy of the source file with some modifications. Original: https://cdn.firstpromoter.com/fpr.js -->\n        <script type=\"module\" src=\"/src/libs/fpr/fpr.ts\" defer></script>\n        <!-- FirstPromoter [END] -->\n\n        <!-- Facebook Pixel Code -->",
                "filename": "web/client/index.html",
                "start_index": 3507,
                "end_index": 6223,
                "start_line": 51,
                "end_line": 118,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"order-summary-toggle__inner\">\n                        <span class=\"order-summary-toggle__icon-wrapper\">\n                            <svg\n                                width=\"20\"\n                                height=\"19\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__icon\"\n                            >\n                                <path\n                                    d=\"M17.178 13.088H5.453c-.454 0-.91-.364-.91-.818L3.727 1.818H0V0h4.544c.455 0 .91.364.91.818l.09 1.272h13.45c.274 0 .547.09.73.364.18.182.27.454.18.727l-1.817 9.18c-.09.455-.455.728-.91.728zM6.27 11.27h10.09l1.454-7.362H5.634l.637 7.362zm.092 7.715c1.004 0 1.818-.813 1.818-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817zm9.18 0c1.004 0 1.817-.813 1.817-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--show\">\n                            <span>Show order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"6\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M.504 1.813l4.358 3.845.496.438.496-.438 4.642-4.096L9.504.438 4.862 4.534h.992L1.496.69.504 1.812z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--hide\">\n                            <span>Hide order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"7\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M6.138.876L5.642.438l-.496.438L.504 4.972l.992 1.124L6.138 2l-.496.436 3.862 3.408.992-1.122L6.138.876z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span\n                            class=\"order-summary-toggle__total-recap total-recap\"\n                            data-order-summary-section=\"toggle-total-recap\"\n                        >\n                            <span class=\"total-recap__final-price\" data-checkout-payment-due-target=\"5073\">$50.73</span>\n                        </span>\n                    </span>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 242214,
                "end_index": 245205,
                "start_line": 6097,
                "end_line": 6446,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<body class=\"aftersell-preview\">\n        <a href=\"#main-header\" class=\"skip-to-content\"> Skip to content </a>\n\n        <header class=\"banner\" data-header=\"\" role=\"banner\">\n            <div class=\"wrap\">\n                <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n            </div>\n        </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241387,
                "end_index": 241804,
                "start_line": 6077,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"step__sections\">\n                                <div class=\"section\">\n                                    <div class=\"section__header os-header\">\n                                        <svg\n                                            width=\"56\"\n                                            height=\"56\"\n                                            viewBox=\"0 0 56 56\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <circle cx=\"28\" cy=\"28\" r=\"26\" stroke=\"#E5E5E5\" stroke-width=\"2.29412\" />\n                                            <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M22.4811 37.3603L16.3636 31.3947C15.5663 30.6172 15.5663 29.3605 16.3636 28.583C17.1609 27.8055 18.4497 27.8055 19.247 28.583L23.8066 33.0293L36.6493 18.7538C37.3834 17.9186 38.6701 17.8231 39.5225 18.537C40.379 19.2529 40.4789 20.5056 39.7448 21.3388L25.4706 37.2469C25.1015 37.6685 24.5672 37.9191 24.0003 37.9409C23.3825 37.9429 22.8625 37.7341 22.4811 37.3603Z\"\n                                                fill=\"#008060\"\n                                                stroke=\"#E5E5E5\"\n                                                stroke-width=\"0.764706\"\n                                            />\n                                        </svg>\n                                        <div class=\"os-header__heading\">\n                                            <span class=\"os-order-number\"> Order #1001 </span>\n                                            <h2 class=\"os-header__title\" id=\"main-header\" tabindex=\"-1\">\n                                                Thank you {{Customer Name}}!\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245858,
                "end_index": 247957,
                "start_line": 6161,
                "end_line": 6451,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<aside class=\"sidebar\" role=\"complementary\">\n                    <div class=\"sidebar__header\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323196,
                "end_index": 323511,
                "start_line": 6285,
                "end_line": 6493,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"section__content\">\n                                                    <div\n                                                        class=\"section__content__column section__content__column--half\"\n                                                    >\n                                                        <div class=\"text-container\">\n                                                            <h3 class=\"heading-3\">Contact information</h3>\n\n                                                            <p class=\"as-dummy-line\"></p>\n\n                                                            <h3 class=\"heading-3\">Shipping address</h3>\n                                                            <address class=\"address\">\n                                                                <p class=\"as-dummy-line\"></p>\n                                                                <p class=\"as-dummy-line as-w80\"></p>\n                                                                <p class=\"as-dummy-line as-w40\"></p>\n                                                            </address>\n\n                                                            <h3 class=\"heading-3\">Shipping method</h3>\n                                                            <p class=\"as-dummy-line as-w40\"></p>\n                                                        </div>\n                                                    </div>\n\n                                                    <div\n                                                        class=\"section__content__column section__content__column--half\"\n                                                    >\n                                                        <div class=\"text-container\">\n                                                            <h3 class=\"heading-3\">Payment method</h3>\n                                                            <ul class=\"payment-method-list\">\n                                                                <li class=\"payment-method-list__item\">\n                                                                    <p class=\"as-dummy-line as-w80\"></p>\n                                                                </li>\n                                                            </ul>\n\n                                                            <h3 class=\"heading-3\">Billing address</h3>\n                                                            <address class=\"address\">\n                                                                <p class=\"as-dummy-line\"></p>\n                                                                <p class=\"as-dummy-line as-w80\"></p>\n                                                                <p class=\"as-dummy-line as-w40\"></p>\n                                                            </address>\n                                                        </div>\n                                                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318877,
                "end_index": 321837,
                "start_line": 6191,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<html\n    lang=\"en\"\n    dir=\"ltr\"\n    class=\"js desktop page--no-banner page--logo-main page--show page--show card-fields cors svg opacity placeholder no-touchevents displaytable display-table generatedcontent cssanimations flexbox no-flexboxtweener anyflexbox shopemoji floating-labels\"\n>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 0,
                "end_index": 289,
                "start_line": 1,
                "end_line": 6518,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Post-purchase checkout extension\n\n## Dev Setup\n\n1. Ensure that you have an `.env` file in the `/server` directory. The extension will use the `HOST` variable from this file\n\n2. Run `yarn dev` to start serving the post-purchase extension code. This will print:\n\n```\n\ud83d\udd2d > Your extension is available at http://localhost:{{PORT}}/assets/extension.js\n```\n\n3. Download the [Shopify post-purchase Chrome extension](https://chrome.google.com/webstore/detail/shopify-post-purchase-dev/nenmcifhoegealiiblnpihbnjenleong)\n\n4. Enable the Chrome extension\n   ![](docs/images/chrome-extension-activate.png)\n\n5. Open the post-purchase Chrome extension setup page\n   ![](docs/images/chrome-extension-details.png)\n   ![](docs/images/chrome-extension-options-link.png)\n\n6. Past the `http://localhost:{{PORT}}/assets/extension.js` URL into the setup page\n7. Copy the API key from your app setup page and paste into the setup page\n   ![](docs/images/chrome-extension-script-url.png)\n   ![](docs/images/app-api-key.png)",
                "filename": "extensions/post-purchase/README.md",
                "start_index": 0,
                "end_index": 999,
                "start_line": 1,
                "end_line": 25,
                "max_line": 25,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box\">\n                                            <div class=\"content-box__row content-box__row--no-border\">\n                                                <h2>Customer information</h2>\n                                            </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318496,
                "end_index": 318753,
                "start_line": 6192,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"main\">\n                    <header class=\"main__header\" role=\"banner\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245397,
                "end_index": 245703,
                "start_line": 6153,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<head>\n        <meta charset=\"utf-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n        <meta\n            id=\"thankyoupage_viewport_meta\"\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0\"\n        />\n        <meta name=\"referrer\" content=\"origin\" />\n\n        <title>Thank you! - Checkout</title>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 294,
                "end_index": 717,
                "start_line": 6,
                "end_line": 16,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script defer src=\"./thankyoupage_bundle.js?v2\"></script>\n        <script defer src=\"/apps/aftersell_sdk.bundle.min.js?v2\"></script>\n    </head>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241237,
                "end_index": 241381,
                "start_line": 6073,
                "end_line": 6075,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"order-summary__section__content\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323949,
                "end_index": 323994,
                "start_line": 6297,
                "end_line": 6297,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<button\n                class=\"order-summary-toggle order-summary-toggle--show shown-if-js\"\n                data-trekkie-id=\"order_summary_toggle\"\n                aria-expanded=\"false\"\n                aria-controls=\"order-summary\"\n                data-drawer-toggle=\"[data-order-summary]\"\n            >",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241855,
                "end_index": 242157,
                "start_line": 6089,
                "end_line": 6488,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<th class=\"product__description\" scope=\"row\">\n                                                        <span class=\"product__description__name order-summary__emphasis\"\n                                                            >Product Name</span\n                                                        >\n                                                        <span\n                                                            class=\"product__description__variant order-summary__small-text\"\n                                                            >Variant Name</span\n                                                        >\n                                                    </th>\n                                                    <td class=\"product__quantity visually-hidden\">1</td>\n                                                    <td class=\"product__price\">\n                                                        <span class=\"order-summary__emphasis\">$42.99</span>\n                                                    </td>\n                                                </tr>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 331038,
                "end_index": 332129,
                "start_line": 6363,
                "end_line": 6376,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row text-container\">\n                                                <h2 class=\"heading-2 os-step__title\" id=\"main-header\" tabindex=\"-1\">\n                                                    Your order is confirmed\n                                                </h2>\n                                                <p class=\"os-step__description\">\n                                                    You\u2019ll receive an email when your order is ready.\n                                                </p>\n                                            </div>\n                                        </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 317828,
                "end_index": 318454,
                "start_line": 6200,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row content-box__row--no-padding\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248190,
                "end_index": 248249,
                "start_line": 6193,
                "end_line": 6193,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "solution_task": {
            "structured_resp": "Clarify:\nThe task is to update the user experience of the notes widget editing feature in the AfterSell web application. The changes include:\n- Removing the \"Active\" vs \"Inactive\" state of a note.\n- Removing the checkbox beside \"Add a gift message?\" in the edit modal.\n- Adding a title \"Checkbox title\" above the text box in the edit modal.\n- Rewording \"Define text box placeholder\" to \"Text box placeholder\".\n- Changing the default Checkbox title from \"Planning to gift this? Let us know!\" to \"Add a gift message\".\n- Changing the default Text box placeholder from \"Write your note here!\" to \"Write your note here\u2026\".\n\nHypothesize:\n- The \"Active\" vs \"Inactive\" state is likely controlled by a checkbox or toggle switch that needs to be removed from the UI.\n- The checkbox beside \"Add a gift message?\" is probably represented by a Checkbox component that should be removed.\n- The title \"Checkbox title\" needs to be added as a Text or Heading component above the text box.\n- The rewording of \"Define text box placeholder\" to \"Text box placeholder\" suggests a simple text change in the label of a TextField component.\n- The default values for the Checkbox title and Text box placeholder are likely set as initial values or default props in the component state or configuration.\n\nExperiment:\n- Review the provided code snippets to locate the components and text that need to be updated.\n- Identify the parts of the code responsible for rendering the checkbox for the \"Active\" vs \"Inactive\" state and the \"Add a gift message?\" checkbox.\n- Locate the TextField component to add the title and update the placeholder text.\n- Find where the default values for the Checkbox title and Text box placeholder are set.\n\nAnalyze:\n- The relevant code snippets for these changes are likely within the `notes-content-editor.tsx` and `note-settings.tsx` files, as they contain the UI elements and labels mentioned in the issue.\n- The `note.tsx` file contains the Checkbox and TextField components that are likely involved in the \"Show text box when selected\" and \"Define text box placeholder\" UI elements.\n\nResolve:\n- In `notes-content-editor.tsx`:\n  - Remove the Checkbox component that controls the \"Active\" vs \"Inactive\" state.\n  - Update the default values for `textBoxPlaceholder` and `text.text` to the new default strings.\n- In `note-settings.tsx`:\n  - Remove the Checkbox component beside \"Add a gift message?\".\n  - Update the default `textBoxPlaceholder` value in `defaultNoteValues`.\n- In `note.tsx`:\n  - Add a Text or Heading component with the content \"Checkbox title\" above the TextField for the text box.\n  - Change the label of the TextField from \"Define text box placeholder\" to \"Text box placeholder\".\n  - Update the placeholder prop of the TextField to the new default string.",
            "response": "To enhance the user experience of the notes widget editing feature in the AfterSell web application, several updates are required. These updates aim to streamline the editing process by simplifying the interface and making the language more intuitive. The following actions will be taken to implement these changes:\n\n- Locate and remove the component responsible for the \"Active\" vs \"Inactive\" state in the `notes-content-editor.tsx` file.\n- Update the `textBoxPlaceholder` and `text.text` values in `notes-content-editor.tsx` to the new default strings: \"Write your note here\u2026\".\n- In the `note-settings.tsx` file, remove the Checkbox component next to the \"Add a gift message?\" label.\n- Adjust the `textBoxPlaceholder` value in `defaultNoteValues` within `note-settings.tsx` to reflect the new default.\n- Insert a Text or Heading component with the text \"Checkbox title\" above the TextField in the `note.tsx` file.\n- Modify the label associated with the TextField in `note.tsx` from \"Define text box placeholder\" to \"Text box placeholder\".\n- Change the `placeholder` property of the TextField in `note.tsx` to the updated default string."
        },
        "snippet_processor_task": {
            "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/note-settings/note.tsx": [
                {
                    "chunk": {
                        "score": 7,
                        "takeaways": "Component responsible for rendering and managing note settings in the checkout editor. Contains fields for text, checkbox, showTextBox, and textBoxPlaceholder. Changes related to checkbox, text box placeholder, and default values can be implemented here.",
                        "snippet": {
                            "code": "import { Button, Checkbox, Text, TextField, VerticalStack, HorizontalStack } from '@shopify/polaris';\nimport { asChoiceField, FieldDictionary } from '@shopify/react-form';\nimport React, { FC, useEffect } from 'react';\nimport type { NoteType } from './note-settings';\nimport styles from './styles.module.scss';\n\ninterface NoteSettingsProps {\n    fields: FieldDictionary<NoteType>;\n    index: number;\n    removeBadge(index: number): void;\n}\n\nexport const Note: FC<NoteSettingsProps> = ({ fields, removeBadge, index }) => {\n    const { text, checked, showTextBox, textBoxPlaceholder } = fields;\n\n    useEffect(() => {\n        text.runValidation();\n    }, []);\n\n    return (\n        <VerticalStack gap=\"2\">\n            <HorizontalStack blockAlign=\"center\" align=\"space-between\">\n                <Text variant=\"headingXs\" as=\"h3\">{`Note ${index + 1}`}</Text>\n                <Button plain destructive onClick={() => removeBadge(index)}>\n                    Remove note\n                </Button>\n            </HorizontalStack>\n            <HorizontalStack gap=\"1\" blockAlign=\"start\">\n                <Checkbox label=\"\" {...asChoiceField(checked)} />\n                <div className={styles.flexStretch}>\n                    <TextField placeholder=\"Write your note here\" label=\"\" {...text} autoComplete=\"off\" />\n                </div>\n            </HorizontalStack>\n            <VerticalStack gap=\"2\">\n                <Checkbox label=\"Show text box when selected\" {...asChoiceField(showTextBox)} />\n                {!!showTextBox.value && (\n                    <TextField label=\"Define text box placeholder\" {...textBoxPlaceholder} autoComplete=\"off\" />\n                )}\n            </VerticalStack>\n        </VerticalStack>\n    );\n};",
                            "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/note-settings/note.tsx",
                            "start_index": 0,
                            "end_index": 1728,
                            "start_line": 1,
                            "end_line": 42,
                            "max_line": 42,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet contains fields for text, checkbox, showTextBox, and textBoxPlaceholder, which are directly related to the changes requested such as removing the checkbox, adding a title, and rewording the placeholder."
                }
            ],
            "web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The snippet contains code related to editing notes in a modal, including text box placeholders and checkboxes. It provides a starting point for understanding the current implementation of the notes widget editing feature.",
                        "snippet": {
                            "code": "\"Write your note here\"\n                                        label=\"\"\n                                        value={text.value.text}\n                                        onChange={(val) => text.onChange({ ...text.value, text: val })}\n                                        autoComplete=\"off\"\n                                    />\n                                </div>\n                            </HorizontalStack>\n                            <VerticalStack gap=\"2\">\n                                <Checkbox label=\"Show text box when selected\" {...asChoiceField(showTextBox)} />\n                                {!!showTextBox.value && (\n                                    <TextField\n                                        label=\"Define text box placeholder\"\n                                        {...textBoxPlaceholder}\n                                        autoComplete=\"off\"\n                                    />\n                                )}\n                            </VerticalStack>\n                        </VerticalStack>\n                    );\n                })()}\n            </Modal>\n            <PriorityModal\n                open={priorityModal}\n                onClose={() => {\n                    list.reset();\n                    setPriorityModal(false);\n                }}\n                dynamicList={list}\n                onSave={() => {\n                    onSave();\n                    setPriorityModal(false);\n                }}\n                Item={({ item, index, ...props }: LineItemWrapperProps & { item: NoteType; index: number }) => {\n                    return (\n                        <LineItemWrapper {...props}>\n                            <HorizontalStack wrap={false} gap=\"2\" blockAlign={'center'}>\n                                <Text as=\"span\">{item.text.text}</Text>\n                                <Text as=\"span\" fontWeight=\"bold\">\n                                    {index}\n                                </Text>\n                            </HorizontalStack>\n                        </LineItemWrapper>\n                    );\n                }}\n            />\n        </>\n    );\n};",
                            "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx",
                            "start_index": 8117,
                            "end_index": 10267,
                            "start_line": 171,
                            "end_line": 219,
                            "max_line": 219,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "It includes code related to editing notes in a modal, which is where the checkbox is to be removed, the title added, and the placeholder reworded."
                },
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet showing the structure of the 'Edit Note' modal in the notes-content-editor.tsx file, relevant for understanding the existing UI elements and potential areas for modification.",
                        "snippet": {
                            "code": "\"Delete note\">\n                                                    <div onClick={(e) => e.stopPropagation()}>\n                                                        <Button\n                                                            icon={DeleteMajor as IconSource}\n                                                            destructive\n                                                            outline\n                                                            onClick={() => list.removeItem(index)}\n                                                        />\n                                                    </div>\n                                                </Tooltip>\n                                            </HorizontalStack>\n                                        </HorizontalStack>\n                                    </ResourceItem>\n                                );\n                            }}\n                        />\n                    </Card>\n                )}\n            </VerticalStack>\n\n            <Modal\n                title=\"Edit Note\"\n                open={editingItem !== null}\n                onClose={() => setEditingItem(null)}\n                primaryAction={{\n                    content: 'Confirm',\n                    onAction: () => {\n                        onSave();\n                        setEditingItem(null);\n                    },\n                }}\n                secondaryActions={[\n                    {\n                        content: 'Cancel',\n                        onAction: () => {\n                            list.reset();\n                            setEditingItem(null);\n                        },\n                    },\n                ]}\n                sectioned\n            >\n                {(() => {\n                    if (editingItem === null || !list.fields[editingItem]) return null;\n\n                    const { text, checked, showTextBox, textBoxPlaceholder } = list.fields[editingItem];\n\n                    return (\n                        <VerticalStack gap=\"2\">\n                            <HorizontalStack gap=\"1\" blockAlign=\"start\">\n                                <Checkbox label=\"\" {...asChoiceField(checked)} />\n                                <div className={styles.flexStretch}>\n                                    <TextField\n                                        placeholder=",
                            "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx",
                            "start_index": 5742,
                            "end_index": 8117,
                            "start_line": 118,
                            "end_line": 171,
                            "max_line": 219,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Shows the structure of the 'Edit Note' modal, which is relevant for understanding the existing UI elements and making the necessary modifications."
                }
            ],
            "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The provided code snippet showcases the implementation of Checkbox and TextField components in a modal. It can serve as a reference for updating UI elements in the note editing modal, such as removing checkboxes, adding titles, rewording placeholders, and updating default values.",
                        "snippet": {
                            "code": "<Checkbox label=\"Show quantity selector\" {...asChoiceField(showQuantity)} />\n                            <TextField\n                                autoComplete={'off'}\n                                label={'Custom product title'}\n                                placeholder={'Default product title'}\n                                value={customTitle.value.text || `${fullProduct.cuwp_product_title}`}\n                                onChange={(val) =>\n                                    customTitle.onChange({\n                                        ...customTitle.value,\n                                        text: val,\n                                    })\n                                }\n                            />\n                            <TextField\n                                autoComplete={'off'}\n                                label={'Product description'}\n                                placeholder={'Add a description for your upsell'}\n                                value={customDescription.value.text}\n                                onChange={(val) =>\n                                    customDescription.onChange({\n                                        ...customDescription.value,\n                                        text: val,\n                                    })\n                                }\n                            />\n                        </VerticalStack>\n                    );\n                })()}\n            </Modal>\n\n            <PriorityModal\n                open={priorityModal}\n                onClose={() => {\n                    list.reset();\n                    setPriorityModal(false);\n                }}\n                dynamicList={list}\n                onSave={() => {\n                    onSave();\n                    setPriorityModal(false);\n                }}\n                Item={({ it",
                            "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                            "start_index": 28117,
                            "end_index": 29983,
                            "start_line": 636,
                            "end_line": 677,
                            "max_line": 742,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Provides an implementation reference for Checkbox and TextField components in a modal, which will be useful for updating UI elements as per the requested changes."
                }
            ]
        },
        "bouncer_response": {
            "score": 4,
            "criteria": "The RESPONSE must provide actionable, relevant guidance to more parts of the PROMPT's described issue to score higher. RESPONSES that offer some actionable advice but are incomplete or partially relevant should score between 4 and 6.",
            "supporting_evidence": "The RESPONSE provides a series of steps that are relevant to the changes requested in the PROMPT, such as removing the 'Active' vs 'Inactive' state, updating default strings, and modifying UI elements. However, the RESPONSE includes a significant amount of information that is not directly actionable or relevant, such as the detailed paths to the code snippets, which are not part of the PROMPT and seem to be based on assumptions about the codebase structure. Additionally, the RESPONSE does not address the addition of a title above the text box in the edit modal with the specific text 'Checkbox title' as requested in the PROMPT. The RESPONSE also fails to provide specific guidance on how to reword the 'Define text box placeholder' to 'Text box placeholder' and does not mention the need to update the GitHub pull request with these changes. Therefore, while the RESPONSE is on the right track, it is incomplete and partially relevant, warranting a score within the 4 to 6 range.",
            "clarification_questions": "NONE"
        },
        "end_time": 1714389844.3292642,
        "result": "Doesn't seem like we have fully grasped all the specifics of this ticket \ud83d\ude10.                   But we've outlined some ideas that might help you get started:\n\nTo enhance the user experience of the notes widget editing feature in the AfterSell web application, several updates are required. These updates aim to streamline the editing process by simplifying the interface and making the language more intuitive. The following actions will be taken to implement these changes:\n\n- Locate and remove the component responsible for the \"Active\" vs \"Inactive\" state in the `notes-content-editor.tsx` file.\n- Update the `textBoxPlaceholder` and `text.text` values in `notes-content-editor.tsx` to the new default strings: \"Write your note here\u2026\".\n- In the `note-settings.tsx` file, remove the Checkbox component next to the \"Add a gift message?\" label.\n- Adjust the `textBoxPlaceholder` value in `defaultNoteValues` within `note-settings.tsx` to reflect the new default.\n- Insert a Text or Heading component with the text \"Checkbox title\" above the TextField in the `note.tsx` file.\n- Modify the label associated with the TextField in `note.tsx` from \"Define text box placeholder\" to \"Text box placeholder\".\n- Change the `placeholder` property of the TextField in `note.tsx` to the updated default string.\n\n### Code snippets to check\n\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-editor](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components) \u2192 [widget-list](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list/components) \u2192 [note-settings](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list/components/note-settings)- [Lines 1 - 42](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list/components/note-settings/note.tsx#L1-L42)\n\n This snippet contains fields for text, checkbox, showTextBox, and textBoxPlaceholder, which are directly related to the changes requested such as removing the checkbox, adding a title, and rewording the placeholder.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-editor-v2](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components)- [Lines 171 - 219](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx#L171-L219)\n\n It includes code related to editing notes in a modal, which is where the checkbox is to be removed, the title added, and the placeholder reworded. \n\n\n   - [Lines 118 - 171](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components/notes-content-editor.tsx#L118-L171)\n\n Shows the structure of the 'Edit Note' modal, which is relevant for understanding the existing UI elements and making the necessary modifications.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-editor-v2](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components)- [Lines 636 - 677](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx#L636-L677)\n\n Provides an implementation reference for Checkbox and TextField components in a modal, which will be useful for updating UI elements as per the requested changes."
    }
}