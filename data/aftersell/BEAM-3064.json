{
    "id": "BEAM-3064",
    "repo_name": "testbed/aftersell",
    "title": "Make selected configuration darker",
    "body": "\n[IMG_1]\n---\nGlossary:\ngithub_pr_1: The image attached to the ticket is a screenshot of a GitHub pull request. The pull request shows a diff of changes made to a CSS file. The changes include modifications to a CSS class responsible for the background color of a configuration selection element. The original color code has been replaced with a new one. The old color code was a lighter shade, while the new color code is a significantly darker shade. The intention behind the change seems to be to make the selected configuration stand out more to the user. There are comments on the pull request from other team members indicating approval of the change, suggesting that the darker color improves visibility and user experience. There are no merge conflicts indicated, and the pull request appears to be ready for a final review before merging.\nimage_2: The image displays a user interface section with a list of configurations under the heading \"Testimonials\". There are three configurations listed vertically: \"Configuration 1\", \"Configuration 2\", and \"Configuration 3\". Each configuration has an associated icon to the left and right. The left icons for Configuration 1 and Configuration 2 are green circles with a white checkmark, while Configuration 3 has a grey circle with an \"i\" in the center. The right icons for Configuration 2 and Configuration 3 are red squares with a white trash can symbol, indicating a delete function. Configuration 1 has no such icon on the right.\n\nConfiguration 1 is highlighted with a very light background, which is barely distinguishable from the white background of the rest of the UI. The text for Configuration 1 is also bold, suggesting it is the currently selected configuration. The \"+ Add new configuration\" option is at the bottom of the list, styled as a hyperlink.\n\nThe task is to make the background of the currently selected configuration, which is Configuration 1, darker to enhance its visibility as the active selection.\n\n",
    "classification": "bug",
    "state": "closed",
    "repo_link": "https://github.com/testbed/aftersell.git",
    "requested_commit": null,
    "issue_tracker_identifier": "",
    "ai_cost": {
        "issue_classifier": 0.0003515,
        "issue_summarizer": 0.011210000000000001,
        "search_embedding": 5.148e-05,
        "documentation_agent": 0.0054800000000000005,
        "repo_summary": 0.095815,
        "issue_star_solver": 0.082416,
        "snippet_processor": 0.02833,
        "bouncer": 0.04617
    },
    "attachments": [
        {
            "title": " BEAM-3064-make-selected-configuration-darker",
            "url": "https://github.com/beam-commerce/aftersell/pull/1122",
            "content": "",
            "placeholder_tag": "github_pr_1",
            "content_type": "ExternalAssetsType.GITHUB_PR"
        }
    ],
    "inline_assets": [
        {
            "title": "",
            "url": "https://uploads.linear.app/a4f50fbf-738c-4ae7-b7ca-dc198278934f/0381fcd0-fc56-4b8c-a978-643901f72a88/0c251daf-6311-4510-9b2e-9bcfb7aa4d1d",
            "content": "",
            "placeholder_tag": "image_2",
            "content_type": "ExternalAssetsType.IMAGE"
        }
    ],
    "linked_issue_ids": [],
    "comments": [],
    "issue_summary": "- CSS class responsible for background color of configuration selection element modified\n- Original color code replaced with new, darker color code\n- Comments indicate approval of the darker color for improved visibility and user experience\n- No merge conflicts in the pull request\n- Pull request ready for final review before merging\n- User interface section with configurations under \"Testimonials\"\n- Configurations: \"Configuration 1\", \"Configuration 2\", \"Configuration 3\"\n- Icons: Green circles with checkmark for Configuration 1 and 2, grey circle with \"i\" for Configuration 3\n- Delete function: Red squares with trash can symbol for Configuration 2 and 3\n- Configuration 1 highlighted with very light background, text bolded, indicating current selection\n- Task: Enhance visibility of the active selection by making the background darker",
    "repo_summary": "The software project is a complex web application divided into different modules such as `web`, `extensions`, `theme-app-extension-src`, and `widgets`. It utilizes TypeScript, React, and Shopify libraries for frontend development and Node.js for backend services. The project follows a modular structure with separate package.json files for each module, managing dependencies and scripts specific to their functionalities.\n\nThe issue at hand involves enhancing the visibility of the currently selected configuration in the checkout editor. This requires adjusting the background color of the selected configuration element to make it stand out more. The relevant code for this task can be found in files related to the checkout editor components, such as `web/client/src/pages/checkout/checkout-editor/components/widget-list/components/selection-icon-color.tsx` and `web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx`. Additionally, CSS styles in files like `web/client/src/libs/checkout-ui/utilities/legacy/styles.css` may need to be modified to achieve the desired visual effect.",
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1714259352.822352,
        "classification": "bug",
        "initial_code_snippets": [
            {
                "code": "<div className=\"TextConfigurator__color-buttons-menu\">\n                                <Button\n                                    onClick={() => {\n                                        showColorSelector();\n                                        handleChange('appearance', 'success');\n                                    }}\n                                    // className=\"TextConfigurator__button-container\"\n                                    icon={\n                                        <img src={greenEllipse} alt=\"Green\" className=\"TextConfigurator__img-button\" />\n                                    }\n                                />\n\n                                <Button\n                                    onClick={() => {\n                                        showColorSelector();\n                                        handleChange('appearance', 'warning');\n                                    }",
                "filename": "web/client/src/shared-components/rich-text-editor/text-configurator.tsx",
                "start_index": 4542,
                "end_index": 5462,
                "start_line": 141,
                "end_line": 170,
                "max_line": 211,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "newTheme.customProperties.colorSurfaceSecondary = themeSettings.checkout_sidebar_background_color;\n        newTheme.customProperties.colorSurfaceSecondaryText = hslToHex(colorText({ background: sidebarHslColor })!);\n        newTheme.customProperties.colorSurfaceSecondaryTextEmphasized = hslToHex(\n            colorTextEmphasized({ background: sidebarHslColor })!\n        );\n        newTheme.customProperties.colorSurfaceSecondaryTextSubdued = hslToHex(\n            colorTextSubdued({ background: sidebarHslColor })!\n        );\n\n        const bodyHslColor = hexToHSL(themeSettings.checkout_body_background_color);\n        newTheme.customProperties.colorCanvas = themeSettings.checkout_body_background_color;\n        newTheme.customProperties.colorCanvasText = hslToHex(colorText({ background: bodyHslColor })!);\n        newTheme.customProperties.colorCanvasTextEmphasized = hslToHex(\n            colorTextEmphasized({ background: bodyHslColor })!\n        );\n        newTheme.customProperties.colorCanvasTextSubdued = hslToHex(colorTextSubdued({ background: bodyHslColor })!);\n\n        // Inputs (text, select, radio, checkbox)",
                "filename": "web/client/src/libs/shared/useCustomTheme.ts",
                "start_index": 7627,
                "end_index": 8753,
                "start_line": 199,
                "end_line": 216,
                "max_line": 274,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "if (themeSettings.checkout_input_background_color_mode === 'transparent') {\n            // Input\n            newTheme.configuration.radio.background = 'transparent';\n            newTheme.configuration.checkbox.background = 'transparent';\n            newTheme.configuration.select.background = 'transparent';\n            newTheme.configuration.textFields.background = 'transparent';\n            // newTheme.customProperties.colorSurfaceTertiaryText = hslToHex(colorText({ background: bodyHslColor })!);\n            // newTheme.customProperties.colorSurfaceTertiaryTextEmphasized = hslToHex(\n            //     colorTextEmphasized({ background: bodyHslColor })!\n            // );\n            // newTheme.customProperties.colorSurfaceTertiaryTextSubdued = hslToHex(\n            //     colorTextSubdued({ background: bodyHslColor })!\n            // );\n\n            const borderLighten = 'rgba(255, 255, 255, 0.15)';\n            const borderEmphasizedLighten = 'rgba(255, 255, 255, 0.2)';\n\n            const borderDarken = 'rgba(0, 0, 0, 0.15)';\n            const borderEmphasizedDarken = 'rgba(0, 0, 0, 0.2)';\n\n            // Border on main background\n            newTheme.customProperties.colorCanvasBorder = isLight(bodyHslColor) ? borderDarken : borderLighten;\n            newTheme.customProperties.colorCanvasBorderEmphasized = isLight(bodyHslColor)\n                ? borderEmphasizedDarken\n                : borderEmphasizedLighten;\n\n            // Border on sidebar background\n            newTheme.customProperties.colorSurfaceSecondaryBorder = isLight(sidebarHslColor)\n                ? borderDarken\n                : borderLighten;\n            newTheme.customProperties.colorSurfaceSecondaryBorderEmphasized = isLight(sidebarHslColor)\n                ? borderEmphasizedDarken\n                : borderEmphasizedLighten;\n        } else {\n            // Border on main background\n            newTheme.customProperties.colorCanvasBorder = hslToHex(colorBorder({ background: bodyHslColor })!);\n            newTheme.customProperties.colorCanvasBorderEmphasized = hslToHex(\n                colorBorderEmphasized({ background: bodyHslColor })!\n            );\n\n            // Border on sidebar background\n            newTheme.customProperties.colorSurfaceSecondaryBorder = hslToHex(\n                colorBorder({ background: sidebarHslColor })!\n            );\n            newTheme.customProperties.colorSurfaceSecondaryBorderEmphasized = hslToHex(\n                colorBorderEmphasized({ background: sidebarHslColor })!\n            );\n        }\n\n        // The font families will be loaded from the root css file so we don't need fallback fonts\n        newTheme.customProperties.typographyPrimaryFonts = `\"${themeSettings.checkout_body_font}\", sans-serif`;\n        newTheme.customProperties.typographySecondaryFonts = `\"${themeSettings.checkout_heading_font}\", sans-serif`;\n\n        return newTheme;\n    }",
                "filename": "web/client/src/libs/shared/useCustomTheme.ts",
                "start_index": 8762,
                "end_index": 11662,
                "start_line": 217,
                "end_line": 271,
                "max_line": 274,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\"Primary buttons\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.primary.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.primary.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.primary.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Interactive\" subtitle=\"Includes links and focused inputs\">",
                "filename": "web/client/src/pages/checkout/checkout-branding/branding-color-palette.tsx",
                "start_index": 309,
                "end_index": 890,
                "start_line": 8,
                "end_line": 16,
                "max_line": 63,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<BrandingRow>\n                    <BrandingColorInputField\n                        label=\"Background\"\n                        field=\"designSystem.colorPalette.interactive.background\"\n                    />\n                    <BrandingColorInputField\n                        label=\"Foreground\"\n                        field=\"designSystem.colorPalette.interactive.foreground\"\n                    />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.interactive.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Main body\" subtitle=\"Left area on desktop\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.color1.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.color1.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.color1.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Secondary body\" subtitle=\"Right area on desktop (order summary)\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.color2.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.color2.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.color2.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Loading screens\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.canvas.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.canvas.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.canvas.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Critical\" subtitle=\"Includes errors\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.critical.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.critical.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.critical.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n        </BrandingTab>",
                "filename": "web/client/src/pages/checkout/checkout-branding/branding-color-palette.tsx",
                "start_index": 907,
                "end_index": 3681,
                "start_line": 9,
                "end_line": 61,
                "max_line": 63,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "if (nConfigs === 0) {\n        return (\n            <Tooltip content=\"Widget is not set up\">\n                <Icon source={InfoMinor as IconSource} />\n            </Tooltip>\n        );\n    }\n    if (nActiveConfigs === 0) {\n        return (\n            <Tooltip\n                content={nConfigs === 1 ? 'Configuration is inactive' : `All ${nConfigs} configurations are inactive`}\n            >\n                <Badge status=\"attention\" progress=\"partiallyComplete\">\n                    {nConfigs.toString()}\n                </Badge>\n            </Tooltip>\n        );\n    }\n    return (\n        <Tooltip content={`${nActiveConfigs} of ${nConfigs} configurations are active`}>\n            <Badge status=\"success\" progress=\"complete\">\n                {nActiveConfigs.toString()}\n            </Badge>\n        </Tooltip>\n    );\n};\n\nfunction getSplitTestVersionFromConfiguration(configuration?: FullConfigurationType) {\n    return configuration?.splitTestEnabled ? 'A' : null;\n}",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx",
                "start_index": 8261,
                "end_index": 9232,
                "start_line": 193,
                "end_line": 222,
                "max_line": 222,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "colorInteractiveTextHovered: ({ interactive }) =>\n        interactive?.foreground?.adjust({\n            l: (l) => l + 10,\n        }),\n    colorInteractiveTextPressed: ({ interactive }) =>\n        interactive?.foreground?.adjust({\n            l: (l) => l + 10,\n        }),\n\n    /* COLOR INFO */\n    colorInfo: ({ info }) => info?.background,\n    colorInfoDisabled: ({ info }) => colorDisabled(info),\n    colorInfoSubdued: ({ info }) => colorSubdued(info),\n    colorInfoText: ({ info }, legacy) => colorText(info, legacy),\n    colorInfoTextSubdued: ({ info }, legacy) => colorTextSubdued(info, legacy),\n    colorInfoTextEmphasized: ({ info }, legacy) => colorTextEmphasized(info, legacy),\n    colorInfoBorder: ({ info }, legacy) => colorBorder(info, legacy),\n    colorInfoBorderEmphasized: ({ info }, legacy) => colorBorderEmphasized(info, legacy),\n    colorInfoAccent: ({ info }) => info?.accent,\n\n    /* COLOR SUCCESS */\n    colorSuccess: ({ success }) => success?.background,\n    colorSuccessDisabled: ({ success }) => colorDisabled(success),\n    colorSuccessSubdued: ({ success }) => colorSubdued(success),\n    colorSuccessText: ({ success }, legacy) => colorText(success, legacy),\n    colorSuccessTextSubdued: ({ success }, legacy) => colorTextSubdued(success, legacy),\n    colorSuccessTextEmphasized: ({ success }, legacy) => colorTextEmphasized(success, legacy),\n    colorSuccessBorder: ({ success }, legacy) => colorBorder(success, legacy),\n    colorSuccessBorderEmphasized: ({ success }, legacy) => colorBorderEmphasized(success, legacy),\n    colorSuccessAccent: ({ success }) => success?.accent,\n\n    /* COLOR WARNING */\n    colorWarning: ({ warning }) => warning?.background,\n    colorWarningDisabled: ({ warning }) => colorDisabled(warning),\n    colorWarningSubdued: ({ warning }) => colorSubdued(warning),\n    colorWarningText: ({ warning }, legacy) => colorText(warning, legacy),\n    colorWarningTextSubdued: ({ warning }, legacy) => colorTextSubdued(warning, legacy),\n    colorWarningTextEmphasized: ({ warning }, legacy) => colorTextEmphasized(warning, legacy),\n    colorWarningBorder: ({ warning }, legacy) => colorBorder(warning, legacy),\n    colorWarningBorderEmphasized: ({ warning }, legacy) => colorBorderEmphasized(warning, legacy),\n    colorWarningAccent: ({ warning }) => warning?.accent,\n\n    /* COLOR CRITICAL */\n    colorCritical: ({ critical }) => critical?.background,\n    colorCriticalDisabled: ({ critical }) => colorDisabled(critical),\n    colorCriticalSubdued: ({ critical }) => colorSubdued(critical),\n    colorCriticalText: ({ critical }, legacy) => colorText(critical, legacy),\n    colorCriticalTextSubdued: ({ critical }, legacy) => colorTextSubdued(critical, legacy),\n    colorCriticalTextEmphasized: ({ critical }, legacy) => colorTextEmphasized(critical, legacy),\n    colorCriticalBorder: ({ critical }, legacy) => colorBorder(critical, legacy),\n    colorCriticalBorderEmphasized: ({ critical }, legacy) => colorBorderEmphasized(critical, legacy),",
                "filename": "web/client/src/libs/checkout-ui/components/Theme/context.ts",
                "start_index": 16749,
                "end_index": 19735,
                "start_line": 473,
                "end_line": 523,
                "max_line": 1029,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "colorInteractiveTextHovered: ({ interactive }) =>\n        interactive?.foreground?.adjust({\n            l: (l) => l + 10,\n        }),\n    colorInteractiveTextPressed: ({ interactive }) =>\n        interactive?.foreground?.adjust({\n            l: (l) => l + 10,\n        }),\n\n    /* COLOR INFO */\n    colorInfo: ({ info }) => info?.background,\n    colorInfoDisabled: ({ info }) => colorDisabled(info),\n    colorInfoSubdued: ({ info }) => colorSubdued(info),\n    colorInfoText: ({ info }, legacy) => colorText(info, legacy),\n    colorInfoTextSubdued: ({ info }, legacy) => colorTextSubdued(info, legacy),\n    colorInfoTextEmphasized: ({ info }, legacy) => colorTextEmphasized(info, legacy),\n    colorInfoBorder: ({ info }, legacy) => colorBorder(info, legacy),\n    colorInfoBorderEmphasized: ({ info }, legacy) => colorBorderEmphasized(info, legacy),\n    colorInfoAccent: ({ info }) => info?.accent,\n\n    /* COLOR SUCCESS */\n    colorSuccess: ({ success }) => success?.background,\n    colorSuccessDisabled: ({ success }) => colorDisabled(success),\n    colorSuccessSubdued: ({ success }) => colorSubdued(success),\n    colorSuccessText: ({ success }, legacy) => colorText(success, legacy),\n    colorSuccessTextSubdued: ({ success }, legacy) => colorTextSubdued(success, legacy),\n    colorSuccessTextEmphasized: ({ success }, legacy) => colorTextEmphasized(success, legacy),\n    colorSuccessBorder: ({ success }, legacy) => colorBorder(success, legacy),\n    colorSuccessBorderEmphasized: ({ success }, legacy) => colorBorderEmphasized(success, legacy),\n    colorSuccessAccent: ({ success }) => success?.accent,\n\n    /* COLOR WARNING */\n    colorWarning: ({ warning }) => warning?.background,\n    colorWarningDisabled: ({ warning }) => colorDisabled(warning),\n    colorWarningSubdued: ({ warning }) => colorSubdued(warning),\n    colorWarningText: ({ warning }, legacy) => colorText(warning, legacy),\n    colorWarningTextSubdued: ({ warning }, legacy) => colorTextSubdued(warning, legacy),\n    colorWarningTextEmphasized: ({ warning }, legacy) => colorTextEmphasized(warning, legacy),\n    colorWarningBorder: ({ warning }, legacy) => colorBorder(warning, legacy),\n    colorWarningBorderEmphasized: ({ warning }, legacy) => colorBorderEmphasized(warning, legacy),\n    colorWarningAccent: ({ warning }) => warning?.accent,\n\n    /* COLOR CRITICAL */\n    colorCritical: ({ critical }) => critical?.background,\n    colorCriticalDisabled: ({ critical }) => colorDisabled(critical),\n    colorCriticalSubdued: ({ critical }) => colorSubdued(critical),\n    colorCriticalText: ({ critical }, legacy) => colorText(critical, legacy),\n    colorCriticalTextSubdued: ({ critical }, legacy) => colorTextSubdued(critical, legacy),\n    colorCriticalTextEmphasized: ({ critical }, legacy) => colorTextEmphasized(critical, legacy),\n    colorCriticalBorder: ({ critical }, legacy) => colorBorder(critical, legacy),\n    colorCriticalBorderEmphasized: ({ critical }, legacy) => colorBorderEmphasized(critical, legacy),",
                "filename": "web/client/src/libs/post-purchase-ui/components/Theme/context.ts",
                "start_index": 15515,
                "end_index": 18501,
                "start_line": 435,
                "end_line": 485,
                "max_line": 984,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{...multiField({\n                                                main: activeForm.fields.primaryButtonFontColor,\n                                                secondary: [\n                                                    activeForm.fields.primaryButtonHoverFontColor,\n                                                    activeForm.fields.primaryButtonActiveFontColor,\n                                                    activeForm.fields.progressBarVisitedFontColor,\n                                                ],\n                                            })}\n                                        />\n                                        <ColorInput\n                                            label='\"Yes\" border color'\n                                            disabled={activeForm.fields.buttonBorderWidth.value === '0px'}\n                                            {...multiField({\n                                                main: activeForm.fields.primaryButtonBorderColor,\n                                                secondary: [\n                                                    activeForm.fields.primaryButtonHoverBorderColor,\n                                                    activeForm.fields.primaryButtonActiveBorderColor,\n                                                ],\n                                            })}\n                                        />\n                                        <ColorInput\n                                            label='\"No\" background color'\n                                            {...multiField({\n                                                main: activeForm.fields.secondaryButtonBackgroundColor,\n                                                secondary: [\n                                                    activeForm.fields.secondaryButtonHoverBackgroundColor,\n                                                    activeForm.fields.secondaryButtonActiveBackgroundColor,\n                                                ],\n                                            })}\n                                        />\n                                        <ColorInput\n                                            label='\"No\" font color'\n                                            {...multiField({\n                                                main: activeForm.fields.secondaryButtonFontColor,\n                                                secondary: [\n                                                    activeForm.fields.secondaryButtonHoverFontColor,\n                                                    activeForm.fields.secondaryButtonActiveFontColor,\n                                                ],\n                                            })}\n                                        />\n                                        <ColorInput\n                                            label='\"No\" border color'\n                                            disabled",
                "filename": "web/client/src/pages/rokt/rokt.page.tsx",
                "start_index": 22481,
                "end_index": 25458,
                "start_line": 263,
                "end_line": 434,
                "max_line": 1493,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Navigation.Item\n                                  key={value.configurations?.[0]?.id}\n                                  selected={focusedWidget.configuration === configurationIndex}\n                                  //@ts-ignore\n                                  label={\n                                      <HorizontalStack align={'space-between'} gap=\"2\">\n                                          <Text as={'p'} variant={'bodyMd'}>{`Configuration ${\n                                              configurationIndex + 1\n                                          }`}</Text>\n                                          <SidebarTag configurations={value.configurations} />\n                                          <Button\n                                              plain\n                                              destructive\n                                              icon={<Icon source={DeleteMajor as IconSource} />}\n                                              disabled={activeWidgetDynamicList.value.length === 1}\n                                              //@ts-ignore\n                                              onClick={(e) => {\n                                                  e.stopPropagation();\n                                                  setFocusedWidget((prev) => ({\n                                                      ...prev,\n                                                      index: 0,\n                                                      configuration: 0,\n                                                      step: 'list',\n                                                      splitTestVersion: getSplitTestVersionFromConfiguration(\n                                                          activeWidgetDynamicList.value?.[0]?.configurations?.[0]\n                                                      ),\n                                                  }));\n                                                  activeWidgetDynamicList.removeItem(configurationIndex);\n                                              }}\n                                          />\n                                      </HorizontalStack>\n                                  }\n                                  onClick={",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx",
                "start_index": 3014,
                "end_index": 5256,
                "start_line": 97,
                "end_line": 170,
                "max_line": 222,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<>\n                                <Checkbox\n                                    label=\"Show all images\"\n                                    checked={config.switcher?.showAll}\n                                    onChange={(val) =>\n                                        onChangeConfig({\n                                            switcher: {\n                                                ...config.switcher,\n                                                showAll: val,\n                                            },\n                                        })\n                                    }\n                                />\n                                <Checkbox\n                                    label=\"Show carousel images as perfect squares\"\n                                    checked={!config.switcher?.imageFitContain}\n                                    onChange={(val) =>\n                                        onChangeConfig({\n                                            switcher: {\n                                                ...config.switcher,\n                                                imageFitContain: !val,\n                                            },\n                                        })\n                                    }\n                                />\n                            </>\n                        )}\n\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"bodyMd\" as=\"p\">\n                                Custom product image\n                            </Text>\n                            <ImageUploader\n                                onUpload={(result: { file: string }) => {\n                                    onChangeConfig({\n                                        customFirstImageUrl: result.file,\n                                    });\n                                }}\n                                onDelete={() => {\n                                    onChangeConfig({\n                                        customFirstImageUrl: undefined,\n                                    });\n                                }}\n                                file={\n                                    offerVersion === 'v2' && config.customFirstImageUrl\n                                        ? { file: config.customFirstImageUrl }\n                                        : null\n                                }\n                            />\n                        </VerticalStack>\n                    </ShowAdvanced>\n                </VerticalStack>\n            </SectionSettings>\n            <SectionSettings\n                name=\"Button settings\"\n                icon={ButtonMinor as IconSource}\n                show={isSingleConfigV2(config, offerVersion)}\n                defaultOpen={preselectedSubsection === PreselectedSubsection.BUTTON}\n            >\n                <VerticalStack gap=\"3\">\n                    {isSingleConfigV2",
                "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                "start_index": 38774,
                "end_index": 41726,
                "start_line": 447,
                "end_line": 1191,
                "max_line": 1401,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<BrandingRow>\n                        <BrandingSelectField\n                            label=\"Background\"\n                            field=\"customizations.primaryButton.background\"\n                            options={BRANDING_OPTIONS_BACKGROUND}\n                        />\n                        <BrandingSelectField\n                            label=\"Border\"\n                            field=\"customizations.primaryButton.border\"\n                            options={BRANDING_OPTIONS_SIMPLE_BORDER}\n                        />\n                    </BrandingRow>\n                    <BrandingRow>\n                        <BrandingSelectField\n                            label=\"Vertical padding\"\n                            field=\"customizations.primaryButton.blockPadding\"\n                            options={BRANDING_OPTIONS_PADDING}\n                        />\n                        <BrandingSelectField\n                            label=\"Horizontal padding\"\n                            field=\"customizations.primaryButton.inlinePadding\"\n                            options={BRANDING_OPTIONS_PADDING}\n                        />\n                    </BrandingRow>\n                </BrandingColumn>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Secondary buttons\" subtitle=\"Button colors are customized via the Color palette\">\n                <BrandingColumn>\n                    <BrandingRow>\n                        <BrandingSelectField\n                            label=\"Corder radius\"\n                            field=\"customizations.secondaryButton.cornerRadius\"\n                            options={BRANDING_OPTIONS_CORNER_RADIUS}\n                        />\n                    </BrandingRow>\n                    <BrandingRow>\n                        <BrandingSelectField\n                            label=\"Background\"\n                            field=\"customizations.secondaryButton.background\"\n                            options={BRANDING_OPTIONS_BACKGROUND}\n                        />\n                        <BrandingSelectField\n                            label=\"Border\"\n                            field=\"customizations.secondaryButton.border\"\n                            options={BRANDING_OPTIONS_SIMPLE_BORDER}\n                        />\n                    </BrandingRow>\n                    <BrandingRow>\n                        <BrandingSelectField\n                            label=\"Vertical padding\"\n                            field=\"customizations.secondaryButton.blockPadding\"\n                            options={BRANDING_OPTIONS_PADDING}\n                        />\n                        <BrandingSelectField\n                            label=\"Horizontal padding\"\n                            field=\"customizations.secondaryButton.inlinePadding\"\n                            options={BRANDING_OPTIONS_PADDING}",
                "filename": "web/client/src/pages/checkout/checkout-branding/branding-buttons.tsx",
                "start_index": 963,
                "end_index": 3848,
                "start_line": 16,
                "end_line": 80,
                "max_line": 87,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "/* stylelint-disable block-no-empty */\n\n.Button {\n}\n\n.ButtonPrimary {\n}\n\n.ButtonSecondary {\n}\n\n.ButtonPrimary.ButtonCritical {\n}\n\n.ButtonSecondary.ButtonCritical {\n}\n\n.Surface-colorCanvas {\n}\n\n.Surface-colorSurfacePrimary {\n}\n\n.Surface-colorSurfaceSecondary {\n}\n\n.Surface-colorSurfaceTertiary {\n}\n\n.ColorCriticalAccent {\n}\n\n.Utility-defaultBorderColor {\n}\n\n.Utility-defaultTextSubduedColor {\n}\n\n.Utility-defaultTextEmphasizedColor {\n}\n\n.Utility-defaultAccentColor {\n}\n\n/* stylelint-enable block-no-empty */",
                "filename": "web/client/src/libs/checkout-ui/utilities/legacy/styles.css",
                "start_index": 0,
                "end_index": 506,
                "start_line": 1,
                "end_line": 45,
                "max_line": 45,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "export function colorTextEmphasized(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.foreground\n        ? colorGroup?.foreground?.adjust({\n              l: (l) => (isLight(colorGroup?.foreground, legacy) ? Math.min(l + 15, 100) : l - 10),\n          })\n        : colorGroup?.background?.adjust({\n              s: (s) => (s > 50 ? s : Math.min(s + 15, 100)),\n              l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 77.5, 0) : 98.3),\n          });\n}\n\nexport function colorTextSubdued(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.foreground\n        ? colorGroup?.foreground?.adjust({\n              l: (l) => (isLight(colorGroup?.foreground, legacy) ? Math.max(l - 35, 0) : l + 43.2),\n          })\n        : colorGroup?.background?.adjust({\n              s: (s) => (s > 50 ? Math.max(s - 55, 0) : s),\n              l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 49.9, 10) : Math.min(l + 63.2, 90)),\n          });\n}\n\nexport function colorActionHovered(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionPressed(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionText(colorGroup?: ColorGroup, legacy?: boolean) {\n    return (\n        colorGroup?.foreground ??\n        colorGroup?.background?.adjust({\n            l: () => (isLight(colorGroup?.background, legacy) ? 4 : 96),\n        })\n    );\n}\n\nexport function colorActionTextHovered(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionTextPressed(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nfunction colorsFromOverrides(overrideColors: Partial<RoleColorOverrides>) {\n    return (Object.keys(overrideColors) as (keyof RoleColorOverrides)[]).reduce<Partial<RoleColors>>((colors, key) => {\n        const colorOrGroup = overrideColors[key];\n\n        if (colorOrGroup == null) return colors;\n\n        const { background, foreground, accent } = colorOrGroup;\n\n        return {\n            ...colors,\n            [key]: {\n                background: background ? normalizeColor(background) : undefined,\n                foreground: foreground ? normalizeColor(foreground) : undefined,\n                accent: accent ? normalizeColor(accent) : undefined,\n            },\n        };\n    }, {});\n}\n\nexport function colorBorder(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.background?.adjust({\n        s: (s) => (s > 50 ? Math.max(s - 15, 0) : s),\n        l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 8.8, 0) : Math.min(l + 11.3, 90)),\n    });\n}",
                "filename": "web/client/src/libs/post-purchase-ui/components/Theme/context.ts",
                "start_index": 5831,
                "end_index": 8651,
                "start_line": 206,
                "end_line": 984,
                "max_line": 984,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "0</p>}\n                                suffix={<p>10</p>}\n                            />\n                            <RangeSlider\n                                onChange={(bottomPadding: number) => onChangeConfig({ bottomPadding })}\n                                output\n                                step={2}\n                                value={config.bottomPadding || 0}\n                                label=\"Bottom padding\"\n                                min={0}\n                                max={10}\n                                prefix={<p>0</p>}\n                                suffix={<p>10</p>}\n                            />\n                        </VerticalStack>\n                    </SectionSettings>\n                    <SectionSettings name=\"General Settings\" icon={CategoriesMajor as IconSource}>\n                        <VerticalStack gap=\"3\">\n                            <>\n                                <Checkbox\n                                    label=\"Show price breakdown?\"\n                                    checked={config.showBreakdown}\n                                    onChange={(showBreakdown) => onChangeConfig({ showBreakdown })}\n                                />\n                                <Checkbox\n                                    label=\"Skip page if any upsell product is in original order\"\n                                    helpText={\n                                        hasMostOrLeastExpensiveProduct\n                                            ? 'This setting does not account for most/least expensive products since they will always be from the original order'\n                                            : ''\n                                    }\n                                    checked={config.skipUpsellIfAnyProductInOffer}\n                                    onChange={(skipUpsellIfAnyProductInOffer) =>\n                                        onChangeConfig({ skipUpsellIfAnyProductInOffer })\n                                    }\n                                />\n                            </>\n                        </VerticalStack>\n                    </SectionSettings>\n                    <SectionSettings name=\"Button Settings\" icon={ButtonMinor as IconSource}>\n                        <VerticalStack gap=\"3\">\n                            <VerticalStack gap=\"2\">\n                                <Text variant=\"headingSm\" as=\"p\">\n                                    Accept button\n                                </Text>\n                                <Checkbox\n                                    label={'Require confirmation click to accept'}\n                                    checked={config.requireConfirmationClick}\n                                    onChange={(requireConfirmationClick) =>\n                                        onChangeConfig({ requireConfirmationClick })\n                                    }\n                                />",
                "filename": "web/client/src/pages/funnels/components/multi-product-widget-settings.tsx",
                "start_index": 14480,
                "end_index": 17427,
                "start_line": 322,
                "end_line": 478,
                "max_line": 502,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { Button, OptionList, Popover } from '@shopify/polaris';\nimport { Field } from '@shopify/react-form';\nimport React, { useCallback, useState } from 'react';\n\nconst iconAppearance = [\n    { appearance: 'accent', polarisColor: 'highlight', color: 'rgb(23,119,183)' },\n    { appearance: 'interactive', polarisColor: 'primary', color: 'rgb(24,120,185)' } /*#1878B9*/,\n    { appearance: 'subdued', polarisColor: 'subdued', color: 'rgb(119,119,119)' },\n    { appearance: 'info', polarisColor: 'base', color: '#1773b0' },\n    { appearance: 'success', polarisColor: 'success', color: '#0a801f' },\n    { appearance: 'warning', polarisColor: 'warning', color: '#946c00' },\n    { appearance: 'critical', polarisColor: 'critical', color: 'rgb(245,83,83)' },\n    { appearance: 'monochrome' },\n];\n\n//match color picker icon\nconst colorStyle = {\n    width: '24px',\n    height: '24px',\n    borderRadius: '5px',\n    border: '1px solid #dfe3e8',\n};\n\nconst SelectIconColor = ({ value, onChange }: Field<string>) => {\n    const [active, setActive] = useState(false);\n    const toggleActive = useCallback(() => setActive((active) => !active), []);\n    const currentAppearance = iconAppearance.find(({ appearance }) => appearance === value)!;\n\n    const activator = (\n        <Button\n            onClick={toggleActive}\n            disclosure\n            icon={\n                <div\n                    style={{\n                        ...colorStyle,\n                        backgroundColor: currentAppearance.color,\n                        margin: '2px',\n                    }}\n                />\n            }\n        />\n    );\n\n    const iconsList = iconAppearance.map(({ appearance, color: backgroundColor }) => {\n        return {\n            value: appearance,\n            label: '',\n            media: (\n                <div\n                    style={{\n                        ...colorStyle,\n                        backgroundColor,\n                    }}\n                />\n            ),\n        };\n    });\n\n    return (\n        <div>\n            Select Icon Color\n            <Popover active={active} activator={activator} autofocusTarget=\"first-node\" onClose={toggleActive}>\n                <OptionList title=\"\" onChange={(value) => onChange(value[0])} options={iconsList} selected={[value]} />\n            </Popover>\n        </div>\n    );\n};\n\nexport default SelectIconColor;",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/selection-icon-color.tsx",
                "start_index": 0,
                "end_index": 2369,
                "start_line": 1,
                "end_line": 70,
                "max_line": 70,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n        const newTheme = createTheme();\n        if (!themeSettings) return newTheme;\n\n        const buttonHslColor = hexToHSL(themeSettings.checkout_button_color);\n        newTheme.customProperties.colorPrimaryAction = themeSettings.checkout_button_color;\n        newTheme.customProperties.colorSecondaryAction = themeSettings.checkout_button_color;\n\n        // Hover colors of button are lightened/darkened based on background color\n        const backgroundColor = hexToHSL(themeSettings.checkout_body_background_color);\n        let adjuster;\n        if (\n            isLight(backgroundColor) &&\n            buttonHslColor.l >= 10 // if the button is very dark, lighten it even if the page is light\n        ) {\n            adjuster = colorDarken;\n        } else {\n            adjuster = colorLighten;\n        }\n        newTheme.customProperties.colorPrimaryActionHovered = hslToHex(adjuster({ background: buttonHslColor }));\n        newTheme.customProperties.colorPrimaryActionPressed = hslToHex(adjuster({ background: buttonHslColor }));\n        newTheme.customProperties.colorSecondaryActionHovered = hslToHex(adjuster({ background: buttonHslColor }));\n        newTheme.customProperties.colorSecondaryActionPressed = hslToHex(adjuster({ background: buttonHslColor }));\n\n        // Primary button: text is set relative to button color for primary button\n        // Secondary button: text seems to work properly without any adjustments\n        newTheme.customProperties.colorPrimaryActionText = hslToHex(colorActionText({ background: buttonHslColor })!);\n        newTheme.customProperties.colorPrimaryActionTextHovered = hslToHex(\n            colorActionText({ background: buttonHslColor })!\n        );\n        newTheme.customProperties.colorPrimaryActionTextPressed = hslToHex(\n            colorActionText({ background: buttonHslColor })!\n        );\n\n        // Accent color is used for links and selected inputs\n        const accentHslColor = hexToHSL(themeSettings.checkout_accent_color);\n        newTheme.customProperties.colorInteractiveText = themeSettings.checkout_accent_color;\n        let linkAdjuster;\n        if (\n            isLight(backgroundColor) &&\n            accentHslColor.l >= 10 // if the button is very dark, lighten it even if the page is light\n        ) {\n            linkAdjuster = colorDarken;\n        } else {\n            linkAdjuster = colorLighten;\n        }\n        newTheme.customProperties.colorInteractiveTextHovered = hslToHex(linkAdjuster({ background: accentHslColor })!);\n        newTheme.customProperties.colorInteractiveTextPressed = hslToHex(linkAdjuster({ background: accentHslColor })!);\n\n        // Error color is used around invalid inputs and for the text of error messages\n        newTheme.customProperties.colorCriticalAccent = themeSettings.checkout_error_color;\n\n        const sidebarHslColor = hexToHSL(themeSettings.checkout_sidebar_background_color);",
                "filename": "web/client/src/libs/shared/useCustomTheme.ts",
                "start_index": 4713,
                "end_index": 7618,
                "start_line": 1,
                "end_line": 198,
                "max_line": 274,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<button\n            className=\"button\"\n            style={{\n                backgroundColor: config.primaryButtonBackgroundColor,\n                color: config.primaryButtonFontColor,\n                borderColor: config.primaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            Yes Please\n        </button>\n    );\n    const noButtonMarkup = (\n        <button\n            className=\"button\"\n            style={{\n                backgroundColor: config.secondaryButtonBackgroundColor,\n                color: config.secondaryButtonFontColor,\n                borderColor: config.secondaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            No Thanks\n        </button>\n    );\n\n    return (\n        <ShadowDom>\n            <style>{shadowCss}</style>\n            <div className=\"overlay-placement\">\n                <div className=\"wrapper\">\n                    <div className=\"overlay\">\n                        <div className=\"lightbox\">\n                            <div tabIndex={-1}>\n                                <div>\n                                    <div\n                                        className=\"header\"\n                                        style={{ backgroundColor: config.placementHeadingBackgroundColor }}\n                                    >\n                                        <div className=\"close-wrapper\">\n                                            <button style={{ display: 'outlined' }} className=\"close-button\">\n                                                <svg height=\"1em\" className=\"close-icon\" viewBox=\"0 0 24 24\">\n                                                    <polygon points=\"24 2.41 21.58 0 12 9.58 2.41 0 0 2.41 9.58 12 0 21.58 2.41 24 12 14.41 21.58 24 24 21.58 14.41 12\"></polygon>\n                                                </svg>\n                                            </button>\n                                        </div>\n                                        <div className=\"title-wrapper\">\n                                            <div style={{ display: 'inherit' }}>",
                "filename": "web/client/src/pages/rokt/rokt.page.tsx",
                "start_index": 46520,
                "end_index": 48901,
                "start_line": 864,
                "end_line": 915,
                "max_line": 1493,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "if (\n                            isConfigV2(config, offerVersion) &&\n                            isSingleConfig(config, template.appId === 'productInformation')\n                        ) {\n                            config.topPadding = setDefaultNumberValue(config.topPadding, 2);\n                            config.bottomPadding = setDefaultNumberValue(config.bottomPadding, 4);\n                            config.showBreakdown = config.hasOwnProperty('showBreakdown') ? config.showBreakdown : true;\n                            config.requireConfirmationClick = config.requireConfirmationClick || false;\n                            config.declineButtonStyle =\n                                config.declineButtonStyle || ('secondary' as DeclineButtonStyle);\n                        }\n\n                        if (isConfigV1(config, offerVersion)) {\n                            config.isSaveAmountTranslationEnabled = config.isSaveAmountTranslationEnabled || false;\n                        }\n\n                        if (isSingleConfig(config, template.appId === 'productInformation')) {\n                            config.offerDescription = config.offerDescription || '';\n                            config.aiRecAlgorithm =\n                                config.aiRecAlgorithm || ('BOUGHT_TOGETHER' as NostoRecAlgorithmOptionsType);\n                        }\n                        if (\n                            isConfigV1(config, offerVersion) &&\n                            isSingleConfig(config, template.appId === 'productInformation')\n                        ) {\n                            config.timer = {\n                                minutes: config.timer?.minutes ?? '10',\n                                position: config.timer?.position ?? ('top' as OfferTimerPosition),\n                                heading:\n                                    typeof config.timer?.heading === 'string'\n                                        ? config.timer.heading\n                                        : 'Limited time offer {TIMER}',\n                                text:\n                                    typeof config.timer?.text === 'string'\n                                        ? config.timer.text\n                                        : 'Add a {PRODUCT} to your order',\n                                textColor: config.timer?.textColor ?? 'Black',\n                                backgroundColor: config.timer?.backgroundColor ?? 'Grey',\n                            };\n                        }\n                    }",
                "filename": "web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts",
                "start_index": 8471,
                "end_index": 11011,
                "start_line": 70,
                "end_line": 243,
                "max_line": 270,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\">\n                                    Decline button\n                                </Text>\n                                <Select\n                                    label={'Style'}\n                                    options={DECLINE_BUTTON_STYLE_OPTIONS}\n                                    value={config.declineButtonStyle}\n                                    onChange={(declineButtonStyle: DeclineButtonStyle) =>\n                                        onChangeConfig({ declineButtonStyle })\n                                    }\n                                />\n                                <Select\n                                    label={'Position'}\n                                    options={DECLINE_BUTTON_POSITION_OPTIONS}\n                                    value={config?.declineButtonPosition ?? DECLINE_BUTTON_POSITION_KEYS.BELOW_UPSELL}\n                                    onChange={(declineButtonPosition: DeclineButtonPosition) =>\n                                        onChangeConfig({ declineButtonPosition })\n                                    }\n                                />\n                                <Checkbox\n                                    label=\"Customize button text\"\n                                    checked={Boolean(config?.declineButtonTextOverride)}\n                                    helpText={\n                                        Boolean(config?.declineButtonTextOverride) && (\n                                            <ButtonTextTranslationSuggestion />\n                                        )\n                                    }\n                                    onChange={(val) =>\n                                        onChangeConfig({\n                                            declineButtonTextOverride: val\n                                                ? {\n                                                      text: translations.declineThisOffer,\n                                                  }\n                                                : undefined,\n                                        })\n                                    }\n                                />\n                                {config.declineButtonTextOverride && (\n                                    <TextField\n                                        autoComplete=\"off\"\n                                        label=\"",
                "filename": "web/client/src/pages/funnels/components/multi-product-widget-settings.tsx",
                "start_index": 20893,
                "end_index": 23284,
                "start_line": 186,
                "end_line": 467,
                "max_line": 502,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "initial_doc_snippets": [
            {
                "code": "<svg\n                                                                    class=\"product-thumbnail__image\"\n                                                                    width=\"32\"\n                                                                    height=\"32\"\n                                                                    viewBox=\"0 0 32 32\"\n                                                                    fill=\"none\"\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                >\n                                                                    <path\n                                                                        fill-rule=\"evenodd\"\n                                                                        clip-rule=\"evenodd\"\n                                                                        d=\"M27.2 28.8C26.3184 28.8 25.6 28.0816 25.6 27.2C25.6 26.3184 26.3184 25.6 27.2 25.6C28.0816 25.6 28.8 26.3184 28.8 27.2C28.8 28.0816 28.0816 28.8 27.2 28.8ZM6.4 27.2C6.4 28.0816 5.6816 28.8 4.8 28.8C3.9184 28.8 3.2 28.0816 3.2 27.2C3.2 26.3184 3.9184 25.6 4.8 25.6C5.6816 25.6 6.4 26.3184 6.4 27.2ZM28.2656 9.34549L26.0464 15.9999H6.4V6.61269L28.2656 9.34549ZM27.2 22.4H6.4V19.2H27.2C27.8896 19.2 28.4992 18.76 28.7184 18.1056L31.9184 8.5056C32.0688 8.0512 32.0096 7.552 31.7536 7.1472C31.4976 6.7408 31.0736 6.472 30.5984 6.4128L6.4 3.3872V1.6C6.4 0.7168 5.6832 0 4.8 0H1.6C0.7168 0 0 0.7168 0 1.6C0 2.4832 0.7168 3.2 1.6 3.2H3.2V22.6944C1.3408 23.3584 0 25.1168 0 27.2C0 29.8464 2.1536 32 4.8 32C7.4464 32 9.6 29.8464 9.6 27.2C9.6 26.6352 9.4848 26.1024 9.3056 25.6H22.6944C22.5152 26.1024 22.4 26.6352 22.4 27.2C22.4 29.8464 24.5536 32 27.2 32C29.8464 32 32 29.8464 32 27.2C32 24.5536 29.8464 22.4 27.2 22.4Z\"\n                                                                        fill=\"#637381\"\n                                                                    />",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 326131,
                "end_index": 328135,
                "start_line": 6099,
                "end_line": 6353,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"hidden\">\n                            <span class=\"visually-hidden\" id=\"forwarding-external-new-window-message\">\n                                Opens external website in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-new-window-message\">\n                                Opens in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-external-message\">\n                                Opens external website.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"checkout-context-step-one\">\n                                Customer information - Checkout\n                            </span>\n                        </div>\n                    </main>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 322226,
                "end_index": 323078,
                "start_line": 6265,
                "end_line": 6282,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<td class=\"product__image\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325850,
                "end_index": 325877,
                "start_line": 6322,
                "end_line": 6322,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"order-summary-toggle__inner\">\n                        <span class=\"order-summary-toggle__icon-wrapper\">\n                            <svg\n                                width=\"20\"\n                                height=\"19\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__icon\"\n                            >\n                                <path\n                                    d=\"M17.178 13.088H5.453c-.454 0-.91-.364-.91-.818L3.727 1.818H0V0h4.544c.455 0 .91.364.91.818l.09 1.272h13.45c.274 0 .547.09.73.364.18.182.27.454.18.727l-1.817 9.18c-.09.455-.455.728-.91.728zM6.27 11.27h10.09l1.454-7.362H5.634l.637 7.362zm.092 7.715c1.004 0 1.818-.813 1.818-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817zm9.18 0c1.004 0 1.817-.813 1.817-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--show\">\n                            <span>Show order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"6\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M.504 1.813l4.358 3.845.496.438.496-.438 4.642-4.096L9.504.438 4.862 4.534h.992L1.496.69.504 1.812z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--hide\">\n                            <span>Hide order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"7\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M6.138.876L5.642.438l-.496.438L.504 4.972l.992 1.124L6.138 2l-.496.436 3.862 3.408.992-1.122L6.138.876z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span\n                            class=\"order-summary-toggle__total-recap total-recap\"\n                            data-order-summary-section=\"toggle-total-recap\"\n                        >\n                            <span class=\"total-recap__final-price\" data-checkout-payment-due-target=\"5073\">$50.73</span>\n                        </span>\n                    </span>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 242214,
                "end_index": 245205,
                "start_line": 6097,
                "end_line": 6446,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div\n                            id=\"partial-icon-symbols\"\n                            class=\"icon-symbols\"\n                            data-tg-refresh=\"partial-icon-symbols\"\n                            data-tg-refresh-always=\"true\"\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\">\n                                <symbol id=\"down-arrow\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 12\">\n                                        <path\n                                            d=\"M10.817 7.624l-4.375 4.2c-.245.235-.64.235-.884 0l-4.375-4.2c-.244-.234-.244-.614 0-.848.245-.235.64-.235.884 0L5.375 9.95V.6c0-.332.28-.6.625-.6s.625.268.625.6v9.35l3.308-3.174c.122-.117.282-.176.442-.176.16 0 .32.06.442.176.244.234.244.614 0 .848\"\n                                        ></path>\n                                    </svg>\n                                </symbol>\n                                <symbol id=\"checkmark\">\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        viewBox=\"0 0 50 50\"\n                                        fill=\"none\"\n                                        stroke-width=\"2\"\n                                        class=\"checkmark\"\n                                    >\n                                        <path\n                                            class=\"checkmark__circle\"\n                                            d=\"M25 49c13.255 0 24-10.745 24-24S38.255 1 25 1 1 11.745 1 25s10.745 24 24 24z\"\n                                        ></path>\n                                        <path class=\"checkmark__check\" d=\"M15 24.51l7.307 7.308L35.125 19\"></path>\n                                    </svg>\n                                </symbol>\n                                <symbol id=\"spinner-button\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                        <path\n                                            d=\"M20 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0v2c-4.418 0-8 3.582-8 8s3.582 8 8 8 8-3.582 8-8h2z\"\n                                        ></path>\n                                    </svg>\n                                </symbol>\n                            </svg>\n                        </div>\n                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 337185,
                "end_index": 339656,
                "start_line": 6081,
                "end_line": 6493,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<mask\n                                                                        id=\"mask0\"\n                                                                        mask-type=\"alpha\"\n                                                                        maskUnits=\"userSpaceOnUse\"\n                                                                        x=\"0\"\n                                                                        y=\"0\"\n                                                                        width=\"32\"\n                                                                        height=\"32\"\n                                                                    >\n                                                                        <path\n                                                                            fill-rule=\"evenodd\"\n                                                                            clip-rule=\"evenodd\"\n                                                                            d=\"M27.2 28.8C26.3184 28.8 25.6 28.0816 25.6 27.2C25.6 26.3184 26.3184 25.6 27.2 25.6C28.0816 25.6 28.8 26.3184 28.8 27.2C28.8 28.0816 28.0816 28.8 27.2 28.8ZM6.4 27.2C6.4 28.0816 5.6816 28.8 4.8 28.8C3.9184 28.8 3.2 28.0816 3.2 27.2C3.2 26.3184 3.9184 25.6 4.8 25.6C5.6816 25.6 6.4 26.3184 6.4 27.2ZM28.2656 9.34549L26.0464 15.9999H6.4V6.61269L28.2656 9.34549ZM27.2 22.4H6.4V19.2H27.2C27.8896 19.2 28.4992 18.76 28.7184 18.1056L31.9184 8.5056C32.0688 8.0512 32.0096 7.552 31.7536 7.1472C31.4976 6.7408 31.0736 6.472 30.5984 6.4128L6.4 3.3872V1.6C6.4 0.7168 5.6832 0 4.8 0H1.6C0.7168 0 0 0.7168 0 1.6C0 2.4832 0.7168 3.2 1.6 3.2H3.2V22.6944C1.3408 23.3584 0 25.1168 0 27.2C0 29.8464 2.1536 32 4.8 32C7.4464 32 9.6 29.8464 9.6 27.2C9.6 26.6352 9.4848 26.1024 9.3056 25.6H22.6944C22.5152 26.1024 22.4 26.6352 22.4 27.2C22.4 29.8464 24.5536 32 27.2 32C29.8464 32 32 29.8464 32 27.2C32 24.5536 29.8464 22.4 27.2 22.4Z\"\n                                                                            fill=\"white\"\n                                                                        />\n                                                                    </mask>\n                                                                    <g mask=\"url(#mask0)\"></g>\n                                                                </svg>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 328204,
                "end_index": 330541,
                "start_line": 6339,
                "end_line": 6356,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"step__sections\">\n                                <div class=\"section\">\n                                    <div class=\"section__header os-header\">\n                                        <svg\n                                            width=\"56\"\n                                            height=\"56\"\n                                            viewBox=\"0 0 56 56\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <circle cx=\"28\" cy=\"28\" r=\"26\" stroke=\"#E5E5E5\" stroke-width=\"2.29412\" />\n                                            <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M22.4811 37.3603L16.3636 31.3947C15.5663 30.6172 15.5663 29.3605 16.3636 28.583C17.1609 27.8055 18.4497 27.8055 19.247 28.583L23.8066 33.0293L36.6493 18.7538C37.3834 17.9186 38.6701 17.8231 39.5225 18.537C40.379 19.2529 40.4789 20.5056 39.7448 21.3388L25.4706 37.2469C25.1015 37.6685 24.5672 37.9191 24.0003 37.9409C23.3825 37.9429 22.8625 37.7341 22.4811 37.3603Z\"\n                                                fill=\"#008060\"\n                                                stroke=\"#E5E5E5\"\n                                                stroke-width=\"0.764706\"\n                                            />\n                                        </svg>\n                                        <div class=\"os-header__heading\">\n                                            <span class=\"os-order-number\"> Order #1001 </span>\n                                            <h2 class=\"os-header__title\" id=\"main-header\" tabindex=\"-1\">\n                                                Thank you {{Customer Name}}!\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245858,
                "end_index": 247957,
                "start_line": 6161,
                "end_line": 6451,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"section\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245919,
                "end_index": 245940,
                "start_line": 6162,
                "end_line": 6190,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"product-thumbnail\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325934,
                "end_index": 325965,
                "start_line": 6323,
                "end_line": 6323,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"product-thumbnail__quantity\" aria-hidden=\"true\"\n                                                                >1</span\n                                                            >\n                                                        </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 330669,
                "end_index": 330927,
                "start_line": 6358,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<th class=\"product__description\" scope=\"row\">\n                                                        <span class=\"product__description__name order-summary__emphasis\"\n                                                            >Product Name</span\n                                                        >\n                                                        <span\n                                                            class=\"product__description__variant order-summary__small-text\"\n                                                            >Variant Name</span\n                                                        >\n                                                    </th>\n                                                    <td class=\"product__quantity visually-hidden\">1</td>\n                                                    <td class=\"product__price\">\n                                                        <span class=\"order-summary__emphasis\">$42.99</span>\n                                                    </td>\n                                                </tr>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 331038,
                "end_index": 332129,
                "start_line": 6363,
                "end_line": 6376,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script>\n            !(function (f, b, e, v, n, t, s) {\n                if (f.fbq) return;\n                n = f.fbq = function () {\n                    n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments);\n                };\n                if (!f._fbq) f._fbq = n;\n                n.push = n;\n                n.loaded = !0;\n                n.version = '2.0';\n                n.queue = [];\n                t = b.createElement(e);\n                t.async = !0;\n                t.src = v;\n                s = b.getElementsByTagName(e)[0];\n                s.parentNode.insertBefore(t, s);\n            })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');\n            fbq('init', '895262111044943');\n            fbq('track', 'PageView');\n        </script>\n        <!-- End Facebook Pixel Code -->\n        <!-- Reddit Pixel -->\n        <script>\n            !(function (w, d) {\n                if (!w.rdt) {\n                    var p = (w.rdt = function () {\n                        p.sendEvent ? p.sendEvent.apply(p, arguments) : p.callQueue.push(arguments);\n                    });\n                    p.callQueue = [];\n                    var t = d.createElement('script');\n                    (t.src = 'https://www.redditstatic.com/ads/pixel.js'), (t.async = !0);\n                    var s = d.getElementsByTagName('script')[0];\n                    s.parentNode.insertBefore(t, s);\n                }\n            })(window, document);\n            rdt('init', 't2_dp3wj8bg');\n            rdt('track', 'PageVisit');\n        </script>\n        <!-- End Reddit Pixel -->\n\n        <!-- Dev HMR [START] -->\n        <script type=\"module\">\n            if (!import.meta.env || !import.meta.env.PROD) {\n                // For embedded development, the iframe loads an HTML file from the server. Normally for\n                // development, the HTML file is served by the dev server, which injects the HMR script.\n                // This script adds the HMR script to the iframe to allow HMR in embedded development.\n                const script = document.createElement('script');\n                script.setAttribute('type', 'module');\n                script.setAttribute('src', './src/dev-hmr.ts');\n                document.getElementsByTagName('head')[0].append(script);\n            }\n        </script>\n        <!-- Dev HMR [END] -->\n\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com/\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com/\" crossorigin=\"anonymous\" />\n        <link\n            href=\"https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap\"\n        />\n    </head>",
                "filename": "web/client/index.html",
                "start_index": 6232,
                "end_index": 8924,
                "start_line": 7,
                "end_line": 178,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"section__content\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248049,
                "end_index": 248079,
                "start_line": 6191,
                "end_line": 6215,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<style>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 727,
                "end_index": 734,
                "start_line": 18,
                "end_line": 18,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248120,
                "end_index": 248145,
                "start_line": 6192,
                "end_line": 6210,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<html\n    lang=\"en\"\n    dir=\"ltr\"\n    class=\"js desktop page--no-banner page--logo-main page--show page--show card-fields cors svg opacity placeholder no-touchevents displaytable display-table generatedcontent cssanimations flexbox no-flexboxtweener anyflexbox shopemoji floating-labels\"\n>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 0,
                "end_index": 289,
                "start_line": 1,
                "end_line": 6518,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"map default-background\" role=\"region\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248298,
                "end_index": 248348,
                "start_line": 6194,
                "end_line": 6194,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "</style>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 235909,
                "end_index": 235917,
                "start_line": 5953,
                "end_line": 5953,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318798,
                "end_index": 318828,
                "start_line": 6214,
                "end_line": 6214,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row content-box__row--no-padding\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248190,
                "end_index": 248249,
                "start_line": 6193,
                "end_line": 6193,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "intial_documentation_sources": {},
        "external_documentation_snippets": {},
        "mmr_code_snippets_initial": [
            {
                "code": "<div className=\"TextConfigurator__color-buttons-menu\">\n                                <Button\n                                    onClick={() => {\n                                        showColorSelector();\n                                        handleChange('appearance', 'success');\n                                    }}\n                                    // className=\"TextConfigurator__button-container\"\n                                    icon={\n                                        <img src={greenEllipse} alt=\"Green\" className=\"TextConfigurator__img-button\" />\n                                    }\n                                />\n\n                                <Button\n                                    onClick={() => {\n                                        showColorSelector();\n                                        handleChange('appearance', 'warning');\n                                    }",
                "filename": "web/client/src/shared-components/rich-text-editor/text-configurator.tsx",
                "start_index": 4542,
                "end_index": 5462,
                "start_line": 141,
                "end_line": 170,
                "max_line": 211,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "if (themeSettings.checkout_input_background_color_mode === 'transparent') {\n            // Input\n            newTheme.configuration.radio.background = 'transparent';\n            newTheme.configuration.checkbox.background = 'transparent';\n            newTheme.configuration.select.background = 'transparent';\n            newTheme.configuration.textFields.background = 'transparent';\n            // newTheme.customProperties.colorSurfaceTertiaryText = hslToHex(colorText({ background: bodyHslColor })!);\n            // newTheme.customProperties.colorSurfaceTertiaryTextEmphasized = hslToHex(\n            //     colorTextEmphasized({ background: bodyHslColor })!\n            // );\n            // newTheme.customProperties.colorSurfaceTertiaryTextSubdued = hslToHex(\n            //     colorTextSubdued({ background: bodyHslColor })!\n            // );\n\n            const borderLighten = 'rgba(255, 255, 255, 0.15)';\n            const borderEmphasizedLighten = 'rgba(255, 255, 255, 0.2)';\n\n            const borderDarken = 'rgba(0, 0, 0, 0.15)';\n            const borderEmphasizedDarken = 'rgba(0, 0, 0, 0.2)';\n\n            // Border on main background\n            newTheme.customProperties.colorCanvasBorder = isLight(bodyHslColor) ? borderDarken : borderLighten;\n            newTheme.customProperties.colorCanvasBorderEmphasized = isLight(bodyHslColor)\n                ? borderEmphasizedDarken\n                : borderEmphasizedLighten;\n\n            // Border on sidebar background\n            newTheme.customProperties.colorSurfaceSecondaryBorder = isLight(sidebarHslColor)\n                ? borderDarken\n                : borderLighten;\n            newTheme.customProperties.colorSurfaceSecondaryBorderEmphasized = isLight(sidebarHslColor)\n                ? borderEmphasizedDarken\n                : borderEmphasizedLighten;\n        } else {\n            // Border on main background\n            newTheme.customProperties.colorCanvasBorder = hslToHex(colorBorder({ background: bodyHslColor })!);\n            newTheme.customProperties.colorCanvasBorderEmphasized = hslToHex(\n                colorBorderEmphasized({ background: bodyHslColor })!\n            );\n\n            // Border on sidebar background\n            newTheme.customProperties.colorSurfaceSecondaryBorder = hslToHex(\n                colorBorder({ background: sidebarHslColor })!\n            );\n            newTheme.customProperties.colorSurfaceSecondaryBorderEmphasized = hslToHex(\n                colorBorderEmphasized({ background: sidebarHslColor })!\n            );\n        }\n\n        // The font families will be loaded from the root css file so we don't need fallback fonts\n        newTheme.customProperties.typographyPrimaryFonts = `\"${themeSettings.checkout_body_font}\", sans-serif`;\n        newTheme.customProperties.typographySecondaryFonts = `\"${themeSettings.checkout_heading_font}\", sans-serif`;\n\n        return newTheme;\n    }",
                "filename": "web/client/src/libs/shared/useCustomTheme.ts",
                "start_index": 8762,
                "end_index": 11662,
                "start_line": 217,
                "end_line": 271,
                "max_line": 274,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "if (nConfigs === 0) {\n        return (\n            <Tooltip content=\"Widget is not set up\">\n                <Icon source={InfoMinor as IconSource} />\n            </Tooltip>\n        );\n    }\n    if (nActiveConfigs === 0) {\n        return (\n            <Tooltip\n                content={nConfigs === 1 ? 'Configuration is inactive' : `All ${nConfigs} configurations are inactive`}\n            >\n                <Badge status=\"attention\" progress=\"partiallyComplete\">\n                    {nConfigs.toString()}\n                </Badge>\n            </Tooltip>\n        );\n    }\n    return (\n        <Tooltip content={`${nActiveConfigs} of ${nConfigs} configurations are active`}>\n            <Badge status=\"success\" progress=\"complete\">\n                {nActiveConfigs.toString()}\n            </Badge>\n        </Tooltip>\n    );\n};\n\nfunction getSplitTestVersionFromConfiguration(configuration?: FullConfigurationType) {\n    return configuration?.splitTestEnabled ? 'A' : null;\n}",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx",
                "start_index": 8261,
                "end_index": 9232,
                "start_line": 193,
                "end_line": 222,
                "max_line": 222,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<BrandingRow>\n                    <BrandingColorInputField\n                        label=\"Background\"\n                        field=\"designSystem.colorPalette.interactive.background\"\n                    />\n                    <BrandingColorInputField\n                        label=\"Foreground\"\n                        field=\"designSystem.colorPalette.interactive.foreground\"\n                    />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.interactive.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Main body\" subtitle=\"Left area on desktop\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.color1.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.color1.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.color1.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Secondary body\" subtitle=\"Right area on desktop (order summary)\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.color2.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.color2.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.color2.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Loading screens\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.canvas.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.canvas.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.canvas.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Critical\" subtitle=\"Includes errors\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.critical.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.critical.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.critical.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n        </BrandingTab>",
                "filename": "web/client/src/pages/checkout/checkout-branding/branding-color-palette.tsx",
                "start_index": 907,
                "end_index": 3681,
                "start_line": 9,
                "end_line": 61,
                "max_line": 63,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "if (\n                            isConfigV2(config, offerVersion) &&\n                            isSingleConfig(config, template.appId === 'productInformation')\n                        ) {\n                            config.topPadding = setDefaultNumberValue(config.topPadding, 2);\n                            config.bottomPadding = setDefaultNumberValue(config.bottomPadding, 4);\n                            config.showBreakdown = config.hasOwnProperty('showBreakdown') ? config.showBreakdown : true;\n                            config.requireConfirmationClick = config.requireConfirmationClick || false;\n                            config.declineButtonStyle =\n                                config.declineButtonStyle || ('secondary' as DeclineButtonStyle);\n                        }\n\n                        if (isConfigV1(config, offerVersion)) {\n                            config.isSaveAmountTranslationEnabled = config.isSaveAmountTranslationEnabled || false;\n                        }\n\n                        if (isSingleConfig(config, template.appId === 'productInformation')) {\n                            config.offerDescription = config.offerDescription || '';\n                            config.aiRecAlgorithm =\n                                config.aiRecAlgorithm || ('BOUGHT_TOGETHER' as NostoRecAlgorithmOptionsType);\n                        }\n                        if (\n                            isConfigV1(config, offerVersion) &&\n                            isSingleConfig(config, template.appId === 'productInformation')\n                        ) {\n                            config.timer = {\n                                minutes: config.timer?.minutes ?? '10',\n                                position: config.timer?.position ?? ('top' as OfferTimerPosition),\n                                heading:\n                                    typeof config.timer?.heading === 'string'\n                                        ? config.timer.heading\n                                        : 'Limited time offer {TIMER}',\n                                text:\n                                    typeof config.timer?.text === 'string'\n                                        ? config.timer.text\n                                        : 'Add a {PRODUCT} to your order',\n                                textColor: config.timer?.textColor ?? 'Black',\n                                backgroundColor: config.timer?.backgroundColor ?? 'Grey',\n                            };\n                        }\n                    }",
                "filename": "web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts",
                "start_index": 8471,
                "end_index": 11011,
                "start_line": 70,
                "end_line": 243,
                "max_line": 270,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "export function colorTextEmphasized(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.foreground\n        ? colorGroup?.foreground?.adjust({\n              l: (l) => (isLight(colorGroup?.foreground, legacy) ? Math.min(l + 15, 100) : l - 10),\n          })\n        : colorGroup?.background?.adjust({\n              s: (s) => (s > 50 ? s : Math.min(s + 15, 100)),\n              l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 77.5, 0) : 98.3),\n          });\n}\n\nexport function colorTextSubdued(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.foreground\n        ? colorGroup?.foreground?.adjust({\n              l: (l) => (isLight(colorGroup?.foreground, legacy) ? Math.max(l - 35, 0) : l + 43.2),\n          })\n        : colorGroup?.background?.adjust({\n              s: (s) => (s > 50 ? Math.max(s - 55, 0) : s),\n              l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 49.9, 10) : Math.min(l + 63.2, 90)),\n          });\n}\n\nexport function colorActionHovered(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionPressed(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionText(colorGroup?: ColorGroup, legacy?: boolean) {\n    return (\n        colorGroup?.foreground ??\n        colorGroup?.background?.adjust({\n            l: () => (isLight(colorGroup?.background, legacy) ? 4 : 96),\n        })\n    );\n}\n\nexport function colorActionTextHovered(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionTextPressed(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nfunction colorsFromOverrides(overrideColors: Partial<RoleColorOverrides>) {\n    return (Object.keys(overrideColors) as (keyof RoleColorOverrides)[]).reduce<Partial<RoleColors>>((colors, key) => {\n        const colorOrGroup = overrideColors[key];\n\n        if (colorOrGroup == null) return colors;\n\n        const { background, foreground, accent } = colorOrGroup;\n\n        return {\n            ...colors,\n            [key]: {\n                background: background ? normalizeColor(background) : undefined,\n                foreground: foreground ? normalizeColor(foreground) : undefined,\n                accent: accent ? normalizeColor(accent) : undefined,\n            },\n        };\n    }, {});\n}\n\nexport function colorBorder(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.background?.adjust({\n        s: (s) => (s > 50 ? Math.max(s - 15, 0) : s),\n        l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 8.8, 0) : Math.min(l + 11.3, 90)),\n    });\n}",
                "filename": "web/client/src/libs/post-purchase-ui/components/Theme/context.ts",
                "start_index": 5831,
                "end_index": 8651,
                "start_line": 206,
                "end_line": 984,
                "max_line": 984,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Navigation.Item\n                                  key={value.configurations?.[0]?.id}\n                                  selected={focusedWidget.configuration === configurationIndex}\n                                  //@ts-ignore\n                                  label={\n                                      <HorizontalStack align={'space-between'} gap=\"2\">\n                                          <Text as={'p'} variant={'bodyMd'}>{`Configuration ${\n                                              configurationIndex + 1\n                                          }`}</Text>\n                                          <SidebarTag configurations={value.configurations} />\n                                          <Button\n                                              plain\n                                              destructive\n                                              icon={<Icon source={DeleteMajor as IconSource} />}\n                                              disabled={activeWidgetDynamicList.value.length === 1}\n                                              //@ts-ignore\n                                              onClick={(e) => {\n                                                  e.stopPropagation();\n                                                  setFocusedWidget((prev) => ({\n                                                      ...prev,\n                                                      index: 0,\n                                                      configuration: 0,\n                                                      step: 'list',\n                                                      splitTestVersion: getSplitTestVersionFromConfiguration(\n                                                          activeWidgetDynamicList.value?.[0]?.configurations?.[0]\n                                                      ),\n                                                  }));\n                                                  activeWidgetDynamicList.removeItem(configurationIndex);\n                                              }}\n                                          />\n                                      </HorizontalStack>\n                                  }\n                                  onClick={",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx",
                "start_index": 3014,
                "end_index": 5256,
                "start_line": 97,
                "end_line": 170,
                "max_line": 222,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "/* stylelint-disable block-no-empty */\n\n.Button {\n}\n\n.ButtonPrimary {\n}\n\n.ButtonSecondary {\n}\n\n.ButtonPrimary.ButtonCritical {\n}\n\n.ButtonSecondary.ButtonCritical {\n}\n\n.Surface-colorCanvas {\n}\n\n.Surface-colorSurfacePrimary {\n}\n\n.Surface-colorSurfaceSecondary {\n}\n\n.Surface-colorSurfaceTertiary {\n}\n\n.ColorCriticalAccent {\n}\n\n.Utility-defaultBorderColor {\n}\n\n.Utility-defaultTextSubduedColor {\n}\n\n.Utility-defaultTextEmphasizedColor {\n}\n\n.Utility-defaultAccentColor {\n}\n\n/* stylelint-enable block-no-empty */",
                "filename": "web/client/src/libs/checkout-ui/utilities/legacy/styles.css",
                "start_index": 0,
                "end_index": 506,
                "start_line": 1,
                "end_line": 45,
                "max_line": 45,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<button\n            className=\"button\"\n            style={{\n                backgroundColor: config.primaryButtonBackgroundColor,\n                color: config.primaryButtonFontColor,\n                borderColor: config.primaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            Yes Please\n        </button>\n    );\n    const noButtonMarkup = (\n        <button\n            className=\"button\"\n            style={{\n                backgroundColor: config.secondaryButtonBackgroundColor,\n                color: config.secondaryButtonFontColor,\n                borderColor: config.secondaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            No Thanks\n        </button>\n    );\n\n    return (\n        <ShadowDom>\n            <style>{shadowCss}</style>\n            <div className=\"overlay-placement\">\n                <div className=\"wrapper\">\n                    <div className=\"overlay\">\n                        <div className=\"lightbox\">\n                            <div tabIndex={-1}>\n                                <div>\n                                    <div\n                                        className=\"header\"\n                                        style={{ backgroundColor: config.placementHeadingBackgroundColor }}\n                                    >\n                                        <div className=\"close-wrapper\">\n                                            <button style={{ display: 'outlined' }} className=\"close-button\">\n                                                <svg height=\"1em\" className=\"close-icon\" viewBox=\"0 0 24 24\">\n                                                    <polygon points=\"24 2.41 21.58 0 12 9.58 2.41 0 0 2.41 9.58 12 0 21.58 2.41 24 12 14.41 21.58 24 24 21.58 14.41 12\"></polygon>\n                                                </svg>\n                                            </button>\n                                        </div>\n                                        <div className=\"title-wrapper\">\n                                            <div style={{ display: 'inherit' }}>",
                "filename": "web/client/src/pages/rokt/rokt.page.tsx",
                "start_index": 46520,
                "end_index": 48901,
                "start_line": 864,
                "end_line": 915,
                "max_line": 1493,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { Button, OptionList, Popover } from '@shopify/polaris';\nimport { Field } from '@shopify/react-form';\nimport React, { useCallback, useState } from 'react';\n\nconst iconAppearance = [\n    { appearance: 'accent', polarisColor: 'highlight', color: 'rgb(23,119,183)' },\n    { appearance: 'interactive', polarisColor: 'primary', color: 'rgb(24,120,185)' } /*#1878B9*/,\n    { appearance: 'subdued', polarisColor: 'subdued', color: 'rgb(119,119,119)' },\n    { appearance: 'info', polarisColor: 'base', color: '#1773b0' },\n    { appearance: 'success', polarisColor: 'success', color: '#0a801f' },\n    { appearance: 'warning', polarisColor: 'warning', color: '#946c00' },\n    { appearance: 'critical', polarisColor: 'critical', color: 'rgb(245,83,83)' },\n    { appearance: 'monochrome' },\n];\n\n//match color picker icon\nconst colorStyle = {\n    width: '24px',\n    height: '24px',\n    borderRadius: '5px',\n    border: '1px solid #dfe3e8',\n};\n\nconst SelectIconColor = ({ value, onChange }: Field<string>) => {\n    const [active, setActive] = useState(false);\n    const toggleActive = useCallback(() => setActive((active) => !active), []);\n    const currentAppearance = iconAppearance.find(({ appearance }) => appearance === value)!;\n\n    const activator = (\n        <Button\n            onClick={toggleActive}\n            disclosure\n            icon={\n                <div\n                    style={{\n                        ...colorStyle,\n                        backgroundColor: currentAppearance.color,\n                        margin: '2px',\n                    }}\n                />\n            }\n        />\n    );\n\n    const iconsList = iconAppearance.map(({ appearance, color: backgroundColor }) => {\n        return {\n            value: appearance,\n            label: '',\n            media: (\n                <div\n                    style={{\n                        ...colorStyle,\n                        backgroundColor,\n                    }}\n                />\n            ),\n        };\n    });\n\n    return (\n        <div>\n            Select Icon Color\n            <Popover active={active} activator={activator} autofocusTarget=\"first-node\" onClose={toggleActive}>\n                <OptionList title=\"\" onChange={(value) => onChange(value[0])} options={iconsList} selected={[value]} />\n            </Popover>\n        </div>\n    );\n};\n\nexport default SelectIconColor;",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/selection-icon-color.tsx",
                "start_index": 0,
                "end_index": 2369,
                "start_line": 1,
                "end_line": 70,
                "max_line": 70,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "reranked_doc_snippets_initial": [
            {
                "code": "<svg\n                                                                    class=\"product-thumbnail__image\"\n                                                                    width=\"32\"\n                                                                    height=\"32\"\n                                                                    viewBox=\"0 0 32 32\"\n                                                                    fill=\"none\"\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                >\n                                                                    <path\n                                                                        fill-rule=\"evenodd\"\n                                                                        clip-rule=\"evenodd\"\n                                                                        d=\"M27.2 28.8C26.3184 28.8 25.6 28.0816 25.6 27.2C25.6 26.3184 26.3184 25.6 27.2 25.6C28.0816 25.6 28.8 26.3184 28.8 27.2C28.8 28.0816 28.0816 28.8 27.2 28.8ZM6.4 27.2C6.4 28.0816 5.6816 28.8 4.8 28.8C3.9184 28.8 3.2 28.0816 3.2 27.2C3.2 26.3184 3.9184 25.6 4.8 25.6C5.6816 25.6 6.4 26.3184 6.4 27.2ZM28.2656 9.34549L26.0464 15.9999H6.4V6.61269L28.2656 9.34549ZM27.2 22.4H6.4V19.2H27.2C27.8896 19.2 28.4992 18.76 28.7184 18.1056L31.9184 8.5056C32.0688 8.0512 32.0096 7.552 31.7536 7.1472C31.4976 6.7408 31.0736 6.472 30.5984 6.4128L6.4 3.3872V1.6C6.4 0.7168 5.6832 0 4.8 0H1.6C0.7168 0 0 0.7168 0 1.6C0 2.4832 0.7168 3.2 1.6 3.2H3.2V22.6944C1.3408 23.3584 0 25.1168 0 27.2C0 29.8464 2.1536 32 4.8 32C7.4464 32 9.6 29.8464 9.6 27.2C9.6 26.6352 9.4848 26.1024 9.3056 25.6H22.6944C22.5152 26.1024 22.4 26.6352 22.4 27.2C22.4 29.8464 24.5536 32 27.2 32C29.8464 32 32 29.8464 32 27.2C32 24.5536 29.8464 22.4 27.2 22.4Z\"\n                                                                        fill=\"#637381\"\n                                                                    />",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 326131,
                "end_index": 328135,
                "start_line": 6099,
                "end_line": 6353,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"hidden\">\n                            <span class=\"visually-hidden\" id=\"forwarding-external-new-window-message\">\n                                Opens external website in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-new-window-message\">\n                                Opens in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-external-message\">\n                                Opens external website.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"checkout-context-step-one\">\n                                Customer information - Checkout\n                            </span>\n                        </div>\n                    </main>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 322226,
                "end_index": 323078,
                "start_line": 6265,
                "end_line": 6282,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<td class=\"product__image\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325850,
                "end_index": 325877,
                "start_line": 6322,
                "end_line": 6322,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"order-summary-toggle__inner\">\n                        <span class=\"order-summary-toggle__icon-wrapper\">\n                            <svg\n                                width=\"20\"\n                                height=\"19\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__icon\"\n                            >\n                                <path\n                                    d=\"M17.178 13.088H5.453c-.454 0-.91-.364-.91-.818L3.727 1.818H0V0h4.544c.455 0 .91.364.91.818l.09 1.272h13.45c.274 0 .547.09.73.364.18.182.27.454.18.727l-1.817 9.18c-.09.455-.455.728-.91.728zM6.27 11.27h10.09l1.454-7.362H5.634l.637 7.362zm.092 7.715c1.004 0 1.818-.813 1.818-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817zm9.18 0c1.004 0 1.817-.813 1.817-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--show\">\n                            <span>Show order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"6\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M.504 1.813l4.358 3.845.496.438.496-.438 4.642-4.096L9.504.438 4.862 4.534h.992L1.496.69.504 1.812z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--hide\">\n                            <span>Hide order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"7\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M6.138.876L5.642.438l-.496.438L.504 4.972l.992 1.124L6.138 2l-.496.436 3.862 3.408.992-1.122L6.138.876z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span\n                            class=\"order-summary-toggle__total-recap total-recap\"\n                            data-order-summary-section=\"toggle-total-recap\"\n                        >\n                            <span class=\"total-recap__final-price\" data-checkout-payment-due-target=\"5073\">$50.73</span>\n                        </span>\n                    </span>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 242214,
                "end_index": 245205,
                "start_line": 6097,
                "end_line": 6446,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div\n                            id=\"partial-icon-symbols\"\n                            class=\"icon-symbols\"\n                            data-tg-refresh=\"partial-icon-symbols\"\n                            data-tg-refresh-always=\"true\"\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\">\n                                <symbol id=\"down-arrow\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 12\">\n                                        <path\n                                            d=\"M10.817 7.624l-4.375 4.2c-.245.235-.64.235-.884 0l-4.375-4.2c-.244-.234-.244-.614 0-.848.245-.235.64-.235.884 0L5.375 9.95V.6c0-.332.28-.6.625-.6s.625.268.625.6v9.35l3.308-3.174c.122-.117.282-.176.442-.176.16 0 .32.06.442.176.244.234.244.614 0 .848\"\n                                        ></path>\n                                    </svg>\n                                </symbol>\n                                <symbol id=\"checkmark\">\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        viewBox=\"0 0 50 50\"\n                                        fill=\"none\"\n                                        stroke-width=\"2\"\n                                        class=\"checkmark\"\n                                    >\n                                        <path\n                                            class=\"checkmark__circle\"\n                                            d=\"M25 49c13.255 0 24-10.745 24-24S38.255 1 25 1 1 11.745 1 25s10.745 24 24 24z\"\n                                        ></path>\n                                        <path class=\"checkmark__check\" d=\"M15 24.51l7.307 7.308L35.125 19\"></path>\n                                    </svg>\n                                </symbol>\n                                <symbol id=\"spinner-button\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                        <path\n                                            d=\"M20 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0v2c-4.418 0-8 3.582-8 8s3.582 8 8 8 8-3.582 8-8h2z\"\n                                        ></path>\n                                    </svg>\n                                </symbol>\n                            </svg>\n                        </div>\n                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 337185,
                "end_index": 339656,
                "start_line": 6081,
                "end_line": 6493,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<mask\n                                                                        id=\"mask0\"\n                                                                        mask-type=\"alpha\"\n                                                                        maskUnits=\"userSpaceOnUse\"\n                                                                        x=\"0\"\n                                                                        y=\"0\"\n                                                                        width=\"32\"\n                                                                        height=\"32\"\n                                                                    >\n                                                                        <path\n                                                                            fill-rule=\"evenodd\"\n                                                                            clip-rule=\"evenodd\"\n                                                                            d=\"M27.2 28.8C26.3184 28.8 25.6 28.0816 25.6 27.2C25.6 26.3184 26.3184 25.6 27.2 25.6C28.0816 25.6 28.8 26.3184 28.8 27.2C28.8 28.0816 28.0816 28.8 27.2 28.8ZM6.4 27.2C6.4 28.0816 5.6816 28.8 4.8 28.8C3.9184 28.8 3.2 28.0816 3.2 27.2C3.2 26.3184 3.9184 25.6 4.8 25.6C5.6816 25.6 6.4 26.3184 6.4 27.2ZM28.2656 9.34549L26.0464 15.9999H6.4V6.61269L28.2656 9.34549ZM27.2 22.4H6.4V19.2H27.2C27.8896 19.2 28.4992 18.76 28.7184 18.1056L31.9184 8.5056C32.0688 8.0512 32.0096 7.552 31.7536 7.1472C31.4976 6.7408 31.0736 6.472 30.5984 6.4128L6.4 3.3872V1.6C6.4 0.7168 5.6832 0 4.8 0H1.6C0.7168 0 0 0.7168 0 1.6C0 2.4832 0.7168 3.2 1.6 3.2H3.2V22.6944C1.3408 23.3584 0 25.1168 0 27.2C0 29.8464 2.1536 32 4.8 32C7.4464 32 9.6 29.8464 9.6 27.2C9.6 26.6352 9.4848 26.1024 9.3056 25.6H22.6944C22.5152 26.1024 22.4 26.6352 22.4 27.2C22.4 29.8464 24.5536 32 27.2 32C29.8464 32 32 29.8464 32 27.2C32 24.5536 29.8464 22.4 27.2 22.4Z\"\n                                                                            fill=\"white\"\n                                                                        />\n                                                                    </mask>\n                                                                    <g mask=\"url(#mask0)\"></g>\n                                                                </svg>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 328204,
                "end_index": 330541,
                "start_line": 6339,
                "end_line": 6356,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"step__sections\">\n                                <div class=\"section\">\n                                    <div class=\"section__header os-header\">\n                                        <svg\n                                            width=\"56\"\n                                            height=\"56\"\n                                            viewBox=\"0 0 56 56\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <circle cx=\"28\" cy=\"28\" r=\"26\" stroke=\"#E5E5E5\" stroke-width=\"2.29412\" />\n                                            <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M22.4811 37.3603L16.3636 31.3947C15.5663 30.6172 15.5663 29.3605 16.3636 28.583C17.1609 27.8055 18.4497 27.8055 19.247 28.583L23.8066 33.0293L36.6493 18.7538C37.3834 17.9186 38.6701 17.8231 39.5225 18.537C40.379 19.2529 40.4789 20.5056 39.7448 21.3388L25.4706 37.2469C25.1015 37.6685 24.5672 37.9191 24.0003 37.9409C23.3825 37.9429 22.8625 37.7341 22.4811 37.3603Z\"\n                                                fill=\"#008060\"\n                                                stroke=\"#E5E5E5\"\n                                                stroke-width=\"0.764706\"\n                                            />\n                                        </svg>\n                                        <div class=\"os-header__heading\">\n                                            <span class=\"os-order-number\"> Order #1001 </span>\n                                            <h2 class=\"os-header__title\" id=\"main-header\" tabindex=\"-1\">\n                                                Thank you {{Customer Name}}!\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245858,
                "end_index": 247957,
                "start_line": 6161,
                "end_line": 6451,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"section\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245919,
                "end_index": 245940,
                "start_line": 6162,
                "end_line": 6190,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"product-thumbnail\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325934,
                "end_index": 325965,
                "start_line": 6323,
                "end_line": 6323,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"product-thumbnail__quantity\" aria-hidden=\"true\"\n                                                                >1</span\n                                                            >\n                                                        </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 330669,
                "end_index": 330927,
                "start_line": 6358,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<th class=\"product__description\" scope=\"row\">\n                                                        <span class=\"product__description__name order-summary__emphasis\"\n                                                            >Product Name</span\n                                                        >\n                                                        <span\n                                                            class=\"product__description__variant order-summary__small-text\"\n                                                            >Variant Name</span\n                                                        >\n                                                    </th>\n                                                    <td class=\"product__quantity visually-hidden\">1</td>\n                                                    <td class=\"product__price\">\n                                                        <span class=\"order-summary__emphasis\">$42.99</span>\n                                                    </td>\n                                                </tr>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 331038,
                "end_index": 332129,
                "start_line": 6363,
                "end_line": 6376,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script>\n            !(function (f, b, e, v, n, t, s) {\n                if (f.fbq) return;\n                n = f.fbq = function () {\n                    n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments);\n                };\n                if (!f._fbq) f._fbq = n;\n                n.push = n;\n                n.loaded = !0;\n                n.version = '2.0';\n                n.queue = [];\n                t = b.createElement(e);\n                t.async = !0;\n                t.src = v;\n                s = b.getElementsByTagName(e)[0];\n                s.parentNode.insertBefore(t, s);\n            })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');\n            fbq('init', '895262111044943');\n            fbq('track', 'PageView');\n        </script>\n        <!-- End Facebook Pixel Code -->\n        <!-- Reddit Pixel -->\n        <script>\n            !(function (w, d) {\n                if (!w.rdt) {\n                    var p = (w.rdt = function () {\n                        p.sendEvent ? p.sendEvent.apply(p, arguments) : p.callQueue.push(arguments);\n                    });\n                    p.callQueue = [];\n                    var t = d.createElement('script');\n                    (t.src = 'https://www.redditstatic.com/ads/pixel.js'), (t.async = !0);\n                    var s = d.getElementsByTagName('script')[0];\n                    s.parentNode.insertBefore(t, s);\n                }\n            })(window, document);\n            rdt('init', 't2_dp3wj8bg');\n            rdt('track', 'PageVisit');\n        </script>\n        <!-- End Reddit Pixel -->\n\n        <!-- Dev HMR [START] -->\n        <script type=\"module\">\n            if (!import.meta.env || !import.meta.env.PROD) {\n                // For embedded development, the iframe loads an HTML file from the server. Normally for\n                // development, the HTML file is served by the dev server, which injects the HMR script.\n                // This script adds the HMR script to the iframe to allow HMR in embedded development.\n                const script = document.createElement('script');\n                script.setAttribute('type', 'module');\n                script.setAttribute('src', './src/dev-hmr.ts');\n                document.getElementsByTagName('head')[0].append(script);\n            }\n        </script>\n        <!-- Dev HMR [END] -->\n\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com/\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com/\" crossorigin=\"anonymous\" />\n        <link\n            href=\"https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap\"\n        />\n    </head>",
                "filename": "web/client/index.html",
                "start_index": 6232,
                "end_index": 8924,
                "start_line": 7,
                "end_line": 178,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"section__content\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248049,
                "end_index": 248079,
                "start_line": 6191,
                "end_line": 6215,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<style>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 727,
                "end_index": 734,
                "start_line": 18,
                "end_line": 18,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248120,
                "end_index": 248145,
                "start_line": 6192,
                "end_line": 6210,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<html\n    lang=\"en\"\n    dir=\"ltr\"\n    class=\"js desktop page--no-banner page--logo-main page--show page--show card-fields cors svg opacity placeholder no-touchevents displaytable display-table generatedcontent cssanimations flexbox no-flexboxtweener anyflexbox shopemoji floating-labels\"\n>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 0,
                "end_index": 289,
                "start_line": 1,
                "end_line": 6518,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"map default-background\" role=\"region\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248298,
                "end_index": 248348,
                "start_line": 6194,
                "end_line": 6194,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "</style>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 235909,
                "end_index": 235917,
                "start_line": 5953,
                "end_line": 5953,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318798,
                "end_index": 318828,
                "start_line": 6214,
                "end_line": 6214,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row content-box__row--no-padding\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248190,
                "end_index": 248249,
                "start_line": 6193,
                "end_line": 6193,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "solution_task": {
            "structured_resp": "Clarify:\nThe task is to enhance the visibility of the currently selected configuration in the checkout editor by adjusting the background color to make it stand out more. The relevant files for this task are `web/client/src/pages/checkout/checkout-editor/components/widget-list/components/selection-icon-color.tsx`, `web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx`, and `web/client/src/libs/checkout-ui/utilities/legacy/styles.css`.\n\nHypothesize:\nThe issue likely involves modifying the CSS class that sets the background color for the selected configuration element. The solution may require updating the CSS properties in the `styles.css` file or adjusting the inline styles or class assignments in the React components.\n\nExperiment:\n- Review the CSS class definitions in `web/client/src/libs/checkout-ui/utilities/legacy/styles.css` to identify the class responsible for the background color of the selected configuration element.\n- Inspect the React components `selection-icon-color.tsx` and `WidgetMenuList.tsx` to see how they apply the CSS class to the selected element.\n\nAnalyze:\nBased on the provided information, the relevant files for the task have been identified. The CSS file likely contains the class definitions that need to be updated, and the React components are where the classes are applied to the elements.\n\nResolve:\n- Open the `web/client/src/libs/checkout-ui/utilities/legacy/styles.css` file and locate the CSS class that sets the background color for the selected configuration element.\n- Update the background color value to the new, darker color code as per the requirement for improved visibility.\n- If the background color is set inline within the React components (`selection-icon-color.tsx` or `WidgetMenuList.tsx`), update the inline style or the class assignment to use the updated CSS class.\n- Ensure that the color contrast remains accessible and meets WCAG guidelines for text visibility against the background.\n- Test the changes in the checkout editor to confirm that the selected configuration element is now more visibly distinct with the darker background color.\n- Commit the changes and update the pull request with a description of the changes made for the final review before merging.",
            "response": "To enhance the user experience in the checkout editor, it's essential to make the selected configuration more visually prominent. This can be achieved by adjusting the background color to a darker shade, ensuring it stands out against other elements. The focus will be on updating the CSS properties and ensuring the changes are reflected in the relevant React components.\n\n- Locate the CSS class responsible for the background color of the selected configuration element in the `styles.css` file.\n- Modify the background color property to a darker shade that improves visibility while adhering to accessibility standards.\n- In the React components `selection-icon-color.tsx` and `WidgetMenuList.tsx`, apply the updated CSS class to the selected element.\n- Verify that the color contrast is compliant with WCAG guidelines to maintain accessibility.\n- Test the updated background color in the checkout editor to ensure the selected configuration is now more distinguishable.\n- After confirming the visual enhancement, commit the code changes and prepare a detailed pull request for review."
        },
        "snippet_processor_task": {
            "web/client/src/libs/shared/useCustomTheme.ts": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet involves setting custom theme properties based on provided color settings, potentially relevant for adjusting background colors in the checkout editor components.",
                        "snippet": {
                            "code": "newTheme.customProperties.colorSurfaceSecondary = themeSettings.checkout_sidebar_background_color;\n        newTheme.customProperties.colorSurfaceSecondaryText = hslToHex(colorText({ background: sidebarHslColor })!);\n        newTheme.customProperties.colorSurfaceSecondaryTextEmphasized = hslToHex(\n            colorTextEmphasized({ background: sidebarHslColor })!\n        );\n        newTheme.customProperties.colorSurfaceSecondaryTextSubdued = hslToHex(\n            colorTextSubdued({ background: sidebarHslColor })!\n        );\n\n        const bodyHslColor = hexToHSL(themeSettings.checkout_body_background_color);\n        newTheme.customProperties.colorCanvas = themeSettings.checkout_body_background_color;\n        newTheme.customProperties.colorCanvasText = hslToHex(colorText({ background: bodyHslColor })!);\n        newTheme.customProperties.colorCanvasTextEmphasized = hslToHex(\n            colorTextEmphasized({ background: bodyHslColor })!\n        );\n        newTheme.customProperties.colorCanvasTextSubdued = hslToHex(colorTextSubdued({ background: bodyHslColor })!);\n\n        // Inputs (text, select, radio, checkbox)",
                            "filename": "web/client/src/libs/shared/useCustomTheme.ts",
                            "start_index": 7627,
                            "end_index": 8753,
                            "start_line": 199,
                            "end_line": 216,
                            "max_line": 274,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet is relevant because it involves setting custom theme properties based on provided color settings, which is necessary for adjusting background colors in the checkout editor components as described in the task."
                },
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet focuses on theme settings and background color configurations based on transparency, with border color adjustments. Relevant for understanding theme customization and color management in the project.",
                        "snippet": {
                            "code": "if (themeSettings.checkout_input_background_color_mode === 'transparent') {\n            // Input\n            newTheme.configuration.radio.background = 'transparent';\n            newTheme.configuration.checkbox.background = 'transparent';\n            newTheme.configuration.select.background = 'transparent';\n            newTheme.configuration.textFields.background = 'transparent';\n            // newTheme.customProperties.colorSurfaceTertiaryText = hslToHex(colorText({ background: bodyHslColor })!);\n            // newTheme.customProperties.colorSurfaceTertiaryTextEmphasized = hslToHex(\n            //     colorTextEmphasized({ background: bodyHslColor })!\n            // );\n            // newTheme.customProperties.colorSurfaceTertiaryTextSubdued = hslToHex(\n            //     colorTextSubdued({ background: bodyHslColor })!\n            // );\n\n            const borderLighten = 'rgba(255, 255, 255, 0.15)';\n            const borderEmphasizedLighten = 'rgba(255, 255, 255, 0.2)';\n\n            const borderDarken = 'rgba(0, 0, 0, 0.15)';\n            const borderEmphasizedDarken = 'rgba(0, 0, 0, 0.2)';\n\n            // Border on main background\n            newTheme.customProperties.colorCanvasBorder = isLight(bodyHslColor) ? borderDarken : borderLighten;\n            newTheme.customProperties.colorCanvasBorderEmphasized = isLight(bodyHslColor)\n                ? borderEmphasizedDarken\n                : borderEmphasizedLighten;\n\n            // Border on sidebar background\n            newTheme.customProperties.colorSurfaceSecondaryBorder = isLight(sidebarHslColor)\n                ? borderDarken\n                : borderLighten;\n            newTheme.customProperties.colorSurfaceSecondaryBorderEmphasized = isLight(sidebarHslColor)\n                ? borderEmphasizedDarken\n                : borderEmphasizedLighten;\n        } else {\n            // Border on main background\n            newTheme.customProperties.colorCanvasBorder = hslToHex(colorBorder({ background: bodyHslColor })!);\n            newTheme.customProperties.colorCanvasBorderEmphasized = hslToHex(\n                colorBorderEmphasized({ background: bodyHslColor })!\n            );\n\n            // Border on sidebar background\n            newTheme.customProperties.colorSurfaceSecondaryBorder = hslToHex(\n                colorBorder({ background: sidebarHslColor })!\n            );\n            newTheme.customProperties.colorSurfaceSecondaryBorderEmphasized = hslToHex(\n                colorBorderEmphasized({ background: sidebarHslColor })!\n            );\n        }\n\n        // The font families will be loaded from the root css file so we don't need fallback fonts\n        newTheme.customProperties.typographyPrimaryFonts = `\"${themeSettings.checkout_body_font}\", sans-serif`;\n        newTheme.customProperties.typographySecondaryFonts = `\"${themeSettings.checkout_heading_font}\", sans-serif`;\n\n        return newTheme;\n    }",
                            "filename": "web/client/src/libs/shared/useCustomTheme.ts",
                            "start_index": 8762,
                            "end_index": 11662,
                            "start_line": 217,
                            "end_line": 271,
                            "max_line": 274,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet is relevant as it focuses on theme settings and background color configurations based on transparency, with border color adjustments, providing necessary context for theme customization and color management in the project."
                }
            ],
            "web/client/src/pages/checkout/checkout-branding/branding-color-palette.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Snippet provides context on the color palette settings for primary buttons and interactive elements in the checkout branding, which could be relevant for adjusting the background color of the selected configuration element.",
                        "snippet": {
                            "code": "\"Primary buttons\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.primary.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.primary.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.primary.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Interactive\" subtitle=\"Includes links and focused inputs\">",
                            "filename": "web/client/src/pages/checkout/checkout-branding/branding-color-palette.tsx",
                            "start_index": 309,
                            "end_index": 890,
                            "start_line": 8,
                            "end_line": 16,
                            "max_line": 63,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet provides context on the color palette settings for primary buttons and interactive elements in the checkout branding, which could be relevant for adjusting the background color of the selected configuration element."
                },
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Defines the structure for managing color palettes in the branding sections of the application, which could be relevant for adjusting the background color of the selected configuration element in the checkout editor.",
                        "snippet": {
                            "code": "<BrandingRow>\n                    <BrandingColorInputField\n                        label=\"Background\"\n                        field=\"designSystem.colorPalette.interactive.background\"\n                    />\n                    <BrandingColorInputField\n                        label=\"Foreground\"\n                        field=\"designSystem.colorPalette.interactive.foreground\"\n                    />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.interactive.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Main body\" subtitle=\"Left area on desktop\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.color1.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.color1.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.color1.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Secondary body\" subtitle=\"Right area on desktop (order summary)\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.color2.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.color2.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.color2.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Loading screens\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.canvas.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.canvas.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.canvas.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n            <Divider />\n            <BrandingSection title=\"Critical\" subtitle=\"Includes errors\">\n                <BrandingRow>\n                    <BrandingColorInputField label=\"Background\" field=\"designSystem.colorPalette.critical.background\" />\n                    <BrandingColorInputField label=\"Foreground\" field=\"designSystem.colorPalette.critical.foreground\" />\n                    <BrandingColorInputField label=\"Accent\" field=\"designSystem.colorPalette.critical.accent\" />\n                </BrandingRow>\n            </BrandingSection>\n        </BrandingTab>",
                            "filename": "web/client/src/pages/checkout/checkout-branding/branding-color-palette.tsx",
                            "start_index": 907,
                            "end_index": 3681,
                            "start_line": 9,
                            "end_line": 61,
                            "max_line": 63,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet defines the structure for managing color palettes in the branding sections of the application, which could be relevant for adjusting the background color of the selected configuration element in the checkout editor."
                }
            ],
            "web/client/src/libs/checkout-ui/components/Theme/context.ts": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Defines color functions for different states like interactive, info, success, warning, and critical which can be utilized for styling elements in the checkout editor components.",
                        "snippet": {
                            "code": "colorInteractiveTextHovered: ({ interactive }) =>\n        interactive?.foreground?.adjust({\n            l: (l) => l + 10,\n        }),\n    colorInteractiveTextPressed: ({ interactive }) =>\n        interactive?.foreground?.adjust({\n            l: (l) => l + 10,\n        }),\n\n    /* COLOR INFO */\n    colorInfo: ({ info }) => info?.background,\n    colorInfoDisabled: ({ info }) => colorDisabled(info),\n    colorInfoSubdued: ({ info }) => colorSubdued(info),\n    colorInfoText: ({ info }, legacy) => colorText(info, legacy),\n    colorInfoTextSubdued: ({ info }, legacy) => colorTextSubdued(info, legacy),\n    colorInfoTextEmphasized: ({ info }, legacy) => colorTextEmphasized(info, legacy),\n    colorInfoBorder: ({ info }, legacy) => colorBorder(info, legacy),\n    colorInfoBorderEmphasized: ({ info }, legacy) => colorBorderEmphasized(info, legacy),\n    colorInfoAccent: ({ info }) => info?.accent,\n\n    /* COLOR SUCCESS */\n    colorSuccess: ({ success }) => success?.background,\n    colorSuccessDisabled: ({ success }) => colorDisabled(success),\n    colorSuccessSubdued: ({ success }) => colorSubdued(success),\n    colorSuccessText: ({ success }, legacy) => colorText(success, legacy),\n    colorSuccessTextSubdued: ({ success }, legacy) => colorTextSubdued(success, legacy),\n    colorSuccessTextEmphasized: ({ success }, legacy) => colorTextEmphasized(success, legacy),\n    colorSuccessBorder: ({ success }, legacy) => colorBorder(success, legacy),\n    colorSuccessBorderEmphasized: ({ success }, legacy) => colorBorderEmphasized(success, legacy),\n    colorSuccessAccent: ({ success }) => success?.accent,\n\n    /* COLOR WARNING */\n    colorWarning: ({ warning }) => warning?.background,\n    colorWarningDisabled: ({ warning }) => colorDisabled(warning),\n    colorWarningSubdued: ({ warning }) => colorSubdued(warning),\n    colorWarningText: ({ warning }, legacy) => colorText(warning, legacy),\n    colorWarningTextSubdued: ({ warning }, legacy) => colorTextSubdued(warning, legacy),\n    colorWarningTextEmphasized: ({ warning }, legacy) => colorTextEmphasized(warning, legacy),\n    colorWarningBorder: ({ warning }, legacy) => colorBorder(warning, legacy),\n    colorWarningBorderEmphasized: ({ warning }, legacy) => colorBorderEmphasized(warning, legacy),\n    colorWarningAccent: ({ warning }) => warning?.accent,\n\n    /* COLOR CRITICAL */\n    colorCritical: ({ critical }) => critical?.background,\n    colorCriticalDisabled: ({ critical }) => colorDisabled(critical),\n    colorCriticalSubdued: ({ critical }) => colorSubdued(critical),\n    colorCriticalText: ({ critical }, legacy) => colorText(critical, legacy),\n    colorCriticalTextSubdued: ({ critical }, legacy) => colorTextSubdued(critical, legacy),\n    colorCriticalTextEmphasized: ({ critical }, legacy) => colorTextEmphasized(critical, legacy),\n    colorCriticalBorder: ({ critical }, legacy) => colorBorder(critical, legacy),\n    colorCriticalBorderEmphasized: ({ critical }, legacy) => colorBorderEmphasized(critical, legacy),",
                            "filename": "web/client/src/libs/checkout-ui/components/Theme/context.ts",
                            "start_index": 16749,
                            "end_index": 19735,
                            "start_line": 473,
                            "end_line": 523,
                            "max_line": 1029,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet defines color functions for different states like interactive, info, success, warning, and critical which can be utilized for styling elements in the checkout editor components, relevant to the task of enhancing visibility of the active selection."
                }
            ],
            "web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet showing the structure of the WidgetMenuList component in the checkout editor, including the rendering of configurations and delete functionality.",
                        "snippet": {
                            "code": "<Navigation.Item\n                                  key={value.configurations?.[0]?.id}\n                                  selected={focusedWidget.configuration === configurationIndex}\n                                  //@ts-ignore\n                                  label={\n                                      <HorizontalStack align={'space-between'} gap=\"2\">\n                                          <Text as={'p'} variant={'bodyMd'}>{`Configuration ${\n                                              configurationIndex + 1\n                                          }`}</Text>\n                                          <SidebarTag configurations={value.configurations} />\n                                          <Button\n                                              plain\n                                              destructive\n                                              icon={<Icon source={DeleteMajor as IconSource} />}\n                                              disabled={activeWidgetDynamicList.value.length === 1}\n                                              //@ts-ignore\n                                              onClick={(e) => {\n                                                  e.stopPropagation();\n                                                  setFocusedWidget((prev) => ({\n                                                      ...prev,\n                                                      index: 0,\n                                                      configuration: 0,\n                                                      step: 'list',\n                                                      splitTestVersion: getSplitTestVersionFromConfiguration(\n                                                          activeWidgetDynamicList.value?.[0]?.configurations?.[0]\n                                                      ),\n                                                  }));\n                                                  activeWidgetDynamicList.removeItem(configurationIndex);\n                                              }}\n                                          />\n                                      </HorizontalStack>\n                                  }\n                                  onClick={",
                            "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx",
                            "start_index": 3014,
                            "end_index": 5256,
                            "start_line": 97,
                            "end_line": 170,
                            "max_line": 222,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet shows the structure of the WidgetMenuList component in the checkout editor, including the rendering of configurations and delete functionality, which is directly related to the user interface section with configurations under 'Testimonials' as mentioned in the issue."
                }
            ],
            "web/client/src/libs/checkout-ui/utilities/legacy/styles.css": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The provided CSS snippet contains class names related to styling elements in the web application, which could be relevant for adjusting the background color of the selected configuration element in the checkout editor.",
                        "snippet": {
                            "code": "/* stylelint-disable block-no-empty */\n\n.Button {\n}\n\n.ButtonPrimary {\n}\n\n.ButtonSecondary {\n}\n\n.ButtonPrimary.ButtonCritical {\n}\n\n.ButtonSecondary.ButtonCritical {\n}\n\n.Surface-colorCanvas {\n}\n\n.Surface-colorSurfacePrimary {\n}\n\n.Surface-colorSurfaceSecondary {\n}\n\n.Surface-colorSurfaceTertiary {\n}\n\n.ColorCriticalAccent {\n}\n\n.Utility-defaultBorderColor {\n}\n\n.Utility-defaultTextSubduedColor {\n}\n\n.Utility-defaultTextEmphasizedColor {\n}\n\n.Utility-defaultAccentColor {\n}\n\n/* stylelint-enable block-no-empty */",
                            "filename": "web/client/src/libs/checkout-ui/utilities/legacy/styles.css",
                            "start_index": 0,
                            "end_index": 506,
                            "start_line": 1,
                            "end_line": 45,
                            "max_line": 45,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "The provided CSS snippet contains class names related to styling elements in the web application, which could be relevant for adjusting the background color of the selected configuration element in the checkout editor, directly addressing the task."
                }
            ],
            "web/client/src/libs/post-purchase-ui/components/Theme/context.ts": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Functions for adjusting color properties in the UI components are provided, which can be utilized to modify the background color of elements in the checkout editor components.",
                        "snippet": {
                            "code": "export function colorTextEmphasized(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.foreground\n        ? colorGroup?.foreground?.adjust({\n              l: (l) => (isLight(colorGroup?.foreground, legacy) ? Math.min(l + 15, 100) : l - 10),\n          })\n        : colorGroup?.background?.adjust({\n              s: (s) => (s > 50 ? s : Math.min(s + 15, 100)),\n              l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 77.5, 0) : 98.3),\n          });\n}\n\nexport function colorTextSubdued(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.foreground\n        ? colorGroup?.foreground?.adjust({\n              l: (l) => (isLight(colorGroup?.foreground, legacy) ? Math.max(l - 35, 0) : l + 43.2),\n          })\n        : colorGroup?.background?.adjust({\n              s: (s) => (s > 50 ? Math.max(s - 55, 0) : s),\n              l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 49.9, 10) : Math.min(l + 63.2, 90)),\n          });\n}\n\nexport function colorActionHovered(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionPressed(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionText(colorGroup?: ColorGroup, legacy?: boolean) {\n    return (\n        colorGroup?.foreground ??\n        colorGroup?.background?.adjust({\n            l: () => (isLight(colorGroup?.background, legacy) ? 4 : 96),\n        })\n    );\n}\n\nexport function colorActionTextHovered(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nexport function colorActionTextPressed(colorGroup?: ColorGroup) {\n    return colorGroup?.background?.adjust({\n        l: (l) => l - 10,\n    });\n}\n\nfunction colorsFromOverrides(overrideColors: Partial<RoleColorOverrides>) {\n    return (Object.keys(overrideColors) as (keyof RoleColorOverrides)[]).reduce<Partial<RoleColors>>((colors, key) => {\n        const colorOrGroup = overrideColors[key];\n\n        if (colorOrGroup == null) return colors;\n\n        const { background, foreground, accent } = colorOrGroup;\n\n        return {\n            ...colors,\n            [key]: {\n                background: background ? normalizeColor(background) : undefined,\n                foreground: foreground ? normalizeColor(foreground) : undefined,\n                accent: accent ? normalizeColor(accent) : undefined,\n            },\n        };\n    }, {});\n}\n\nexport function colorBorder(colorGroup?: ColorGroup, legacy?: boolean) {\n    return colorGroup?.background?.adjust({\n        s: (s) => (s > 50 ? Math.max(s - 15, 0) : s),\n        l: (l) => (isLight(colorGroup?.background, legacy) ? Math.max(l - 8.8, 0) : Math.min(l + 11.3, 90)),\n    });\n}",
                            "filename": "web/client/src/libs/post-purchase-ui/components/Theme/context.ts",
                            "start_index": 5831,
                            "end_index": 8651,
                            "start_line": 206,
                            "end_line": 984,
                            "max_line": 984,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet provides functions for adjusting color properties in UI components, which can be utilized to modify the background color of elements in the checkout editor components, relevant to the task at hand."
                }
            ]
        },
        "bouncer_response": {
            "score": 4,
            "criteria": "RESPONSES that offer some actionable advice but are incomplete or partially relevant should score between 4 and 6.",
            "supporting_evidence": "The RESPONSE provides a structured approach to addressing the task of making the selected configuration background darker in the checkout editor. It outlines steps to locate and modify the CSS class, apply changes to React components, and ensure accessibility standards are met. The RESPONSE also includes code snippets that could be relevant to the task. However, the RESPONSE does not directly address the specific issue of the GitHub pull request mentioned in the PROMPT, which already contains the necessary changes to the CSS file. The RESPONSE seems to suggest starting the process from scratch rather than reviewing and merging the existing pull request. Additionally, the RESPONSE does not provide specific color codes or examples, which would have been more actionable. The RESPONSE also includes links to various code snippets without explaining how exactly they relate to the task at hand, which reduces the overall utility of the advice.",
            "clarification_questions": "NONE"
        },
        "end_time": 1714259449.695801,
        "result": "Doesn't seem like we have fully grasped all the specifics of this ticket \ud83d\ude10.                   But we've outlined some ideas that might help you get started:\n\nTo enhance the user experience in the checkout editor, it's essential to make the selected configuration more visually prominent. This can be achieved by adjusting the background color to a darker shade, ensuring it stands out against other elements. The focus will be on updating the CSS properties and ensuring the changes are reflected in the relevant React components.\n\n- Locate the CSS class responsible for the background color of the selected configuration element in the `styles.css` file.\n- Modify the background color property to a darker shade that improves visibility while adhering to accessibility standards.\n- In the React components `selection-icon-color.tsx` and `WidgetMenuList.tsx`, apply the updated CSS class to the selected element.\n- Verify that the color contrast is compliant with WCAG guidelines to maintain accessibility.\n- Test the updated background color in the checkout editor to ensure the selected configuration is now more distinguishable.\n- After confirming the visual enhancement, commit the code changes and prepare a detailed pull request for review.\n\n### Code snippets to check\n\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [libs](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs) \u2192 [shared](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/shared)- [Lines 199 - 216](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/shared/useCustomTheme.ts#L199-L216)\n\n This snippet is relevant because it involves setting custom theme properties based on provided color settings, which is necessary for adjusting background colors in the checkout editor components as described in the task. \n\n\n   - [Lines 217 - 271](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/shared/useCustomTheme.ts#L217-L271)\n\n This snippet is relevant as it focuses on theme settings and background color configurations based on transparency, with border color adjustments, providing necessary context for theme customization and color management in the project.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-branding](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-branding)- [Lines 8 - 16](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-branding/branding-color-palette.tsx#L8-L16)\n\n This snippet provides context on the color palette settings for primary buttons and interactive elements in the checkout branding, which could be relevant for adjusting the background color of the selected configuration element. \n\n\n   - [Lines 9 - 61](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-branding/branding-color-palette.tsx#L9-L61)\n\n This snippet defines the structure for managing color palettes in the branding sections of the application, which could be relevant for adjusting the background color of the selected configuration element in the checkout editor.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [libs](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs) \u2192 [checkout-ui](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/checkout-ui) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/checkout-ui/components) \u2192 [Theme](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/checkout-ui/components/Theme)- [Lines 473 - 523](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/checkout-ui/components/Theme/context.ts#L473-L523)\n\n This snippet defines color functions for different states like interactive, info, success, warning, and critical which can be utilized for styling elements in the checkout editor components, relevant to the task of enhancing visibility of the active selection.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-editor-v2](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components) \u2192 [containers](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components/containers)- [Lines 97 - 170](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components/containers/WidgetMenuList.tsx#L97-L170)\n\n This snippet shows the structure of the WidgetMenuList component in the checkout editor, including the rendering of configurations and delete functionality, which is directly related to the user interface section with configurations under 'Testimonials' as mentioned in the issue.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [libs](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs) \u2192 [checkout-ui](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/checkout-ui) \u2192 [utilities](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/checkout-ui/utilities) \u2192 [legacy](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/checkout-ui/utilities/legacy)- [Lines 1 - 45](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/checkout-ui/utilities/legacy/styles.css#L1-L45)\n\n The provided CSS snippet contains class names related to styling elements in the web application, which could be relevant for adjusting the background color of the selected configuration element in the checkout editor, directly addressing the task.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [libs](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs) \u2192 [post-purchase-ui](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/post-purchase-ui) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/post-purchase-ui/components) \u2192 [Theme](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/post-purchase-ui/components/Theme)- [Lines 206 - 984](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/libs/post-purchase-ui/components/Theme/context.ts#L206-L984)\n\n This snippet provides functions for adjusting color properties in UI components, which can be utilized to modify the background color of elements in the checkout editor components, relevant to the task at hand."
    }
}