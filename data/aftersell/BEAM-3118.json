{
    "id": "BEAM-3118",
    "repo_name": "testbed/aftersell",
    "title": "Fix styling in upsell product modal",
    "body": "\n[IMG_1]\n\n* The discount tag should only be as wide as the text + icon. It should not be full width\n* The size of \"Discount Settings\" and \"Product Settings\" should be equal\n* Change capitalization to match the rest of the app\n  * Edit upsell product\n  * Discount settings\n  * Product settings\n---\nGlossary:\nimage_2: The image displays a modal titled \"Edit Upsell Product\" with various settings grouped under two headings: \"Discount Settings\" and \"Product Settings.\" Under \"Discount Settings,\" there is a toggle labeled \"Active discount\" with an information icon next to it. Below the toggle, there is a tag with a dark background and white text that reads \"SAVE (50% off)\" with a close icon (X) on the right side. This tag extends the full width of the modal. There is also a checked checkbox labeled \"Use 'Compare at price'.\"\n\nUnder \"Product Settings,\" there are two checkboxes. The first, unchecked, is labeled \"Hide offer if product already in cart?\" The second, also unchecked, is labeled \"Show quantity selector.\" Below these checkboxes, there are two text input fields. The first is labeled \"Custom product title\" with placeholder text \"The Scout Skincare Kit.\" The second is labeled \"Product description\" with placeholder text \"Add a description for your upsell.\"\n\nAt the bottom of the modal, there are two buttons aligned to the right: \"Cancel\" and \"Confirm,\" both with text in uppercase. The \"Confirm\" button is styled with a darker background, indicating it is the primary action.\ngithub_pr_1: https://github.com/beam-commerce/aftersell/pull/1103\n\n",
    "classification": "bug",
    "state": "closed",
    "repo_link": "https://github.com/testbed/aftersell.git",
    "requested_commit": null,
    "issue_tracker_identifier": "",
    "ai_cost": {
        "issue_classifier": 0.000334,
        "issue_summarizer": 0.01284,
        "search_embedding": 4.693e-05,
        "documentation_agent": 0.00743,
        "repo_summary": 0.096847,
        "issue_star_solver": 0.14494549999999998,
        "snippet_processor": 0.02356,
        "bouncer": 0.03991
    },
    "attachments": [
        {
            "title": "[BEAM-3118] - Fix upsell modal styling",
            "url": "https://github.com/beam-commerce/aftersell/pull/1103",
            "content": "",
            "placeholder_tag": "github_pr_1",
            "content_type": "ExternalAssetsType.GITHUB_PR"
        }
    ],
    "inline_assets": [
        {
            "title": "",
            "url": "https://uploads.linear.app/a4f50fbf-738c-4ae7-b7ca-dc198278934f/922545e1-07ed-4e57-948a-996b2a07b83c/104f843e-9123-4912-aa67-5111d0bbdbd2",
            "content": "",
            "placeholder_tag": "image_2",
            "content_type": "ExternalAssetsType.IMAGE"
        }
    ],
    "linked_issue_ids": [],
    "comments": [],
    "issue_summary": "Error Messages: None provided.\n\nFunction and Variable Names:\n- `discount tag`\n- `Discount Settings`\n- `Product Settings`\n- `Edit upsell product`\n- `Active discount`\n- `SAVE (50% off)`\n- `Use 'Compare at price'`\n- `Hide offer if product already in cart?`\n- `Show quantity selector`\n- `Custom product title`\n- `Product description`\n- `Cancel` button\n- `Confirm` button\n\nTechnical Descriptions:\n- Discount tag width should match the text and icon, not full width.\n- \"Discount Settings\" and \"Product Settings\" headings should have equal size.\n- Capitalization of \"Edit upsell product,\" \"Discount settings,\" and \"Product settings\" should be consistent with the rest of the app.\n\nOutput Format:\n- Adjust CSS for `.discount-tag` to match width of content.\n- Ensure CSS consistency in font size for `.discount-settings-header` and `.product-settings-header`.\n- Update text capitalization in modal to match app-wide style guide.\n\nRelevant Links:\n- GitHub PR: https://github.com/beam-commerce/aftersell/pull/1103",
    "repo_summary": "The software project is a complex web application divided into multiple directories such as `web`, `extensions`, and `theme-app-extension-src`. It utilizes TypeScript, React, and GraphQL extensively. The project includes components for checkout upsell discounts, post-purchase extensions, and various widgets for product recommendations and thank you pages. The project follows a structured setup with detailed scripts in the `package.json` files for different modules. The codebase includes React components for managing checkout discount settings, product content editing, and offer cards. Additionally, there are detailed HTML snippets for various components like the thank you page, product thumbnails, and order summaries. The project heavily relies on Shopify APIs and tools for app development and deployment.",
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1714388598.6857889,
        "classification": "bug",
        "initial_code_snippets": [
            {
                "code": "=\"Show style settings\">\n                    <VerticalStack gap=\"2\">\n                        <Checkbox\n                            label=\"Show border around upsells\"\n                            checked={content.value.bordered}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    bordered: val,\n                                });\n                            }}\n                        />\n                        <Checkbox\n                            label=\"Use outlined button\"\n                            checked={content.value.buttonStyle === 'secondary'}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    buttonStyle: val ? 'secondary' : 'primary',\n                                });\n                            }}\n                        />\n\n                        {content.value.upsellType === 'single' && (\n                            <Checkbox\n                                label={'Use full width button?'}\n                                checked={content.value.fullWidthButton}\n                                onChange={(val) => {\n                                    content.onChange({\n                                        ...content.value,\n                                        fullWidthButton: val,\n                                    });\n                                }}\n                            />\n                        )}\n                        {content.value.upsellType === 'multi' && (\n                            <Select\n                                label=\"Layout Direction\"\n                                options={[\n                                    { label: 'Horizontal (Scrollable)', value: 'horizontal' },\n                                    { label: 'Vertical', value: 'vertical' },\n                                ]}\n                                value={content.value.direction}\n                                onChange={(val: 'horizontal' | 'vertical') => {\n                                    content.onChange({\n                                        ...content.value,\n                                        direction: val,\n                                    });\n                                }}\n                            />\n                        )}\n                    </VerticalStack>\n                </ShowAdvanced>\n            </VerticalStack>\n\n            <Modal\n                title=\"Edit Upsell Product\"\n                open={editingItem !== null}\n                onClose={() => setEditingItem(null)}\n                primaryAction={{\n                    content: 'Confirm',\n                    onAction: ()",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                "start_index": 22668,
                "end_index": 25517,
                "start_line": 517,
                "end_line": 586,
                "max_line": 742,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Card>\n                <HorizontalStack align=\"space-between\" blockAlign=\"center\">\n                    <HorizontalStack gap=\"2\">\n                        <Thumbnail source={image} size=\"large\" alt=\"Product Image\" />\n                        <VerticalStack gap=\"1\">\n                            <Text variant=\"headingMd\" as=\"h2\">\n                                {customTitle || cleanProductTitle(title)}\n                            </Text>\n                            <OfferDiscountSettings\n                                displayMode=\"minimal\"\n                                checkoutDiscountRuleId={checkoutDiscountRuleId}\n                                setCheckoutDiscountRuleId={(newRuleId) => {\n                                    handleOfferChange(\n                                        { offer: { _id: offerId } },\n                                        {\n                                            ...offerSettings,\n                                            discount: {\n                                                ...offerSettings.discount,\n                                                checkoutDiscountRuleId: newRuleId,\n                                            },\n                                        }\n                                    );\n                                }}\n                            />\n                            {!!offerTriggers && (\n                                <Text variant=\"bodyMd\" as=\"span\" color=\"subdued\">\n                                    {(\n                                        [\n                                            { label: 'Show for all customers', value: 'showToAllCustomersTrigger' },\n                                            {\n                                                label: 'Trigger for product/collection',\n                                                value: 'productAndOrCollectionTrigger',\n                                            },\n                                        ] as const\n                                    ).find(({ value }) => offerTriggers?.[value]?.isEnabled)?.label || ''}\n                                </Text>\n                            )}\n                        </VerticalStack>\n                    </HorizontalStack>\n                    <ButtonGroup>\n                        <VerticalStack inlineAlign=\"center\" align=\"end\" gap=\"5\">\n                            <Button onClick={handleEditOffer}>Edit Offer</Button>\n                            <Button plain destructive onClick={removeOffer}>\n                                Remove Offer\n                            </Button>\n                        </VerticalStack>\n                    </ButtonGroup>\n                </HorizontalStack>\n\n                <Modal\n                    open={editOfferActive}\n                    onClose={handleEditOffer}\n                    title=\"Edit Offer\"\n                    primaryAction={{\n                        content: 'Confirm' as string,\n                        onAction:",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-card.tsx",
                "start_index": 2957,
                "end_index": 5943,
                "start_line": 90,
                "end_line": 145,
                "max_line": 218,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\"headingMd\" as=\"h2\">\n                Upsell Type\n            </Text>\n            <Select\n                label=\"Select upsell type\"\n                options={[\n                    { label: 'Single product', value: 'single' },\n                    { label: 'Multi product', value: 'multi' },\n                    { label: 'Checkmark', value: 'checkmark' },\n                ]}\n                {...upsellType}\n                onChange={handleConfigChange('upsellType', upsellType.onChange)}\n            />\n            {upsellType.value !== 'checkmark' && (\n                <Checkbox\n                    label={upsellType.value === 'single' ? 'Use full width button?' : 'Stack upsells vertically?'}\n                    {...asChoiceField(isUpsellPositionOption)}\n                    onChange={handleConfigChange('isUpsellPositionOption', isUpsellPositionOption.onChange)}\n                />\n            )}\n            <HorizontalStack gap=\"2\" blockAlign=\"center\" align=\"space-between\">\n                <Text variant=\"headingMd\" as=\"h2\">\n                    Configure upsells\n                </Text>\n                {widgetData?.offers?.length > 0 && (\n                    <Button plain onClick={managePriorityHandle}>\n                        Manage priority\n                    </Button>\n                )}\n            </HorizontalStack>\n            {renderOffers()}\n            <Button fullWidth primary onClick={() => setProductModal(true)}>\n                Add upsell\n            </Button>\n            <VerticalStack gap=\"2\">\n                <Text variant=\"headingMd\" as=\"h2\">\n                    Offer settings\n                </Text>\n                <TextField\n                    autoComplete={'off'}\n                    label=\"Offer title\"\n                    {...offerTitle}\n                    onChange={handleConfigChange('offerTitle', offerTitle.onChange)}\n                />\n                <Checkbox\n                    label=\"Show border?\"\n                    {...asChoiceField(isShowBorder)}\n                    onChange={handleConfigChange('isShowBorder', isShowBorder.onChange)}\n                />\n                <Checkbox\n                    label=\"Use outlined button?\"\n                    {...asChoiceField(useOutlinedButton)}\n                    onChange={handleConfigChange('useOutlinedButton', useOutlinedButton.onChange)}\n                />\n                {upsellType.value !== 'checkmark' && (\n                    <Checkbox\n                        label=\"Load new offers after an offer is accepted?\"\n                        {...asChoiceField(continuouslyLoadOffers)}\n                        onChange={handleConfigChange('continuouslyLoadOffers', continuouslyLoadOffers.onChange)}\n                    />\n                )}\n                {upsellType.value === 'multi' && (\n                    <VerticalStack gap=\"2\">",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/upsell-settings.tsx",
                "start_index": 8305,
                "end_index": 11140,
                "start_line": 186,
                "end_line": 248,
                "max_line": 304,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{maxDiscount / 2}% off\n                            </Text>\n                            .\n                        </List.Item>\n                        <List.Item>\n                            Upsell #2: If the customer accepts the first offer, we will automatically recommend a\n                            multi-product offer of 4 products where they can accept 1 at{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount}% off\n                            </Text>{' '}\n                            (this uses Shopify's product recommendation API).\n                        </List.Item>\n                        <List.Item>\n                            Downsell: If the customer declines the first offer, we will give them one more chance to\n                            accept the same product except this time at a higher discount of{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount}% off\n                            </Text>\n                            .\n                        </List.Item>\n                    </List>\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        After the 1-click offers, customers are redirected to the thank you page. This is an opportunity\n                        to further generate conversions:\n                    </Text>\n                    <List spacing=\"loose\">\n                        <List.Item>\n                            Storewide Popup Discount: Offer{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount / 2}% off\n                            </Text>{' '}\n                            your entire store's catalog for only 20 minutes.\n                        </List.Item>\n                    </List>\n                    {hasTyPageExtensibilityAccess && (\n                        <Banner title=\"Thank you page extensibility\" status=\"warning\">\n                            <Text as=\"p\">\n                                Your store is eligible to use Shopify UI extensions on the thank you page. The Storewide\n                                Popup Discount is only supported using AfterSell's script tags and will not be shown to\n                                customers if you{' '}\n                                <Link\n                                    url={`https://${myshopify_domain}/admin/settings/checkout#upgradestatus`}\n                                    target=\"_blank\"\n                                >\n                                    have thank you page extensibility enabled\n                                </Link>\n                                .\n                            </Text>\n                        </Banner>\n                    )}\n                </VerticalStack>\n            </Modal.Section>\n            <Modal.Section>\n                <HorizontalStack align=\"end\" blockAlign=\"center\" gap=\"4\">",
                "filename": "web/client/src/pages/funnels/funnels-create.page.tsx",
                "start_index": 11579,
                "end_index": 14544,
                "start_line": 255,
                "end_line": 308,
                "max_line": 345,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "3\">\n                    <TextField label={''} min={0} type=\"number\" {...discount.dValue} autoComplete={'off'} />\n                    <DiscountSelect\n                        typeFields={discount.dType}\n                        valueFields={discount.dValue}\n                        currency={user?.currentUser?.currency}\n                    />\n                    <Checkbox label={`Use \"Compare at price\"`} {...asChoiceField(discount.compareAtPrice)} />\n                    <Divider />\n                    {tyPageOrderMergingEnabled &&\n                        orderEditBehaviour &&\n                        orderEditBehaviour.value === OrderEditBehaviourEnum.EditOriginalOrder && (\n                            <Banner status=\"info\" title=\"Order modification is active\">\n                                Due to Shopify limitations, the original shipping cost of an order will be preserved\n                                after the upsell item is added, as though those items had free shipping.\n                            </Banner>\n                        )}\n                    <Checkbox\n                        label=\"Free Shipping\"\n                        {...asChoiceField(freeShipping)}\n                        disabled={\n                            tyPageOrderMergingEnabled &&\n                            orderEditBehaviour?.value === OrderEditBehaviourEnum.EditOriginalOrder\n                                ? true\n                                : undefined\n                        }\n                    />\n                    {freeShipping.value && (\n                        <ShowAdvanced name=\"Show advanced free shipping display\">\n                            <VerticalStack gap=\"3\">\n                                <Checkbox\n                                    label='Show \"Free Shipping\" badge'\n                                    {...asChoiceField(showFreeShippingBadge)}\n                                />\n\n                                <Text as=\"h3\" variant=\"bodyMd\">\n                                    Free shipping badge\n                                </Text>\n                                <RichTextEditor\n                                    editorState={richTextEditor.freeShippingBadge.value}\n                                    onChange={(editorState: EditorState, outputHtml: string) => {\n                                        richTextEditor.freeShippingBadge.onChange(editorState);\n                                        freeShippingBadge.onChange(outputHtml);\n                                    }}\n                                    isTYPage={true}\n                                />\n                            </VerticalStack>\n                        </ShowAdvanced>\n                    )}\n                </VerticalStack>\n            </SectionSettings>\n            <SectionSettings name={'General settings'} icon={SettingsMajor as IconSource}>\n                <VerticalStack gap=\"3\">\n                    <Text as=\"h3\" variant=\"bodyMd",
                "filename": "web/client/src/pages/funnels-ty-page/components/product-recommendation-widget.tsx",
                "start_index": 20005,
                "end_index": 22969,
                "start_line": 216,
                "end_line": 570,
                "max_line": 634,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "() => onSaveChange(),\n                    }}\n                >\n                    <Modal.Section>\n                        <Triggers triggers={offerTriggers} onTriggersChange={onTriggersChange} />\n                    </Modal.Section>\n                    <Modal.Section>\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingMd\" as=\"h2\">\n                                Discount Settings\n                            </Text>\n                            <OfferDiscountSettings\n                                displayMode=\"full\"\n                                checkoutDiscountRuleId={checkoutDiscountRuleId}\n                                setCheckoutDiscountRuleId={(newRuleId) =>\n                                    setOfferSettings((prevState) => ({\n                                        ...prevState,\n                                        discount: {\n                                            ...prevState.discount,\n                                            checkoutDiscountRuleId: newRuleId,\n                                        },\n                                    }))\n                                }\n                            />\n                            <div className=\"as-admin-setting\">\n                                <Checkbox\n                                    label={compareAtPrice?.label}\n                                    checked={offerDiscount?.compareAtPrice}\n                                    onChange={(data) => {\n                                        setOfferSettings((prevState) => ({\n                                            ...prevState,\n                                            discount: {\n                                                ...prevState.discount,\n                                                compareAtPrice: data,\n                                            },\n                                        }));\n                                    }}\n                                />\n                            </div>\n                        </VerticalStack>\n                    </Modal.Section>\n                    <Modal.Section>\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingMd\" as=\"h2\">\n                                Product Settings\n                            </Text>\n                            <Checkbox\n                                label=\"Hide offer if product already in cart?\"\n                                checked={offerSettings?.hideIfAlreadyInCart}\n                                onChange={(e) => handleChange('hideIfAlreadyInCart', e)}\n                            /",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-card.tsx",
                "start_index": 5944,
                "end_index": 8596,
                "start_line": 145,
                "end_line": 209,
                "max_line": 218,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "const discountDescription = useMemo(() => {\n        if (multiInfo.isMulti) return null;\n\n        const { value, type } = discount || {};\n        if (value > 0) {\n            switch (type) {\n                case DISCOUNT_TYPES.PERCENTAGE:\n                    return `${value}% discount`;\n                case DISCOUNT_TYPES.FIXED_AMOUNT:\n                    return `${formatCurrency({\n                        amount: Number(value),\n                        formatString: moneyFormatWithoutCents,\n                    })} discount`;\n                default:\n                    return 'No discount';\n            }\n        }\n        return 'No discount';\n    }, [discount, moneyFormatWithoutCents, multiInfo.isMulti]);\n\n    const shippingDescription = useMemo(() => {\n        const { value, type } = shipping || {};\n        switch (type) {\n            case SHIPPING_TYPES.FREE:\n                return 'Free shipping';\n            case SHIPPING_TYPES.CHARGE:\n                return `${formatCurrency({ amount: Number(value), formatString: moneyFormatWithoutCents })} shipping`;\n            default:\n                return null;\n        }\n    }, [shipping, moneyFormatWithoutCents]);\n\n    return (\n        <Box paddingInlineStart=\"3\" paddingInlineEnd=\"3\" paddingBlockStart=\"3\" paddingBlockEnd=\"3\">\n            <HorizontalStack align=\"space-between\" blockAlign=\"start\">\n                <div style={{ cursor: 'pointer', flexGrow: '1' }} onClick={onEditOffer}>\n                    <HorizontalStack gap=\"3\" align=\"start\" blockAlign=\"start\">\n                        {productLoading ? (\n                            <SkeletonThumbnail />\n                        ) : (\n                            <Thumbnail alt={product?.images?.[0]?.alt || ''} source={product?.images?.[0]?.src || ''} />\n                        )}\n\n                        <VerticalStack>\n                            {productLoading ? (\n                                <SkeletonDisplayText size={'small'} />\n                            ) : (\n                                <Box width={'195px'}>\n                                    <Text truncate as=\"span\" fontWeight=\"semibold\">\n                                        {product?.title}\n                                    </Text>\n                                </Box>\n                            )}\n\n                            {shippingDescription && (\n                                <HorizontalStack align=\"start\" gap=\"1\">\n                                    <Icon source={ShipmentMajor as IconSource} color=\"subdued\" />\n                                    <Text as=\"span\" color=\"subdued\">\n                                        {shippingDescription}\n                                    </Text>\n                                </HorizontalStack>\n                            )}\n                            {discountDescription && (",
                "filename": "web/client/src/pages/funnels/components/funnel-steps/offer-card/offer-card-product-content.tsx",
                "start_index": 2294,
                "end_index": 5134,
                "start_line": 66,
                "end_line": 128,
                "max_line": 193,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Text as=\"h4\" fontWeight=\"semibold\">\n                                                Start from scratch\n                                            </Text>\n                                        }\n                                        helpText=\"Use our simple editor to create a customized experience.\"\n                                        checked={startFrom === 'scratch'}\n                                        id=\"scratch\"\n                                        name=\"startFrom\"\n                                        onChange={handleFunnelChoice}\n                                    />\n                                </Card>\n                            </VerticalStack>\n                        </VerticalStack>\n                    </Card>\n                    <HorizontalStack align=\"end\">\n                        <Button\n                            primary\n                            onClick={() => {\n                                onSaveAndNext();\n                            }}\n                            loading={loading}\n                        >\n                            {buttonText}\n                        </Button>\n                    </HorizontalStack>\n                </VerticalStack>\n            </Page>\n        </>\n    );\n};\n\nconst UpsellMachineDetails = ({\n    open,\n    onClose,\n    maxDiscount,\n    setMaxDiscount,\n    onSave,\n}: Pick<ModalProps, 'open' | 'onClose'> & {\n    maxDiscount: number;\n    setMaxDiscount: Dispatch<SetStateAction<number>>;\n    onSave: () => void;\n}) => {\n    const {\n        currentUser: { myshopify_domain },\n        hasTyPageExtensibilityAccess,\n    } = useCurrentUser();\n\n    return (\n        <Modal title=\"Maximize AOV with the Upsell Machine\" open={open} onClose={onClose}>\n            <Modal.Section>\n                <VerticalStack gap=\"3\">\n                    <Banner status=\"info\">\n                        This template can be further customized even after this option is selected.\n                    </Banner>\n                    <Text variant=\"headingSm\" as=\"p\">\n                        The Upsell Machine funnel was made to maximize AOV for your post purchase offers and thank you\n                        page.\n                    </Text>\n\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Right after the customer completes their purchase, they will be shown a 1-click offer. This\n                        offer does not require the customer to re-enter their payment info and is added to their order\n                        with one click. In total, customers will see two 1-click offers per order:\n                    </Text>\n                    <List spacing=\"loose\">\n                        <List.Item>\n                            Upsell #1: Customers will be offered one more of the item they just bought (most expensive\n                            item in their cart) at{' '}\n                            <Text variant=\"headingSm\" as=\"span\">",
                "filename": "web/client/src/pages/funnels/funnels-create.page.tsx",
                "start_index": 8601,
                "end_index": 11546,
                "start_line": 168,
                "end_line": 283,
                "max_line": 345,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": ">\n                            <HorizontalStack gap=\"2\">\n                                <Button onClick={() => setIsModalOpen(true)}>\n                                    {discountTarget.collectionIds.value.length\n                                        ? `Edit selection (${discountTarget.collectionIds.value.length})`\n                                        : 'Select collections'}\n                                </Button>\n                                {!!discountTarget.collectionIds.value?.length && (\n                                    <Button\n                                        destructive\n                                        plain\n                                        onClick={() => {\n                                            discountTarget.collectionIds.onChange([]);\n                                            discountTarget.collectionIds.setError('Select at least 1 collection');\n                                        }}\n                                    >\n                                        Clear\n                                    </Button>\n                                )}\n                            </HorizontalStack>\n                            {!!discountTarget.collectionIds.error && (\n                                <InlineError message={discountTarget.collectionIds.error} fieldID=\"\" />\n                            )}\n                            <ProductSelectModal\n                                isOpen={isModalOpen}\n                                preSelectedCollections={\n                                    discountTarget.collectionIds.value?.length\n                                        ? discountTarget.collectionIds.value\n                                              .map((id) => ({ id }))\n                                              .map(formatCollectionToGQLCollection)\n                                        : []\n                                }\n                                collectionLevel={SelectionLevelEnum.MULTIPLE}\n                                onClose={() => setIsModalOpen(false)}\n                                onSave={({ collections }) => {\n                                    const updatedCollectionIds = (collections || []).map(({ id }) =>\n                                        getIdFromGqlId(id)\n                                    );\n                                    discountTarget.collectionIds.onChange(updatedCollectionIds);\n                                    if (!updatedCollectionIds.length) {\n                                        discountTarget.collectionIds.setError(COLLECTION_IDS_ERROR);\n                                    }\n                                    setIsModalOpen(false);\n                                }}\n                            />\n                        </>\n                    )}\n                </VerticalStack>\n            </SectionSettings>\n            <SectionSettings name={'Button settings'} icon={ButtonMinor as IconSource}>\n                <VerticalStack gap=",
                "filename": "web/client/src/pages/funnels-ty-page/components/popup-timer-widget.tsx",
                "start_index": 11094,
                "end_index": 14091,
                "start_line": 34,
                "end_line": 329,
                "max_line": 342,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Checkbox label=\"Show quantity selector\" {...asChoiceField(showQuantity)} />\n                            <TextField\n                                autoComplete={'off'}\n                                label={'Custom product title'}\n                                placeholder={'Default product title'}\n                                value={customTitle.value.text || `${fullProduct.cuwp_product_title}`}\n                                onChange={(val) =>\n                                    customTitle.onChange({\n                                        ...customTitle.value,\n                                        text: val,\n                                    })\n                                }\n                            />\n                            <TextField\n                                autoComplete={'off'}\n                                label={'Product description'}\n                                placeholder={'Add a description for your upsell'}\n                                value={customDescription.value.text}\n                                onChange={(val) =>\n                                    customDescription.onChange({\n                                        ...customDescription.value,\n                                        text: val,\n                                    })\n                                }\n                            />\n                        </VerticalStack>\n                    );\n                })()}\n            </Modal>\n\n            <PriorityModal\n                open={priorityModal}\n                onClose={() => {\n                    list.reset();\n                    setPriorityModal(false);\n                }}\n                dynamicList={list}\n                onSave={() => {\n                    onSave();\n                    setPriorityModal(false);\n                }}\n                Item={({ it",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                "start_index": 28117,
                "end_index": 29983,
                "start_line": 636,
                "end_line": 677,
                "max_line": 742,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "=> {\n                        onSave();\n                        setEditingItem(null);\n                    },\n                }}\n                secondaryActions={[\n                    {\n                        content: 'Cancel',\n                        onAction: () => {\n                            list.reset();\n                            setEditingItem(null);\n                        },\n                    },\n                ]}\n                sectioned\n            >\n                {(() => {\n                    if (editingItem === null || !list.fields[editingItem]) return null;\n\n                    const field = list.fields[editingItem];\n\n                    const { customDescription, hideIfAlreadyInCart, discount, customTitle, showQuantity } = field;\n                    const fullProduct = getFullProductFromField(field, fullProducts);\n                    const showDiscount = isSpecificProductOfferField(field);\n\n                    return (\n                        <VerticalStack gap=\"2\">\n                            <Text as=\"h3\" variant=\"headingSm\">\n                                Discount Settings\n                            </Text>\n                            {showDiscount && (\n                                <OfferDiscountSettings\n                                    displayMode=\"full\"\n                                    checkoutDiscountRuleId={discount.value.checkoutDiscountRuleId}\n                                    setCheckoutDiscountRuleId={(newRuleId) =>\n                                        discount.onChange({\n                                            ...discount.value,\n                                            checkoutDiscountRuleId: newRuleId,\n                                        })\n                                    }\n                                />\n                            )}\n\n                            <Checkbox\n                                label='Use \"Compare at price\"'\n                                checked={discount.value?.compareAtPrice}\n                                onChange={(value) => discount.onChange({ ...discount.value, compareAtPrice: value })}\n                            />\n                            <Divider />\n                            <Text as=\"h3\" variant=\"headingMd\">\n                                Product Settings\n                            </Text>\n\n                            <Checkbox\n                                label={'Hide offer if product already in cart?'}\n                                {...asChoiceField(hideIfAlreadyInCart)}\n                            />",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                "start_index": 25518,
                "end_index": 28087,
                "start_line": 50,
                "end_line": 692,
                "max_line": 742,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { formatCheckoutDiscountRuleName } from '#aftersell/common/checkout-discount-rules';\nimport {\n    ActionList,\n    Button,\n    ButtonGroup,\n    Icon,\n    Popover,\n    Spinner,\n    Tag,\n    TextField,\n    Tooltip,\n    Text,\n    VerticalStack,\n    HorizontalStack,\n    Card,\n    Divider,\n    IconSource,\n} from '@shopify/polaris';\nimport { CashDollarMinor, DiscountsMinor, InfoMinor, PlusMinor } from '@shopify/polaris-icons';\nimport { Formik, FormikHelpers } from 'formik';\nimport { isEqual } from 'lodash';\nimport React, { useMemo, useState } from 'react';\n//@ts-ignore\nimport * as Yup from 'yup';\nimport { CheckoutDiscountRule, CheckoutDiscountRuleAmountType } from '../../../../types';\nimport { useCheckoutDiscountRules } from '../../../../hooks/useCheckoutDiscountRules';\nimport { useCreateCheckoutDiscountRule } from '../../../../hooks/useCreateCheckoutDiscountRule';\n\ninterface UpsellDiscountSettingsProps {\n    displayMode: 'full' | 'minimal';\n    checkoutDiscountRuleId: string | undefined;\n    setCheckoutDiscountRuleId: (id: string | undefined) => void;\n}\n\ntype CheckoutDiscountRuleFormValues = Omit<CheckoutDiscountRule, '_id' | 'shop'>;\n\nconst INITIAL_VALUES: CheckoutDiscountRuleFormValues = {\n    title: 'SAVE',\n    discountType: 'percentage' as CheckoutDiscountRuleAmountType.PERCENTAGE,\n    value: 10,\n};\n\nconst VALIDATION_SCHEMA = Yup.object().shape({\n    title: Yup.string().trim().required('Required'),\n    discountType: Yup.string()\n        .matches(/percentage|fixedAmount/)\n        .required('Required'),\n    value: Yup.number().positive().required('Required'),\n});\n\n//todo: rewrite from formik to shopify react form\n\nexport const OfferDiscountSettings: React.FC<UpsellDiscountSettingsProps> = ({\n    displayMode,\n    checkoutDiscountRuleId,\n    setCheckoutDiscountRuleId,\n}) => {\n    const ruleListQuery = useCheckoutDiscountRules();\n    const { mutate: mutateCreateRule } = useCreateCheckoutDiscountRule();\n\n    const currentRule = useMemo(() => {\n        return ruleListQuery.data?.checkoutDiscountRules.find((rule) => rule._id === checkoutDiscountRuleId);\n    }, [ruleListQuery, checkoutDiscountRuleId]);\n\n    const [discountPopoverIsActive, setDiscountPopoverIsActive] = useState(false);\n    const [isCreatingDiscount, setIsCreatingDiscount] = useState(false);",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-discount-settings.tsx",
                "start_index": 0,
                "end_index": 2292,
                "start_line": 1,
                "end_line": 66,
                "max_line": 275,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Checkbox\n                            label=\"Customize number of offers to show?\"\n                            {...asChoiceField(customizeNumberOfOffers)}\n                            onChange={handleConfigChange('customizeNumberOfOffers', customizeNumberOfOffers.onChange)}\n                        />\n                        {customizeNumberOfOffers.value && (\n                            <TextField\n                                autoComplete={'off'}\n                                label=\"Number of offers to show\"\n                                {...numberOfOffersToShow}\n                                type=\"number\"\n                                min={1}\n                                onChange={handleConfigChange('numberOfOffersToShow', numberOfOffersToShow.onChange)}\n                            />\n                        )}\n                    </VerticalStack>\n                )}\n                {upsellType.value === 'checkmark' && (\n                    <Checkbox\n                        label=\"Accept offer by default?\"\n                        {...asChoiceField(isDefaultAccepted)}\n                        onChange={handleConfigChange('isDefaultAccepted', isDefaultAccepted.onChange)}\n                    />\n                )}\n                {hasDiscountedOffer && (\n                    <Checkbox\n                        label=\"Skip upsell discount if a non-AfterSell discount is already applied?\"\n                        {...asChoiceField(skipDiscountIfOtherDiscountsAlreadyApplied)}\n                        onChange={handleConfigChange(\n                            'skipDiscountIfOtherDiscountsAlreadyApplied',\n                            skipDiscountIfOtherDiscountsAlreadyApplied.onChange\n                        )}\n                    />\n                )}\n            </VerticalStack>\n            <ProductSelectModal\n                isOpen={productModal}\n                onClose={() => setProductModal(false)}\n                onSave={({ products }) => {\n                    onAddProductHandler(products || []);\n                    setProductModal(false);\n                }}\n                productLevel={SelectionLevelEnum.MULTIPLE}\n            />\n            {priorityModal && (\n                <UpsellOfferPriorityModal\n                    open={priorityModal}\n                    onClose={() => setOpenPriorityModal(false)}\n                    items={widgetData?.offers}\n                    updatePriority={handleConfigChange}\n                    setOfferHasChanges={setOfferHasChanges}\n                />\n            )}\n        </VerticalStack>\n    );\n};",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/upsell-settings.tsx",
                "start_index": 11165,
                "end_index": 13744,
                "start_line": 200,
                "end_line": 304,
                "max_line": 304,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { cleanProductTitle } from '#aftersell/common/products';\nimport {\n    Button,\n    ButtonGroup,\n    Checkbox,\n    Modal,\n    TextField,\n    Thumbnail,\n    Text,\n    VerticalStack,\n    HorizontalStack,\n    Card,\n} from '@shopify/polaris';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { usePrevious } from 'src/hooks/usePrevious';\nimport { DISCOUNT_TYPES } from 'src/constants/dataProvider';\nimport { ExtendedUpsellOffer, UpsellOffer } from '../../../../types';\nimport './OfferCard.scss';\nimport { OfferDiscountSettings } from './offer-discount-settings';\nimport Triggers from './triggers';\n\nconst compareAtPrice = { label: `Use \"Compare at price\"`, value: DISCOUNT_TYPES.COMPARE_AT_PRICE };\n\ntype OfferCardProps = {\n    offer: ExtendedUpsellOffer;\n    handleOfferChange: (option: { offer: { _id: string } }, value: UpsellOffer) => void;\n    handleOfferRemove: (offerId: string) => void;\n    isSelectable: boolean;\n    isSelected: boolean;\n    onOfferSelect: () => void;\n};\n\nconst OfferCard = (props: OfferCardProps) => {\n    const { offer, handleOfferChange, handleOfferRemove, isSelectable, isSelected, onOfferSelect } = props;\n    const { _id: offerId, discount, customTitle, productFull } = offer;\n\n    const [editOfferActive, setEditOfferActive] = useState(false);\n    const [offerSettings, setOfferSettings] = useState<UpsellOffer>(offer);\n\n    const image = (productFull.cuwp_variants || []).find((variant) => variant?.cuwp_image_src)?.cuwp_image_src ?? '';\n    const title = productFull.cuwp_product_title || '';\n\n    const handleEditOffer = useCallback(() => {\n        setEditOfferActive(!editOfferActive);\n        setOfferSettings(offer);\n    }, [editOfferActive, offer]);\n\n    const offerTriggers = offerSettings.triggers;\n\n    const onTriggersChange = (newTriggers: UpsellOffer['triggers']) => {\n        setOfferSettings((prevState) => ({\n            ...prevState,\n            triggers: newTriggers,\n        }));\n    };\n\n    const prevOffer = usePrevious(offer);\n    useEffect(() => {\n        if (offer && !isEqual(prevOffer, offer)) {\n            setOfferSettings(offer);\n        }\n    }, [offer]);\n\n    const onSaveChange = () => {\n        handleOfferChange({ offer: { _id: offerId } }, offerSettings);\n        handleEditOffer();\n    };\n\n    const handleChange = <T extends keyof UpsellOffer>(option: T, value: UpsellOffer[T]) => {\n        setOfferSettings((prevState) => ({\n            ...prevState,\n            [option]: value,\n        }));\n    };\n\n    const removeOffer = () => {\n        handleOfferRemove(offerId);\n    };\n\n    const { discount: offerDiscount = {} as UpsellOffer['discount'] } = offerSettings;\n\n    const checkoutDiscountRuleId = offerDiscount.checkoutDiscountRuleId;\n\n    return (\n        <div\n            className={isSelectable ? `selectablePolarisCard${isSelected ? '__selected' : ''}` : ''}\n            onClick={onOfferSelect}\n        >",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-card.tsx",
                "start_index": 0,
                "end_index": 2944,
                "start_line": 1,
                "end_line": 147,
                "max_line": 218,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n                    appId: 'productInformation',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 2,\n                    config: {\n                        purchaseOption: 'BOTH',\n                        offerDescription: `<p><span style=\"font-size: 16px;\">Don't miss out on this offer... <strong>it expires after you leave this page!</strong></span></p>`,\n                        quantitySelection: true,\n                        hideIfInOriginalOrder: false,\n                        isProductReviewEnabled: true,\n                        discount: {\n                            type: 'percentage',\n                            value: discountAmount,\n                            compareAtPrice: true,\n                        },\n                        shipping: {\n                            type: 'free',\n                            value: 0,\n                            perUnit: false,\n                        },\n                        switcher: {\n                            enabled: true,\n                            showAll: false,\n                        },\n                        showAllOutOfStockVariants: false,\n                        variantPreselection: 'bestMatchFromInitialPurchase',\n                        imageSize: 400,\n                        topPadding: 4,\n                        bottomPadding: 0,\n                        productTitle: `<p><a href=\"https://035e4fcc6ef4.ngrok.io/funnels/single/62f33bf40cd5db9307b879db/editor/undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"product}\"><span style=\"font-size: 24px;\"><strong>{product}</strong></span></a></p>`,\n                        productPrice: `<p><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"original-price}\"><span style=\"font-size: 16px;\"><del>{original-price}</del></span></a> <a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"current-price}\"><span style=\"font-size: 18px;\"><strong>{current-price}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"savings}\"><span style=\"color: #0ca127;font-size: 18px;\"><strong>{savings}</strong></span></a></p>`,\n                        mainImageBorder: false,\n                        declineButtonStyle: 'link',\n                    },\n                },\n            ]",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 19829,
                "end_index": 22211,
                "start_line": 1,
                "end_line": 966,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "collections\n                                    </Button>\n                                )}\n\n                                <ProductSelectModal\n                                    isOpen={modalOpen}\n                                    preSelectedCollections={\n                                        productRecExcludedCollectionIds.value.length\n                                            ? productRecExcludedCollectionIds.value\n                                                  .map((id) => ({ id }))\n                                                  .map(formatCollectionToGQLCollection)\n                                            : []\n                                    }\n                                    collectionLevel={SelectionLevelEnum.MULTIPLE}\n                                    onClose={() => {\n                                        setModalOpen(false);\n                                    }}\n                                    onSave={({ collections }) => {\n                                        const updatedCollectionIds = (collections || []).map(({ id }) =>\n                                            getIdFromGqlId(id)\n                                        );\n                                        productRecExcludedCollectionIds.onChange(updatedCollectionIds);\n                                        setModalOpen(false);\n                                    }}\n                                />\n                                <Text color=\"subdued\" as=\"p\">\n                                    To exclude products based on price, weight, or tag, you can create an{' '}\n                                    <Link\n                                        onClick={() => showArticle(AftersellHelpDocs.UNPUBLISHED_AUTOMATED_COLLECTION)}\n                                        monochrome\n                                    >\n                                        unpublished automated collection\n                                    </Link>\n                                    .\n                                </Text>\n                            </VerticalStack>\n                        </VerticalStack>\n                    </Card>\n                </AnnotatedLayout>\n            </VerticalStack>\n            <Box minHeight=\"50px\" />\n        </Page>\n    );\n};\n\nexport default SettingsAutomaticUpsell;",
                "filename": "web/client/src/pages/settings/settings-automatic-upsells.page.tsx",
                "start_index": 5255,
                "end_index": 7586,
                "start_line": 100,
                "end_line": 162,
                "max_line": 162,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n                        const selectedVariant =\n                            offer.productFull.cuwp_variants[selectedVariantIdxByOffer[offer._id] || 0]!;\n                        const checked = checkIfUpsellOfferInTheCart(ourUpsellsInCart, offer);\n                        const hasVariants = offer.product.variants.length > 1;\n                        const imageMarkup = getProductImage({ selectedVariant });\n                        const titlePriceAndDescriptionMarkup = getTitlePriceAndDescription({\n                            discount: offer.discount,\n                            title: offer.customTitle || offer.productFull.cuwp_product_title,\n                            description: offer.customDescription,\n                            checkmark: true,\n                            selectedVariant,\n                        });\n                        const maybeVariantsMarkup =\n                            hasVariants &&\n                            getVarientButton({\n                                product: offer.productFull,\n                                offerId: offer._id,\n                                disabled: checked,\n                            });",
                "filename": "extensions-web-common/checkout/widgets/upsell.tsx",
                "start_index": 24729,
                "end_index": 25900,
                "start_line": 1,
                "end_line": 605,
                "max_line": 690,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n    const aiRecId1 = uuidv4();\n    const aiRecId2 = uuidv4();\n    const aiRecId3 = uuidv4();\n    const aiRecId4 = uuidv4();\n\n    const textStringUpsellDefault =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more! Grab another for </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;\n\n    const textStringDownsell =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another...Get an additional </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 2487,
                "end_index": 4357,
                "start_line": 1,
                "end_line": 75,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n                            config.customFirstImageUrl = config.customFirstImageUrl || '';\n                            config.productTitle =\n                                typeof config.productTitle === 'string'\n                                    ? config.productTitle\n                                    : '<p><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"product}\"><span style=\"font-size: 24px;\"><strong>{product}</strong></span></a></p>';\n                            config.productPrice =\n                                typeof config.productPrice === 'string'\n                                    ? config.productPrice\n                                    : '<p><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"original-price}\"><span style=\"font-size: 16px;\"><del>{original-price}</del></span></a> <a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"current-price}\"><span style=\"font-size: 18px;\"><strong>{current-price}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"savings}\"><span style=\"color: #0ca127;font-size: 18px;\"><strong>{savings}</strong></span></a></p>';\n                            config.recurringSubtotal =\n                                typeof config.recurringSubtotal === 'string'\n                                    ? config.recurringSubtotal\n                                    : '<p><span style=\"font-size: 12px\"><a href=\"#\" class=\"wysiwyg-mention\" data-mention data-value=\"recurring-subtotal-price}\">{recurring-subtotal-price}</a> <a href=\"#\" class=\"wysiwyg-mention\" data-mention data-value=\"recurring-subtotal-interval}\">{recurring-subtotal-interval}</a></span></p>';\n                            config.textUnderButtons = config.textUnderButtons || '';\n                            config.preventQuantityChange = config.preventQuantityChange || false;\n                            config.quantityFormatString = config.quantityFormatString || '{QUANTITY}';\n                            config.presetQuantity = config.presetQuantity\n                                ? config.presetQuantity\n                                : {\n                                      presetQuantityType: 'fixed' as OfferPresetQuantityType.FIXED,\n                                      fixedQuantity: 1,\n                                  };\n                            config.showVariantSelectorForSingleValueOptions =\n                                config.showVariantSelectorForSingleValueOptions || false;\n                            config.shouldHideVariantSelector = config.shouldHideVariantSelector || false;\n                            config.imageSize = setDefaultNumberValue(config.imageSize, 400);\n                            config.mainImageBorder = config.mainImageBorder || false;\n                            // config.replacementUpsell = config.replacementUpsell;",
                "filename": "web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts",
                "start_index": 4920,
                "end_index": 7856,
                "start_line": 1,
                "end_line": 138,
                "max_line": 270,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n                    appId: 'productInformation',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 2,\n                    config: {\n                        purchaseOption: 'BOTH',\n                        offerDescription: `<p><span style=\"font-size: 16px;\">Don't miss out on this offer... <strong>it expires after you leave this page!</strong></span></p>`,\n                        quantitySelection: true,\n                        hideIfInOriginalOrder: false,\n                        isProductReviewEnabled: true,\n                        discount: {\n                            type: 'percentage',\n                            value: Math.floor(discountAmount / 2),\n                            compareAtPrice: true,\n                        },\n                        shipping: {\n                            type: 'free',\n                            value: 0,\n                            perUnit: false,\n                        },\n                        switcher: {\n                            enabled: true,\n                            showAll: false,\n                        },\n                        showAllOutOfStockVariants: false,\n                        variantPreselection: 'bestMatchFromInitialPurchase',\n                        imageSize: 400,\n                        topPadding: 4,\n                        bottomPadding: 0,\n                        productTitle: `<p><a href=\"https://035e4fcc6ef4.ngrok.io/funnels/single/62f33bf40cd5db9307b879db/editor/undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"product}\"><span style=\"font-size: 24px;\"><strong>{product}</strong></span></a></p>`,\n                        productPrice: `<p><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"original-price}\"><span style=\"font-size: 16px;\"><del>{original-price}</del></span></a> <a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"current-price}\"><span style=\"font-size: 18px;\"><strong>{current-price}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"savings}\"><span style=\"color: #0ca127;font-size: 18px;\"><strong>{savings}</strong></span></a></p>`,\n                        mainImageBorder: false,\n                        declineButtonStyle: 'link',\n                    },\n                },\n            ]",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 6890,
                "end_index": 9288,
                "start_line": 1,
                "end_line": 966,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "initial_doc_snippets": [
            {
                "code": "<td class=\"product__image\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325850,
                "end_index": 325877,
                "start_line": 6322,
                "end_line": 6322,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Checkout Upsell Discounts\n\n## Overview\n\nThis document describes the data flow and security reasoning for our implementation of checkout upsell discounts.\n\nIt is difficult to understand the overall process for checkout upsell discounts by just looking at the code. This is because the code is fragmented across different areas and data is indirectly passed across some boundaries. This convoluted system is necessary for security reasons described below, but it makes the code harder to trace.\n\nThis document can hopefully be used to better understand the checkout upsell discount system as a whole, to allow us to debug or make changes in the future.\n\n## Implementation\n\n### Checkout\n\n> Part 1. Generate a `TamperProofCartAttribute` (Checkout Extension and Server)\n\n1. **Checkout Extension:** Request a `TamperProofCartAttribute` from the server for the offer being added.\n    - **Action:** The checkout extension sends a request to the server with the current `CheckoutData` and the ID of the offer.\n2. **Server:** Decide if a discount should be applied.\n    - **Action:** The server decides if a discount should be applied based on the provided `CheckoutData`. The server must **ONLY** use the provided `CheckoutData`, along with active offers from the database, when determining whether or not to apply a discount. The server must **NOT** use any other information regarding the current checkout.\n    - **Security:**\n        - The `CheckoutData` from the checkout extension is **NOT** secure since it is being sent to an insecure endpoint. Note that even with checkout session tokens, the `CheckoutData` is not secure because a customer could inspect the network requests to find the session token and then make arbitrary requests.\n        - The server does not need to verify the `CheckoutData`. It only needs to decide whether or not a discount should be applied _if the provided `CheckoutData` turns out to be verified_. The server can assume that the discount will only be applied for the given `CheckoutData`. If the checkout data is not actually what was provided, the discount will not be applied. Verification of the `CheckoutData` occurs in the Function.\n        - The server must not use any data other than the provided `CheckoutData` when determining whether or not a discount should be applied. This is because the Function is only provided the trusted `CheckoutData` by Shopify. The Function would not be able to invalidate a discount when a necessary factor changed, if that factor was not part of the `CheckoutData`.\n3. **Server:** Create a `TamperProofCartAttribute` using an HMAC signature of the `UnverifiedState` and `DiscountToApplyIfStateIsVerified`.\n    - **Action:** The server creates an HMAC signature from the combination of the `UnverifiedState` and the `DiscountToApplyIfStateIsVerified`. The `UnverifiedState` is composed of the `CheckoutData` and the `ActiveOfferVersion`.\n        - Creating an HMAC signature involves first stringifying the relevant data and then signing the string with the shared secret between the Function and the server.\n    - **Security:**\n        - This HMAC signature will be used by the Function to verify that the `TamperProofCartAttribute` has not been tampered with. If the HMAC signature matches in the Function, this means that _if the `State` is X_, then the discount should be applied. The HMAC does not provide any indication of whether or not the `State` is verified.\n        - The `ActiveOfferVersion` is included in the `State` to ensure that the discount can be invalidated in the future. For example, the merchant might offer a lower discount amount after BFCM is finished, in which case the old discounts should no longer be valid. The merchant may also change the triggers for an offer such that the offer is only valid over $100, in which case any old discounts should no longer be valid.\n4. **Server:** Respond to the Checkout Extension with a `TamperProofCartAttribute`.\n    - **Action:** The server responds to the checkout extension's request with the newly generated `TamperProofCartAttribute`.\n5. **Checkout Extension:** Add the `TamperProofCartAttribute` to the cart.\n\n> Part 2. Apply a Discount from a `TamperProofCartAttribute` (Function)\n\n6. **Function:** Read the `TamperProofCartAttribute` and `TrustedState` from GraphQL input.\n    - **Security:**\n        - The `TrustedState` is composed of:\n            - `CheckoutData` from the GraphQL input. This is trusted because it is provided directly to the Function by Shopify's servers.\n            - A map of `ActiveOfferVersion`s from a discount private metafield. This is trusted because it can only be set from our server using the Admin API.\n7. **Function:** Verify that the `TamperProofCartAttribute` has not been tampered with.\n    - **Action:** The Function creates an HMAC signature from the data string of the `TamperProofCartAttribute` and the shared secret. The Function compares the HMAC that it generated against the HMAC from the `TamperProofCartAttribute`. If these are not equal, then the discount should **NOT** be applied.\n    - **Security:**\n        - This ensures that the attribute was generated by our server, and has not been modified (e.g., by the customer).\n        - This does **NOT** provide any indication of whether or not the state contained in the data of the `TamperProofCartAttribute` matches reality. The state must still be verified against the trusted state.\n        - This tells us that the _relationship_ between the `UnverifiedState` and the `DiscountToApplyIfStateIsVerified` is true. That is, if the `UnverifiedState` is true then our server says that the discount should be applied.\n8. **Function:** Verify the `UnverifiedState` using the `TrustedState`.\n    - **Action:** The Function compares the `UnverifiedState` from the `TamperProofCartAttribute` to the `TrustedState` from its GraphQL input. If these are not equal, then the discount should **NOT** be applied.\n    - **Security:**\n        - If the `TrustedState` matches the `UnverifiedState`, then it is safe to apply the `DiscountToApplyIfStateIsVerified`.\n        - If the states are not equal, then one of the following may have happened:\n            1. The request to the server was forged and sent with a `CheckoutData` that did not match reality, or\n            2. The `CheckoutData` has changed since the `TamperProofCartAttribute` was created, or\n            3. The `ActiveOfferVersion` has changed since the `TamperProofCartAttribute` (e.g., due to the merchant editing the offer)\n9. **Function:** Apply the `DiscountToApplyIfStateIsVerified` from the `TamperProofCartAttribute`, if all previous checks pass.\n\n### Editor\n\n**Discount Metafields**\n\n-   `$app:upsell-offer-discount-function.private-state`:\n    -   `activeOfferVersions`: A key-value map of offer ID to active version number. This is used by the Function as part of the `TrustedState`.\n-   `$app:upsell-offer-discount-function.private-shared-secret-key`: This is the shared secret between the server and the Function used to generate HMAC signatures. This value should be _unique_ for each discount code to limit the damage if a key is compromised.\n\n**Updating Offers**\n\nWhen a discounted offer is changed, the active version number must be incremented. The combination of the offer ID and the active version number are used to create a `ActiveOfferVersion`. When the version number is incremented, then any `ActiveOfferVersion` that uses the old version number becomes invalid. This ensures that discounts from previous offer versions cannot be applied.\n\n## Type Definitions\n\n```typescript\n/**\n * A cart attribute that is used to transfer non-secret trusted data from our Server to the Function.\n * This is created on our server and verified in the Function.\n */\ninterface TamperProofCartAttribute {\n    /**\n     * A string containing the non-secret trusted data to be transfered.  In the case of checkout\n     * upsell discounts, this is the JSON stringification of a `TamperProofCartAttributeData` object.\n     */\n    data: string;\n    /**\n     *  A SHA-256 hash of the `data`, generating using a shared secret key between the Server and\n     * Function. This can be verified to ensure the integrity of the `data`.\n     */\n    hmac: string;\n}\n\n/**\n * The data contained in a `TamperProofCartAttribute` for checkout upsell discounts.\n */\ninterface TamperProofCartAttributeData {\n    unverifiedState: UnverifiedState;\n    discountToApplyIfStateIsVerified: DiscountToApplyIfStateIsVerified;\n}\n\n/**\n * All of the relevant information about the contents of a checkout that are necessary to determine\n * whether or not the checkout is eligible for a given discount.\n */\ninterface CheckoutData {\n    lineItems: GenericLineItem[];\n}\n\ninterface GenericLineItem {\n    quantity: number; // u64\n    /**\n     * The numeric ID of the variant. This is `null` if the line item is not a product on the\n     * store (e.g., custom line items in draft orders).\n     *\n     * Also known as the legacy ID.\n     *\n     * @example 123456789\n     */\n    variantId: number | null; // u128\n}\n\n/**\n * This is the same as the `GenericLineItem`, except the `variantId` is non-null.\n */\ninterface VariantLineItem {\n    quantity: number;\n    variantId: number;\n}\n\n/**\n * The discount which should be applied by the function if the `UnverifiedState` is verified.\n */\ninterface DiscountToApplyIfStateIsVerified {\n    targetLineItem: VariantLineItem;\n    value:\n        | {\n              discountType: 'percentage';\n              percentageOutOf100: number; // f64\n          }\n        | {\n              discountType: 'fixedAmount';\n              amountInShopCurrency: number; // f64\n          };\n}\n\n/**\n * A general concept including the ID of an offer and the most recent version number. Version\n * numbers should be incremented whenever a change happens to the offer that would affect\n * the discount. For example, changing the triggers for the offer or changing the discount\n * amount.\n */\ninterface ActiveOfferVersion {}\n\n/**\n * All information required to determine whether or not a discount should be applied to a checkout.\n * See `UnverifiedState` and `TrustedState` for specific usages.\n */\ninterface State {}\n\n/**\n * A `State` that may or may not be match reality. The `UnverifiedState` may be outright incorrect,\n * or reality may have changed since the `UnverifiedState` was created. This is used to determine\n * the `DiscountToApplyIfStateIsVerified`.\n */\ninterface UnverifiedState {\n    checkoutData: CheckoutData;\n    activeOfferVersion: {\n        offerId: string;\n        offerVersion: number; // u32\n    };\n}\n\n/**\n * The \"real\" `State`, strictly composed of trusted information. This can be used to verify the\n * `UnverifiedState`.\n */\ninterface TrustedState {\n    checkoutData: CheckoutData;\n    /**\n     * A key-value map containing all active offer IDs (keys) and their corresponding version numbers (values).\n     */\n    activeOfferVersions: Record<string, number>;\n}\n```",
                "filename": "docs/checkout-upsell-discounts.md",
                "start_index": 0,
                "end_index": 10969,
                "start_line": 1,
                "end_line": 181,
                "max_line": 181,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"order-summary-toggle__inner\">\n                        <span class=\"order-summary-toggle__icon-wrapper\">\n                            <svg\n                                width=\"20\"\n                                height=\"19\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__icon\"\n                            >\n                                <path\n                                    d=\"M17.178 13.088H5.453c-.454 0-.91-.364-.91-.818L3.727 1.818H0V0h4.544c.455 0 .91.364.91.818l.09 1.272h13.45c.274 0 .547.09.73.364.18.182.27.454.18.727l-1.817 9.18c-.09.455-.455.728-.91.728zM6.27 11.27h10.09l1.454-7.362H5.634l.637 7.362zm.092 7.715c1.004 0 1.818-.813 1.818-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817zm9.18 0c1.004 0 1.817-.813 1.817-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--show\">\n                            <span>Show order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"6\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M.504 1.813l4.358 3.845.496.438.496-.438 4.642-4.096L9.504.438 4.862 4.534h.992L1.496.69.504 1.812z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--hide\">\n                            <span>Hide order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"7\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M6.138.876L5.642.438l-.496.438L.504 4.972l.992 1.124L6.138 2l-.496.436 3.862 3.408.992-1.122L6.138.876z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span\n                            class=\"order-summary-toggle__total-recap total-recap\"\n                            data-order-summary-section=\"toggle-total-recap\"\n                        >\n                            <span class=\"total-recap__final-price\" data-checkout-payment-due-target=\"5073\">$50.73</span>\n                        </span>\n                    </span>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 242214,
                "end_index": 245205,
                "start_line": 6097,
                "end_line": 6446,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<th class=\"product__description\" scope=\"row\">\n                                                        <span class=\"product__description__name order-summary__emphasis\"\n                                                            >Product Name</span\n                                                        >\n                                                        <span\n                                                            class=\"product__description__variant order-summary__small-text\"\n                                                            >Variant Name</span\n                                                        >\n                                                    </th>\n                                                    <td class=\"product__quantity visually-hidden\">1</td>\n                                                    <td class=\"product__price\">\n                                                        <span class=\"order-summary__emphasis\">$42.99</span>\n                                                    </td>\n                                                </tr>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 331038,
                "end_index": 332129,
                "start_line": 6363,
                "end_line": 6376,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script src=\"https://cdn.shopify.com/shopifycloud/app-bridge.js\"></script>\n        <!-- Shopify App Bridge [END] -->\n\n        <!-- User Pre-fetching [START] -->\n        <script>\n            window.indexHtmlPrefetchedUserPromise = fetch('/api/v1/user').then((res) => res.json());\n        </script>\n        <!-- User Pre-fetching [END] -->\n\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" id=\"aftersell-viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" type=\"image/png\" href=\"/favicon.svg\" />\n        <meta name=\"description\" content=\"AfterSell App\" />\n        <script>\n            const global = globalThis;\n        </script>\n        <script>\n            (function () {\n                const w = window;\n                const ic = w.Intercom;\n                if (typeof ic === 'function') {\n                    ic('reattach_activator');\n                    ic('update', w.intercomSettings);\n                } else {\n                    const d = document;\n                    var i = function () {\n                        i.c(arguments);\n                    };\n                    i.q = [];\n                    i.c = function (args) {\n                        i.q.push(args);\n                    };\n                    w.Intercom = i;\n                    const l = function () {\n                        const s = d.createElement('script');\n                        s.type = 'text/javascript';\n                        s.async = true;\n                        s.src = 'https://widget.intercom.io/widget/l7yr8zsg';\n                        const x = d.getElementsByTagName('script')[0];\n                        x.parentNode.insertBefore(s, x);\n                    };\n                    if (w.attachEvent) {\n                        w.attachEvent('onload', l);\n                    } else {\n                        w.addEventListener('load', l, false);\n                    }\n                }\n            })();\n        </script>\n\n        <!-- FirstPromoter [START] -->\n        <script>\n            (function (w) {\n                w.fpr =\n                    w.fpr ||\n                    function () {\n                        w.fpr.q = w.fpr.q || [];\n                        w.fpr.q[arguments[0] == 'set' ? 'unshift' : 'push'](arguments);\n                    };\n            })(window);\n            fpr('init', { cid: '1z5h5vjx' });\n            fpr('click');\n        </script>\n        <!-- NOTE this FirstPromoter script is our own copy of the source file with some modifications. Original: https://cdn.firstpromoter.com/fpr.js -->\n        <script type=\"module\" src=\"/src/libs/fpr/fpr.ts\" defer></script>\n        <!-- FirstPromoter [END] -->\n\n        <!-- Facebook Pixel Code -->",
                "filename": "web/client/index.html",
                "start_index": 3507,
                "end_index": 6223,
                "start_line": 51,
                "end_line": 118,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"product-thumbnail\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325934,
                "end_index": 325965,
                "start_line": 6323,
                "end_line": 6323,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<body class=\"aftersell-preview\">\n        <a href=\"#main-header\" class=\"skip-to-content\"> Skip to content </a>\n\n        <header class=\"banner\" data-header=\"\" role=\"banner\">\n            <div class=\"wrap\">\n                <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n            </div>\n        </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241387,
                "end_index": 241804,
                "start_line": 6077,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<table class=\"product-table\">\n                                            <caption class=\"visually-hidden\">\n                                                Shopping cart\n                                            </caption>\n                                            <thead class=\"product-table__header\">\n                                                <tr>\n                                                    <th scope=\"col\">\n                                                        <span class=\"visually-hidden\">Product image</span>\n                                                    </th>\n                                                    <th scope=\"col\">\n                                                        <span class=\"visually-hidden\">Description</span>\n                                                    </th>\n                                                    <th scope=\"col\"><span class=\"visually-hidden\">Quantity</span></th>\n                                                    <th scope=\"col\"><span class=\"visually-hidden\">Price</span></th>\n                                                </tr>\n                                            </thead>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 324035,
                "end_index": 325202,
                "start_line": 6298,
                "end_line": 6313,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"product-thumbnail__quantity\" aria-hidden=\"true\"\n                                                                >1</span\n                                                            >\n                                                        </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 330669,
                "end_index": 330927,
                "start_line": 6358,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"hidden\">\n                            <span class=\"visually-hidden\" id=\"forwarding-external-new-window-message\">\n                                Opens external website in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-new-window-message\">\n                                Opens in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-external-message\">\n                                Opens external website.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"checkout-context-step-one\">\n                                Customer information - Checkout\n                            </span>\n                        </div>\n                    </main>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 322226,
                "end_index": 323078,
                "start_line": 6265,
                "end_line": 6282,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"product-thumbnail__wrapper\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 326026,
                "end_index": 326066,
                "start_line": 6324,
                "end_line": 6324,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<html\n    lang=\"en\"\n    dir=\"ltr\"\n    class=\"js desktop page--no-banner page--logo-main page--show page--show card-fields cors svg opacity placeholder no-touchevents displaytable display-table generatedcontent cssanimations flexbox no-flexboxtweener anyflexbox shopemoji floating-labels\"\n>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 0,
                "end_index": 289,
                "start_line": 1,
                "end_line": 6518,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"order-summary__section order-summary__section--product-list\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323839,
                "end_index": 323912,
                "start_line": 6296,
                "end_line": 6296,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Post-purchase checkout extension\n\n## Dev Setup\n\n1. Ensure that you have an `.env` file in the `/server` directory. The extension will use the `HOST` variable from this file\n\n2. Run `yarn dev` to start serving the post-purchase extension code. This will print:\n\n```\n\ud83d\udd2d > Your extension is available at http://localhost:{{PORT}}/assets/extension.js\n```\n\n3. Download the [Shopify post-purchase Chrome extension](https://chrome.google.com/webstore/detail/shopify-post-purchase-dev/nenmcifhoegealiiblnpihbnjenleong)\n\n4. Enable the Chrome extension\n   ![](docs/images/chrome-extension-activate.png)\n\n5. Open the post-purchase Chrome extension setup page\n   ![](docs/images/chrome-extension-details.png)\n   ![](docs/images/chrome-extension-options-link.png)\n\n6. Past the `http://localhost:{{PORT}}/assets/extension.js` URL into the setup page\n7. Copy the API key from your app setup page and paste into the setup page\n   ![](docs/images/chrome-extension-script-url.png)\n   ![](docs/images/app-api-key.png)",
                "filename": "extensions/post-purchase/README.md",
                "start_index": 0,
                "end_index": 999,
                "start_line": 1,
                "end_line": 25,
                "max_line": 25,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"step__sections\">\n                                <div class=\"section\">\n                                    <div class=\"section__header os-header\">\n                                        <svg\n                                            width=\"56\"\n                                            height=\"56\"\n                                            viewBox=\"0 0 56 56\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <circle cx=\"28\" cy=\"28\" r=\"26\" stroke=\"#E5E5E5\" stroke-width=\"2.29412\" />\n                                            <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M22.4811 37.3603L16.3636 31.3947C15.5663 30.6172 15.5663 29.3605 16.3636 28.583C17.1609 27.8055 18.4497 27.8055 19.247 28.583L23.8066 33.0293L36.6493 18.7538C37.3834 17.9186 38.6701 17.8231 39.5225 18.537C40.379 19.2529 40.4789 20.5056 39.7448 21.3388L25.4706 37.2469C25.1015 37.6685 24.5672 37.9191 24.0003 37.9409C23.3825 37.9429 22.8625 37.7341 22.4811 37.3603Z\"\n                                                fill=\"#008060\"\n                                                stroke=\"#E5E5E5\"\n                                                stroke-width=\"0.764706\"\n                                            />\n                                        </svg>\n                                        <div class=\"os-header__heading\">\n                                            <span class=\"os-order-number\"> Order #1001 </span>\n                                            <h2 class=\"os-header__title\" id=\"main-header\" tabindex=\"-1\">\n                                                Thank you {{Customer Name}}!\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245858,
                "end_index": 247957,
                "start_line": 6161,
                "end_line": 6451,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<svg\n                                                                    class=\"product-thumbnail__image\"\n                                                                    width=\"32\"\n                                                                    height=\"32\"\n                                                                    viewBox=\"0 0 32 32\"\n                                                                    fill=\"none\"\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                >\n                                                                    <path\n                                                                        fill-rule=\"evenodd\"\n                                                                        clip-rule=\"evenodd\"\n                                                                        d=\"M27.2 28.8C26.3184 28.8 25.6 28.0816 25.6 27.2C25.6 26.3184 26.3184 25.6 27.2 25.6C28.0816 25.6 28.8 26.3184 28.8 27.2C28.8 28.0816 28.0816 28.8 27.2 28.8ZM6.4 27.2C6.4 28.0816 5.6816 28.8 4.8 28.8C3.9184 28.8 3.2 28.0816 3.2 27.2C3.2 26.3184 3.9184 25.6 4.8 25.6C5.6816 25.6 6.4 26.3184 6.4 27.2ZM28.2656 9.34549L26.0464 15.9999H6.4V6.61269L28.2656 9.34549ZM27.2 22.4H6.4V19.2H27.2C27.8896 19.2 28.4992 18.76 28.7184 18.1056L31.9184 8.5056C32.0688 8.0512 32.0096 7.552 31.7536 7.1472C31.4976 6.7408 31.0736 6.472 30.5984 6.4128L6.4 3.3872V1.6C6.4 0.7168 5.6832 0 4.8 0H1.6C0.7168 0 0 0.7168 0 1.6C0 2.4832 0.7168 3.2 1.6 3.2H3.2V22.6944C1.3408 23.3584 0 25.1168 0 27.2C0 29.8464 2.1536 32 4.8 32C7.4464 32 9.6 29.8464 9.6 27.2C9.6 26.6352 9.4848 26.1024 9.3056 25.6H22.6944C22.5152 26.1024 22.4 26.6352 22.4 27.2C22.4 29.8464 24.5536 32 27.2 32C29.8464 32 32 29.8464 32 27.2C32 24.5536 29.8464 22.4 27.2 22.4Z\"\n                                                                        fill=\"#637381\"\n                                                                    />",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 326131,
                "end_index": 328135,
                "start_line": 6099,
                "end_line": 6353,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<aside class=\"sidebar\" role=\"complementary\">\n                    <div class=\"sidebar__header\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323196,
                "end_index": 323511,
                "start_line": 6285,
                "end_line": 6493,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"main\">\n                    <header class=\"main__header\" role=\"banner\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245397,
                "end_index": 245703,
                "start_line": 6153,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script defer src=\"./thankyoupage_bundle.js?v2\"></script>\n        <script defer src=\"/apps/aftersell_sdk.bundle.min.js?v2\"></script>\n    </head>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241237,
                "end_index": 241381,
                "start_line": 6073,
                "end_line": 6075,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<button\n                class=\"order-summary-toggle order-summary-toggle--show shown-if-js\"\n                data-trekkie-id=\"order_summary_toggle\"\n                aria-expanded=\"false\"\n                aria-controls=\"order-summary\"\n                data-drawer-toggle=\"[data-order-summary]\"\n            >",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241855,
                "end_index": 242157,
                "start_line": 6089,
                "end_line": 6488,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "intial_documentation_sources": {
            "shopify": {
                "collection": "shopify_documentation",
                "reason_for_relevance": "The issue involves adjusting CSS and text capitalization for elements related to a Shopify store, and Shopify's documentation may provide necessary guidelines and best practices for these adjustments."
            }
        },
        "external_documentation_snippets": {
            "external_shopify": [
                {
                    "code": "Deployment\n Distribution\n Billing\n App Store\n UX guidelines for discounts\n A great buyer-facing user experience (UX) for discounts is important to the success of app users. This guide explains important considerations for implementing discounts in user interfaces (UIs).\n User interface guidelines\n Apps should consider how discounted products appear in multiple places on the online store, such as product pages, collection pages, search results, featured product sections on the home page, and quick view modals on product cards. Surfacing potential savings in these areas can further encourage customers to purchase.\n Discounts information is displayed in the following components of the online store:\n Product forms\n Cart items\n Order details\n When building your discount types, first decide if your discount will apply to specific products in an order, to the order as a whole, or to the shipping for the order. If your discount could belong to multiple categories, then you should create separate discount types for each.\n Note\n The class of the discount type that you create is set as a static value in a .toml file when your discount script is uploaded. The class can\u2019t be changed later.\n Whether a discount is a product, order, or shipping discount determines what options users have for allowing it to combine with other discounts at checkout.\n Navigation\n The discount details page has a breadcrumb button (the arrow \u2190 next to the page title). The breadcrumb button must always go back to the page that the user came from. For example, when the details page is reached using the Discounts page of the Shopify admin, the breadcrumb button must return the user to the Discounts page.\n If you choose to link to your discount details page from somewhere else, such as a page in your app, then the breadcrumb button should return the user to that page.\n Discount page\n Use the provided template and React component library to build the details page (create/edit page) for your discount type.\n The discount details page has a number of standard cards:\n Method\n Minimum purchase requirements\n Customer eligibility\n Maximum uses\n Combinations\n Active dates\n Best practices\n Implement everything in the provided template, only removing elements when they don\u2019t make logical sense for your discount type. For example, it doesn\u2019t make sense for a Buy X Get Y discount to have the minimum purchase requirements card, because \u201cbuy x\u201d already defines the minimums. You still need to submit data for any required fields in the Shopify API, so submit a value that makes sense for your discount.\n The card immediately below the Method card typically contains the fields that will differ between discount types. Often this card\u2019s title is Value, which refers to the discount amount that the customer will get. You can also choose a title that makes sense for your discount type.\n As described in Shopify functions, store any custom data used by your discount type using metafields.\n Always provide validations for your discount type\u2019s custom fields that are stored as metafields. If users enter invalid data, then they\u2019ll get helpful feedback.\n Error validation\n You'll get errors back from bad data passed to API calls, but validating the data client-side before firing off a network request makes for a faster UI experience.\n If you choose to validate on the client, then take extra care with free-form entry, such as text fields. Run your validation check only after focus moves away from the field and there's at least one character in the field. This helps avoid marking the field with an error before users have committed a value.\n You might choose not to validate client-side in some cases, such as when validation on a given field takes longer than 1000 ms and validation performance can\u2019t be improved.\n If you get any validation errors, then display them on the specific fields that contain the invalid data, including a message explaining what went wrong and how to fix it. Polaris form components have an error property that you can use for this purpose.\n If there are multiple invalid fields, then provide an error banner at the top of the page, and focus the banner on submit. The banner should include a list of the fields with problems. Link each item in the banner to the corresponding field on the page, enabling the user to jump to that field.\n If there is only a single field with an error, then move focus to that field instead.\n Learn more about form validation.\n Responsive layouts\n Make any custom layout responsive, whether it\u2019s the fields in the Value card, or any other custom UI.\n Ensure that the layout is fluid down to 320 px wide.\n Ensure that key functionality remains available on a touchscreen device. Avoid conveying essential information using tooltips or hover states.\n Avoid truncating text whenever possible.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n User interface guidelines\n Navigation\n Discount page\n Error validation\n Responsive layouts\n Updates & News",
                    "filename": "docs/apps/selling-strategies/discounts/experience/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 4995,
                    "start_line": 1,
                    "end_line": 55,
                    "max_line": 55,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Delivery and shipping\n Product offers\n Overview\n Pre-purchase\n Overview\n Build a pre-purchase offer\n UX guidelines\n Post-purchase\n Payments\n Thank you and Order status\n App Store\n UX guidelines for pre-purchase product offers\n Shopify Plus\n Checkout UI extensions that render on the information and shipping and payment steps in checkout are available only to stores on a Shopify Plus plan.\n This guide introduces UX guidelines for adding pre-purchase product offers to checkout.\n Placement\n Choosing the right target is key to providing a good experience.\n Before you start building, decide whether you want your product offer to render at a static target, a dynamic target, or whether you'll support both. To learn more about target types, refer to the target API reference.\n This product offer example uses the Checkout::Dynamic::Render[OrderSummary4] target for the following reasons:\n The target keeps the line items, discounts, and money lines together, which makes it easy for customers to scan their order summary.\n A product offer is considered secondary content, and should therefore be placed outside of the order summary.\n Note\n On mobile, the order summary area is collapsed by default. The UI won't display the product offer until the customer expands the order summary.\n Components\n The components to create a product offer depends on the extension's possible states.\n The product offer use case can have the following states:\n Loading\n Loaded (default)\n Adding\n Added\n Note\n Added doesn't need a success banner. The addition of the item to the order summary is confirmation that the item was successfully added to the order.\n You can use the following components to create the states:\n Components list for the product offer use case\n Component Preview Tips\n Divider Because the product offer will likely display in a core checkout feature such as contact information or order summary line items, include divider lines to help separate the product offer from the order summary.\n SkeletonText To keep placement from shifting when the content loads, try to reflect the actual content\u2019s dimensions.\n SkeletonImage\n Image Keep the thumbnail size the same as the thumbnail in the order summary to keep the layout consistent.\n Heading If possible, allow merchants to customize the heading content.\n Text\n Text\n Button Use secondary buttons here, reserving the primary button for the main call to actions like Pay now and Next step.\n Banner Use banners to communicate error states.\n Layout\n When you use a nested layout, you'll need only the following structural components:\n Components list for the product offer use case\n Component Preview Tips\n BlockStack You can nest BlockStack components either with themselves or with other components.\n InlineLayout You can nest Inline components with themselves or with other components.\n BlockStack\n Use the BlockStack component to stack elements on top of each other vertically.\n Nesting BlockStack\n Note\n BlockStack and BlockLayout components are similar to each other. BlockLayout enables you to specify different row sizes. With BlockStack, you don't need to do that.\n Set spacing between the divider and the content to loose, for consistency with the rest of checkout\u2019s spacing. Set the spacing between the heading and the line item content to base.\n To address different spacing values, you can nest a BlockStack inside of another BlockStack component.\n InlineLayout\n To display products horizontally, use InlineLayout, and set the spacing between elements to base.\n UX guidelines\n Adhere to the following guidelines when you're designing a product offer checkout UI extension, so that you can help merchants gain customer trust and provide a great checkout experience:\n Only show two product offers at a time\n Adding more than two offers can overwhelm customers, making it difficult for them to choose a product.\n Let merchants personalize product offers\n Customers are more likely to respond positively to offers that relate to their shopping journey or to the items in their cart.\n Only show necessary information\n Make it easy for customers to process offer information by only showing what's most relevant. For example, if supporting information like a product description is required, then progressively reveal it to customers at strategic moments.\n Next steps\n Learn how to offer customers additional products at checkout that they can add to their order.\n Explore UX guidelines for the entire checkout experience.\n For general best practices for developing apps, refer to Best practices for building Shopify apps.\n For practical guidance on how to design a user interface for the Shopify admin, refer to Shopify's App Design Guidelines.\n Get familiar with Polaris accessibility and content guidelines.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Placement\n Components\n Layout\n UX guidelines",
                    "filename": "docs/apps/checkout/product-offers/pre-purchase/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 4860,
                    "start_line": 1,
                    "end_line": 80,
                    "max_line": 80,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "TextField\n Thumbnail\n Modal\n Modals are overlays that prevent merchants from interacting with the rest of the application until a specific action is taken.\n Modals are disruptive by design, requiring merchants to take an action before they can continue, so use them thoughtfully and sparingly.\n JavaScript\n React\n 1 import {extend, Modal} from '@shopify/admin-ui-extensions';\n 2\n 3 extend('Playground', (root) => {\n 4\n    const modal = root.createComponent(Modal, {\n 5\n      title: 'The best modal',\n 6\n      onClose: () => console.log('modal closed!'),\n 7\n      open: true,\n 8\n    });\n 9\n 10\n    modal.appendChild('This is the content of the modal.');\n 11\n    root.appendChild(modal);\n 12\n 13\n    root.mount();\n 14 });\n Props\n optional = ?\n Name Type Description\n open boolean Whether the modal is open.\n title string Title content for the modal, when rendered.\n primaryAction? DestructableAction Modal's primary action, ie 'Save' or 'Accept'.\n secondaryActions? DestructableAction[] Modal's secondary action(s), ie 'Cancel'.\n onClose () => void Callback when the modal is closed.\n DestructableAction\n Name Type Description\n content string Action label text.\n onAction? () => void Callback for the action.\n destructive? boolean Indicates a dangerous or potentially negative action.\n Guidelines\n \u2705 Do \ud83d\uded1 Don't\n Use modals thoughtfully and sparingly Avoid overly complex or multi-step content\n Use modals with a small and simple set of actions to complete\n For more guidelines, refer to Polaris' Modal best practices.\n Was this section helpful?\n YesNo\n ON THIS PAGE",
                    "filename": "docs/api/product-subscription-extensions/components/modal/content.txt",
                    "start_index": 0,
                    "end_index": 1563,
                    "start_line": 1,
                    "end_line": 50,
                    "max_line": 50,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Overview\n Getting started\n Create a subscription\n UX guidelines\n Overview\n Upsell\n Subscriptions\n Payments\n Thank you and Order status\n Localized UI extensions\n UX guidelines for post-purchase upsells\n Beta\n Post-purchase checkout extensions are in beta and can be used without restrictions in a development store. To use post-purchase extensions on a live store, you need to request access.\n When you design a post-purchase upsell, a great customer-facing user experience (UX) and merchant experience are important to the success of our merchants. The post-purchase upsell page should represent the merchant well and protect their brand\u2019s trust.\n User experience\n To provide a great post-purchase experience and to help the merchant gain trust from customers, implement the following UX principles in your post-purchase checkout extension:\n Be transparent about all the costs involved in a purchase.\n Present clear options to accept or refuse upsell offers without pressuring customers.\n Display a maximum of two consecutive upsell offers.\n Present relevant products by tailoring upsell offers to the shopping behaviors and preferences of customers.\n Provide default copy that addresses customers directly using a voice that's appropriate for any store, regardless of brand personality.\n Header and footer\n The styling of the header and footer is consistent across every post-purchase page:\n Header: Confirms the payment of the initial purchase of the order. Customers can also directly access their full order confirmation (and bypass the upsell offer pages) using the View order confirmation button.\n Footer: Contains links to the privacy policy, terms of service, and refund policy.\n Note\n You can't adjust the header and footer components.\n Required components\n App Bridge Checkout provides many powerful UI components that a rendering extension can use to build an interface. The App Bridge Checkout UI components are rendered natively by Shopify, so you can depend on them to be performant, accessible, and functional in all of the checkout\u2019s supported browsers.\n Before you integrate your post-purchase app into checkout, familiarize yourself with the UI guidelines and best practices for the following required components:\n Callout banner\n Product title and price\n Product image\n Price breakdown\n Call to action buttons\n Callout banner\n A callout banner encourages customers to take action on a post-purchase upsell. Use the App Bridge Checkout CalloutBanner to implement this component:\n Place a callout banner near the top of the page to let the customer know what the upsell offer is. Provide strong default copy in your app to encourage merchants to be explicit about the upsell offer.\n Do Don't\n Lead with clear text that explains what a customer can add to the order they've placed. For example: It\u2019s not too late to add to your order.\n Include the product name and the discount associated with it.\n Use exclamation points. For example: \"Wait! Before time runs out!\n Use misleading language that makes the upsell offer feel compulsory or introduces doubt about the status of the order.\n Product title and price\n The product must have the same title and price that it has on the merchant\u2019s store. Keep this consistent to maintain a customer\u2019s trust if they compare. Place the price of the product directly below the product title.\n If the post-purchase product is an upsell offer at a discounted price, then do the following:\n Strike out the original price of the product.\n Display the discounted price next to the original price so that the relationship is clear.\n Product image\n The product image represents the product being offered to the customer in the post-purchase upsell offer. Use the App Bridge Checkout Image component to add an image:\n ADDING MULTIPLE IMAGES\n If the upsell offer includes multiple images, then the images need to be easy to navigate and provide additional context to the customer. Images can be presented using different angles or sizes.\n Note\n There isn't an App Bridge Checkout component available for a carousel feature.\n Do Don't\n Use 48px previous and next arrow buttons.\n Give customers options to swipe between images, navigate using the keyboard, or click on a thumbnail to navigate to the next image.\n Make additional images responsive across screen sizes.\n Implement auto-scrolling through the images, as this might overwhelm customers.\n Price breakdown\n The post-purchase price breakdown shows the total cost of the upsell offer that the customer is accepting. The breakdown needs to be placed under the variant and quantity pickers. The breakdown also needs to dynamically update to reflect price changes if the customer adjusts the product's quantity or variants.\n STRUCTURE OF THE PRICE BREAKDOWN\n The price breakdown needs to include the following:\n Money line: An individual breakdown of costs.\n Subtotal: The total before shipping and taxes have been included.\n Shipping: The total shipping cost for the item(s).\n Taxes: The added cost of goods or services.\n Money summary: The combined total of the subtotal, shipping, and taxes.\n If your product description is long enough that a customer can't see the price breakdown without scrolling, then you need to include a copy of the price breakdown at the end of your product description.\n Call to action buttons\n A call to action button allows a customer to accept or decline an upsell offer. Use the App Bridge Checkout Button component to implement call to action buttons.\n ACCEPT BUTTON\n The accept button is the primary action on the post-purchase upsell page.\n Use the following text for the accept button:\n [Pay now \u2022 Product total price]\n If the product you are offering is free, then use the following text:\n [Add now \u2022 Free] or [Add now \u2022 $0]\n Note\n Don't give merchants the option to change the button text. However, you can translate the button text to any language that you want to support.\n CONFIRMING ACCEPTED UPSELL OFFERS\n Use the App Bridge Checkout Banner component to display a confirmation message when a customer accepts an upsell offer. For example: [Your order has been updated].\n Customers might not expect the accept button to generate a payment immediately because the convention is for \"buy now\" actions to trigger an additional confirmation step. To clarify that there is no additional confirmation step, do the following:\n Add a summary modal to confirm whether the customer wants to proceed.\n Add additional help text directly under the accept button informing the customer that they'll be charged immediately.\n DECLINE BUTTON\n The decline button needs to be placed under the accept button and should be less visually prominent than the accept button. However, despite being less visually prominent, the decline button should still be easy to see so that the merchant can easily decline the upsell offer. The decline button must contain the text [Decline upsell offer].\n Optional components\n In addition to the required components, you can add the following optional components to the post-purchase page:\n Product description\n Variant picker\n Quantity picker\n Product description\n The product description provides a summary of the key features of the product being displayed in the product image (or images).\n Use the TextBlock, TextContainer and Text App Bridge Checkout components to implement a product description.\n All upsell offers should have a product description that accurately summarizes the product features. Encourage merchants using your app to keep the product description as short as possible.\n LENGTHY PRODUCT DESCRIPTIONS\n If the product description is so long that it pushes the rest of the components down (variant picker, quantity picker, price breakdown, and buttons, then divide it into the following two parts:\n A summary description that reveals all other components without scrolling\n A longer, more detailed description below the other components\n Variant picker\n If the product has several variants (for example, size or color), then the page needs to include a variant picker under the product description. Use the App Bridge Checkout Select component to implement a variant picker.\n Label the picker with the name of the variant and the variant values. For example, Size: S, M, L, XL. If your product has several sizes, then consider linking to a size chart.\n Quantity picker\n The quantity picker should be placed below the product description to allow customers to adjust the quantity of a product.\n The quantity picker needs to be a number stepper that's set to 1 as a default. Use the label [Quantity].\n Post-purchase app selector\n Merchants need to enable their post-purchase app in the Shopify admin checkout settings. If there are multiple post-purchase apps installed, then they can also use the checkout settings to select which post-purchase app they want to enable on the post-purchase page.\n We recommend that you let merchants know that they might need to manually select your app to be active in the checkout settings. You could explain this in installation instructions or in your help pages.\n Your can check whether or not it is currently selected, using the following GraphQL Query:\n 1 {\n 2\n    app  {\n 3\n        isPostPurchaseAppInUse\n 4\n    }\n 5 }\n Suggested merchant-facing content for your app:\n You could use the following copy as the basis for a merchant-facing message about multiple post-purchase extensions:\n \"If you already have a post-purchase app installed, you must manually select to make [app-name] active. You can do this in the Shopify admin checkout settings. This option only shows if you already have a post-purchase app installed.\"\n Performance consideration\n To guarantee a good experience for both merchants and customers, we strongly recommend that you prioritize performance when building your extensions. You can depend on App Bridge Checkout UI components to be performant, accessible, and functional in all of the checkout's supported browsers. Keep the following guidelines in mind when building your app:\n Network calls must complete in two seconds or less.\n Network calls that occur before an interface presents to the customer must happen in the ShouldRender handler.\n Render must not require a network call before an interface presents to the customer. Ensure the extension caches required data beforehand using the storage API from ShouldRender.\n Next steps\n Learn how to create a post-purchase upsell.\n Explore UX guidelines for the entire checkout experience.\n For general best practices for developing apps, refer to Best practices for building Shopify apps.\n For practical guidance on how to design a user interface for the Shopify admin, refer to Shopify's App Design Guidelines.\n Get familiar with Polaris accessibility and content guidelines.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n User experience\n Post-purchase app selector\n Performance consideration\n Next steps\n Updates & News\n Developer changelog",
                    "filename": "docs/apps/checkout/product-offers/post-purchase/ux-guidelines/upsell/content.txt",
                    "start_index": 0,
                    "end_index": 10936,
                    "start_line": 1,
                    "end_line": 140,
                    "max_line": 140,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Layouts\n Overview\n checkout.liquid\n Overview\n Customize checkout.liquid\n Checkout CSS\n Templates\n Sections\n Blocks\n Section groups\n Config\n Locales\n Settings\n Developer tools\n Best practices\n Integrating apps\n Product merchandising\n Pricing and payments\n Delivery and fulfillment\n Customer engagement\n Troubleshooting\n Theme Store\n CSS styling in checkout.liquid\n Deprecated\n checkout.liquid is deprecated. It will be sunset for the Information, Shipping, and Payment checkout steps on August 13, 2024, and for the Thank you and Order status pages on August 28, 2025. Additional scripts and script tags will also be sunset for the Order status page on August 28, 2025.\n Stores that currently use checkout.liquid need to upgrade to Checkout Extensibility before these dates. Access to checkout.liquid won't be provided to new stores, with the exception of expansion stores. Shopify Scripts will continue to work alongside Checkout Extensibility until August 28, 2025.\n Learn how to build checkout extensions that extend the functionality of Shopify checkout.\n You can make style enhancements to your checkout pages by adding CSS to the checkout.liquid file of your theme. Consider the following best practices when adding CSS to your checkout.liquid file.\n Shopify Plus\n The checkout.liquid layout is available to Shopify Plus merchants only.\n Checkout pages\n When you're styling your checkout, remember to consider its component pages. Depending on checkout settings, there are at least four checkout pages, and at most six.\n BEM Syntax\n Checkout uses the BEM syntax to minimize nesting. You should avoid deep nesting of selectors, and use the simplest selector that meets your needs.\n For example, to style the name of the products inside the order summary:\n Use this Instead of this\n 1 .product__info__name {\n 2\n      color: green;\n 3\n    }\n 1 .order-summary .order-summary__section .product_list .product_info .product__info__name {\n 2\n      color: red;\n 3\n    }\n Avoid using !important\n Your checkout stylesheet is loaded after the base stylesheet, so you don't need to add !important to every property. Reserve the use of !important for cases where it's absolutely necessary.\n Button examples\n Consider designing buttons for all states: disabled, normal, and hover.\n Customize your classes to provide button styles that match your theme.\n Main breakpoints\n The default stylesheet has four breakpoints, which you can use in your stylesheet:\n Small: 0px and up \u2013 doesn't require a media query\n Medium: 750px and up\n Large: 1000px and up\n Large Desktop: 1300px and up.\n Custom webfonts and additional scripts\n You can load your self-hosted webfonts directly from the CSS style tags in the checkout.liquid using an @font-face declaration.\n External assets\n Checkout uses SSL encryption to ensure a safe buying experience for your customers. If you do load images or additional content, then these assets need to be served over https:// to be rendered on the page. When possible, you should use the Shopify CDN to host all your assets.\n Feature detection\n A few utility classes are included on the <html> element:\n Javascript: js/no-js lets you know whether the browser supports javascript or not.\n Browser and OS: For example, a user running Chrome on OS X would have the classes mac chrome.\n Modernizr: Modernizr is used to detect if the browser supports certain CSS properties like RGBA, multiple background images, box-shadows, pseudo-elements, and inline SVG.\n You can use these classes to provide an improved checkout experience on older browsers.\n Fields, modals, and notices\n Some other components you can customize in the CSS of the checkout.liquid are fields, modals, warnings, and error messages\n Field states and classes\n Use the classes in your tables to style the three field states to fit your theme.\n Field state CSS class\n Default No class required\n Focus field--focus\n Error field--error\n Modals\n Policies (refund, privacy, and terms of service) and processing/forwarding pages are presented in a full-screen modal.\n Warnings\n Use warnings to notify the user that the total cost of their order changed before they completed their purchase. For example, you might add a warning if inventory is automatically adjusted.\n Error messages\n Use clear error messages to communicate errors to the user.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n External assets\n Feature detection\n Updates & News\n Developer changelog\n Partner blog\n Engineering blog",
                    "filename": "docs/themes/architecture/layouts/checkout-liquid/checkout-css/content.txt",
                    "start_index": 0,
                    "end_index": 4464,
                    "start_line": 1,
                    "end_line": 90,
                    "max_line": 90,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "A common approach is to encourage purchases with a lower initial price, for example, \"Save $10 on the first 3 deliveries.\"\n If an initial price incentive is applied to a subscription, then explain the current payment and how payments will change in the future.\n It\u2019s important to be transparent. A lack of information can cause customer mistrust and might appear misleading. Certain states and countries have laws around price clarity, which means that merchants might be subject to lawsuits.\n Subscription policy link\n In the mockup, the link to View subscription policy is part of the selling plan description and therefore in the merchant\u2019s or app\u2019s control to provide. The intention is to allow individual selling plans to provide a link out to a dedicated URL, if available.\n Theshop.subscription_policy object available in Liquid makes it possible to link to a dedicated /policies/subscription-policy page. The content of the page is editable by the merchant in the Shopify admin under Legal settings (/admin/settings/legal). The content of the subscription policy is also available at checkout.\n Main call-to-action\n Having a call-to-action that reflects the subscription type helps customers differentiate between subscription options and the one-time subscription.\n # UI element API properties and information UI guidelines\n 1 Call-to-action On first page load, if the product requires a selling plan or one is selected, then switch the call-to-action string to something subscription-specific that merchants can customize.\n \n Shopify doesn't display the dynamic checkout button on products that include selling plans. Ensure that the theme accounts for this, and that the primary call-to-action style is used for the form submission. Update the call-to-action label to Add subscription to cart for a subscription subscription.\n Cart items\n Each subscription item displays the most important subscription details to help customers understand their purchase. Customers should be able to understand a subscription\u2019s delivery frequency and, if applicable, the commitment period. The price should also match what is represented on the product page.\n The subcomponents of a cart item include the following:\n Cart page\n Cart notification\n Cart page\n Customers tend to scan the cart page and review the information before proceeding to checkout:\n # UI element API properties and information UI guidelines\n 1 Selling plan information line_item.selling_plan_allocation.selling_plan.name\n \n Use selling_plan.name in the cart line item. This same text is used at checkout. For more information, refer to Using the selling plan name. Because the selling plan name is meant to accurately summarize the subscription, don't list the individual selling plan option values alongside the selling plan name.\n Cart notification\n The cart notification returns information about the item that was just added to the cart:\n # UI element API properties and information UI guidelines\n 1 Selling plan information line_item.selling_plan_allocation.selling_plan.name\n \n This information comes from a Cart API JSON response.\n \n Use selling_plan.name in the order line item. The same text is used at checkout. For more information, refer to Using the selling plan name. Because the selling plan name is meant to accurately summarize the subscription, don't list the individual selling plan option values alongside the selling plan name.\n Using the selling plan name\n The selling_plan.name should be a succinct description of the selling plan that can be easily understood by customers. The text is displayed in multiple areas of the online store, such as cart line items, checkout, and past order details. The value is also displayed in the merchant\u2019s internal admin on order pages.\n Note\n The selling plan name shouldn't be an additional opportunity to write marketing text.\n Shopify doesn't control the value of the name, which means that merchants can enter any text value they want using an app.\n When creating selling plan names, implement the following recommended guidelines:\n State the delivery frequency and a prepaid period, if applicable.\n Don't state exact dollars amounts, for example, \"$9 a month\". Use percentages when applicable.\n Considerations for currency switching and price rounding\n Merchants can sell in multiple currencies on their online store.\n When a customer visits the online store, Shopify presents the currency that's determined appropriate for the customer. Online stores can offer a currency selector to customers to enable them to manually switch the currency. Shopify also offers a price rounding feature to merchants, which allows merchants to set custom rounding rules for converted prices.\n Apps and merchants shouldn't write any prices in the various strings that are shown to customers, for example, selling plan names that say \"$9.99 a month\" or \"Save $5\". Any prices that are written in these strings won't reflect currency switching or price rounding, and might be incorrect or misleading to customers.\n When an app or merchant wants to express savings in a text field, use percentages whenever possible. For example, \"Deliver every week (Save 20%)\".\n Note\n Price properties returned from APIs of the Online Store (Liquid or JSON) reflect the currency of the customer's session and any price rounding rules.\n Order details\n Customers logged in to the store can view the details of each past order. It's important to let the customer easily identify the subscription product.\n # UI element API properties and information UI guidelines\n 1 Selling plan information line_item.selling_plan_allocation.selling_plan.name\n \n Use selling_plan.name in the cart notification line item. The same text is used at checkout. For more information, refer to Using the selling plan name. Because the selling plan name is meant to accurately summarize the subscription, don't list the individual selling plan option values alongside the selling plan name.\n Next steps\n Create and manage selling plans: Follow a step-by-step workflow to create and manage selling plans in your subscription app.\n Getting started building a product subscription app extension: Learn how to create a new product subscription app extension with App Bridge Admin, connect the extension to Shopify, and render your working code inside Shopify's UI.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n User experience principles\n User interface guidelines\n Product forms\n Cart items\n Order details\n Next steps",
                    "filename": "docs/themes/pricing-payments/subscriptions/subscription-ux-guidelines/content.txt",
                    "start_index": 15177,
                    "end_index": 21661,
                    "start_line": 162,
                    "end_line": 225,
                    "max_line": 225,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Deciding extension placement\n Localizing UI extensions\n Testing UI extensions\n UX guidelines\n Selling strategies\n App Store\n UX guidelines\n Customer accounts offer a secure and flexible way for customers to manage their information and orders. Accounts empower customers with greater control over post-purchase surfaces and create opportunities for merchants to drive more sales with features like offers, wishlists, product offers, and loyalty programs.\n All apps should follow the general guidance provided by the App Design Guidelines. This guide provides additional guidance for designing customer account UI extensions.\n Merchant-to-customer content\n When you write UI content for your customer account app, you\u2019re writing directly to a merchant\u2019s customers. The content that you write should represent the merchant, not your app, and should optimize the customer\u2019s online experience.\n Consult Polaris for more guidelines on voice, tone, and vocabulary to consider for merchant-to-customer content.\n Principles\n Enable self-service: Self-service options help customers resolve issues faster and reduce merchant support interactions.\n Design for consistency: Merchants can use different apps to enhance their customer account interface. Because your app operates alongside other apps, it's important to ensure a familiar user experience. Avoid introducing unfamiliar UX patterns, terms, or navigation paradigms that deviate from our guidelines. Aim to integrate your app seamlessly into the existing customer account experience.\n Personalize when possible: Customer account extensions benefit from authenticated access to customer data. Use this data to personalize the customer experience and create delightful moments. For example, offer complementary products, birthday discounts, or personalize content with the customer's name. Be creative, but respect privacy.\n Don't expose your brand to the customer: Enhance the merchant's brand subtly and effectively. At all times, aim to create a seamless and consistent experience that makes customers feel like they're interacting directly with the merchant.\n Build for scale: Design your app to support merchants of all sizes, from small startups to large enterprises. Ensure that your app effectively handles both low and high order volumes.\n Responsive design\n Design interfaces that adapt to different screen sizes. Your app should offer a good UX across mobile, tablet, and desktop devices. Test the extension on various screen sizes to ensure content adjusts appropriately for each device.\n Grid layouts\n Grid layouts enable responsive design for different screen sizes, and streamline development while enhancing the overall aesthetics of the customer experience. Grid layouts also ensure that elements are spaced, aligned, and positioned consistently.\n Customer account pages are made up of columns, gutters, and margins. The design is based on a 12-column grid.\n The following are the grid breakpoints per device type:\n Mobile: 375 dp breakpoint, six column grid, one column content\n Tablet: 750 dp breakpoint, six column grid, one column content\n Small laptop: 1000 dp breakpoint, six column grid, two column content\n When you design your page layout, you should generally space the content evenly across the grid columns. For example, in a three-column layout, each column of content would span four columns of the grid. However, to create a layout similar to the Order status page, the first column of content should span seven columns and the second should span five columns.\n Fulfillment statuses\n Conditional logic based on status\n Design your apps so that merchants have the flexibility to determine where an action displays.\n For example, for order actions that only become relevant once the customer has received the order, like requesting a return or writing a review, ideally customer's can\u2019t take action until the order is marked as delivered. However, when merchants don't provide a tracking number for a fulfilled order, it can be difficult for Shopify to know when the order has been delivered. In these instances, customer wouldn't have access to actions that depend on an order's delivered status. Be mindful of situations like this, and enable merchants to configure your app to suit their fulfillment processes.\n Content guidelines\n Status names\n Aim for one to three words.\n Use sentence case.\n Test different fulfillment scenarios\n We recommend testing your Order status page extensions across different fulfillment states. The following are some examples:\n Different delivery statuses, such as confirmed, on its way, and delivered.\n Partial fulfillments\n Multiple fulfillments\n Local pickup\n Gift cards\n Digital products\n Returns\n Payment statuses\n Depending on the payment status of an order, a payment card will display above the order summary. For example, when a customer has made a purchase with Net 90 payment terms, they have 90 days to submit payment. In this scenario, the payment card displays the amount due, the due date, and a Pay now button.\n Test different payment scenarios\n We recommend testing your Order status page extensions across different payment statuses. The following are some example statuses:\n Payment terms\n Partial payment\n Refund\n Paid\n User feedback and informational banners\n Error messages\n Error messages should help the customer understand what went wrong and how they can resolve the error.\n Create error messages using a Banner component with the alert or critical status prop.\n Don't use toasts for error messages. Since toasts disappear, customers lose access to the information that they need to move forward.\n Learn more about error handling.\n Informational banners\n Create informational banners using a Banner component with the info status prop.\n To build a more neutral banner, without the icons and colors that are associated with the different props, the following are some examples of components that you can use:\n Card: Customer account\n Heading: Heading 2\n Text: Default\n Button: Secondary\n These components adopt the merchant's branding by default, which helps your banner align with the overall look and feel of the merchant's shop.\n Next steps\n Figma UI kit\n Everything you need to start designing with customer account and checkout components.\n Figma: Account screens\n Explore all the customer account screens to design your extensions.\n Customer account components\n Learn about the components that you can use to build customer account UI extensions.\n Checkout components\n Learn about the checkout components that you can also use to build customer account UI extensions.\n Merchant-to-customer content guidelines\n Learn how to write UI content that represents merchants and optimizes the customer experience.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Merchant-to-customer content\n Principles\n Responsive design\n Grid layouts\n Fulfillment statuses\n Payment statuses\n User feedback and informational banners\n Next steps\n Updates & News",
                    "filename": "docs/apps/customer-accounts/best-practices/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 6978,
                    "start_line": 1,
                    "end_line": 90,
                    "max_line": 90,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Deployment\n Distribution\n Billing\n App Store\n Build a discounts user interface\n Users create and manage discounts in the Shopify admin. Shopify uses the URLs that you configure to render the discount creation and editing experience for the user. You can customize this UI for your function's configuration needs or to meet other requirements of your app.\n What you'll learn\n In this tutorial, you'll learn how to do the following tasks:\n Create an App Bridge UI that enables users to create a function owner.\n Configure the UI paths for your function.\n Requirements\n You've completed the Add configuration to your discounts experience tutorial.\n You created your app with the Remix app template.\n Step 1: Set up discounts dependencies\n The @shopify/discount-app-components package provides useful components for building a discount function configuration experience. Using it requires setting up some dependencies on top of the Remix app template.\n Install the following packages:\n @shopify/discount-app-components: Provides components that you can use to render a discounts UI.\n @shopify/react-form: Provides hooks to help you manage React forms.\n @shopify/app-bridge-react: Allows you to use App Bridge actions in React.\n Terminal\n npm\n Yarn\n pnpm\n $ npm install @shopify/discount-app-components @shopify/react-form @shopify/app-bridge-react\n The @shopify/discount-app-components library requires an AppProvider for the components to work. Create a components directory in app. Within the components directory, create a providers directory.\n Create a DiscountProvider.jsx file within the app/components/providers directory with the following contents:\n app/components/providers/DiscountProvider.jsx\n 1 import { AppProvider } from \"@shopify/discount-app-components\";\n 2 import \"@shopify/discount-app-components/build/esm/styles.css\";\n 3\n 4 export function DiscountProvider({ children }) {\n 5\n    return (\n 6\n      <AppProvider locale=\"en-US\" ianaTimezone=\"America/Toronto\">\n 7\n        {children}\n 8\n      </AppProvider>\n 9\n    );\n 10 }\n In app/routes/app.jsx, import and render AppBridgeReactProvider and DiscountProvider.\n Your app.jsx should look similar to the following example:\n app/routes/app.jsx\n 1 import { useState } from \"react\";\n 2 import { json } from \"@remix-run/node\";\n 3 import { Link, Outlet, useLoaderData, useRouteError } from \"@remix-run/react\";\n 4 import { Provider as AppBridgeReactProvider } from \"@shopify/app-bridge-react\";\n 5 import polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\n 6 import { DiscountProvider } from \"../components/providers/DiscountProvider\";\n 7 import { boundary } from \"@shopify/shopify-app-remix/server\";\n 8 import { AppProvider } from \"@shopify/shopify-app-remix/react\";\n 9\n 10 import { authenticate } from \"../shopify.server\";\n 11\n 12 export const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n 13\n 14 export async function loader({ request }) {\n 15\n    await authenticate.admin(request);\n 16\n 17\n    const url = new URL(request.url);\n 18\n 19\n    return json({\n 20\n      apiKey: process.env.SHOPIFY_API_KEY,\n 21\n      host: url.searchParams.get(\"host\"),\n 22\n    });\n 23 }\n 24\n 25 export default function App() {\n 26\n    const { apiKey, host } = useLoaderData();\n 27\n    const [config] = useState({ host, apiKey });\n 28\n 29\n    return (\n 30\n      <AppProvider isEmbeddedApp apiKey={apiKey}>\n 31\n        <AppBridgeReactProvider config={config}>\n 32\n          <DiscountProvider>\n 33\n            <ui-nav-menu>\n 34\n              <Link to=\"/app\" rel=\"home\">\n 35\n                Home\n 36\n              </Link>\n 37\n              <Link to=\"/app/additional\">Additional page</Link>\n 38\n            </ui-nav-menu>\n 39\n            <Outlet />\n 40\n          </DiscountProvider>\n 41\n        </AppBridgeReactProvider>\n 42\n      </AppProvider>\n 43\n    );\n 44 }\n 45\n 46 // Shopify needs Remix to catch some thrown responses, so that their headers are included in the response.\n 47 export function ErrorBoundary() {\n 48\n    return boundary.error(useRouteError());\n 49 }\n 50\n 51 export const headers = (headersArgs) => {\n 52\n    return boundary.headers(headersArgs);\n 53 };\n Step 2: Create the frontend UI for your function\n In app/routes, create a new file named app.volume-discount.$functionId.new.jsx.\n The Shopify Remix app template uses file-based routing, so the file name determines the page's URL. The $ prefix indicates functionId is a dynamic segment. The path for this page will be /app/volume-discount/{functionId}/new.\n Add the following code in app.volume-discount.$functionId.new.jsx:\n The action function handles submitting the form data to Shopify to create the discount.\n The VolumeNew function renders the page and form components using Polaris components, Remix hooks, and discount app components.\n app/routes/app.volume-discount.$functionId.new.jsx\n 1 import { useEffect, useMemo } from \"react\";\n 2 import { json } from \"@remix-run/node\";\n 3 import { useForm, useField } from \"@shopify/react-form\";\n 4 import { useAppBridge } from \"@shopify/app-bridge-react\";\n 5 import { Redirect } from \"@shopify/app-bridge/actions\";\n 6 import { CurrencyCode } from \"@shopify/react-i18n\";\n 7 import {\n 8\n    Form,\n 9\n    useActionData,\n 10\n    useNavigation,\n 11\n    useSubmit,\n 12 } from \"@remix-run/react\";\n 13 import {\n 14\n    ActiveDatesCard,\n 15\n    CombinationCard,\n 16\n    DiscountClass,\n 17\n    DiscountMethod,\n 18\n    MethodCard,\n 19\n    DiscountStatus,\n 20\n    RequirementType,\n 21\n    SummaryCard,\n 22\n    UsageLimitsCard,\n 23\n    onBreadcrumbAction,\n 24 } from \"@shopify/discount-app-components\";\n 25 import {\n 26\n    Banner,\n 27\n    Card,\n 28\n    Text,\n 29\n    Layout,\n 30\n    Page,\n 31\n    PageActions,\n 32\n    TextField,\n 33\n    BlockStack,\n 34 } from \"@shopify/polaris\";\n 35\n 36 import shopify from \"../shopify.server\";\n 37\n 38 // This is a server-side action that is invoked when the form is submitted.\n 39 // It makes an admin GraphQL request to create a discount.\n 40 export const action = async ({ params, request }) => {\n 41\n    const { functionId } = params;\n 42\n    const { admin } = await shopify.authenticate.admin(request);\n 43\n    const formData = await request.formData();\n 44\n    const {\n 45\n      title,\n 46\n      method,\n 47\n      code,\n 48\n      combinesWith,\n 49\n      usageLimit,\n 50\n      appliesOncePerCustomer,\n 51\n      startsAt,\n 52\n      endsAt,\n 53\n      configuration,\n 54\n    } = JSON.parse(formData.get(\"discount\"));\n 55\n 56\n    const baseDiscount = {\n 57\n      functionId,\n 58\n      title,\n 59\n      combinesWith,\n 60\n      startsAt: new Date(startsAt),\n 61\n      endsAt: endsAt && new Date(endsAt),\n 62\n    };\n 63\n 64\n    if (method === DiscountMethod.Code) {\n 65\n      const baseCodeDiscount = {\n 66\n        ...baseDiscount,\n 67\n        title: code,\n 68\n        code,\n 69\n        usageLimit,\n 70\n        appliesOncePerCustomer,\n 71\n      };\n 72\n 73\n      const response = await admin.graphql(\n 74\n        `#graphql\n 75\n            mutation CreateCodeDiscount($discount: DiscountCodeAppInput!) {\n 76\n              discountCreate: discountCodeAppCreate(codeAppDiscount: $discount) {\n 77\n                userErrors {\n 78\n                  code\n 79\n                  message\n 80\n                  field\n 81\n                }\n 82\n              }\n 83\n            }`,\n 84\n        {\n 85\n          variables: {\n 86\n            discount: {\n 87\n              ...baseCodeDiscount,\n 88\n              metafields: [\n 89\n                {\n 90\n                  namespace: \"$app:volume-discount\",\n 91\n                  key: \"function-configuration\",\n 92\n                  type: \"json\",\n 93\n                  value: JSON.stringify({\n 94\n                    quantity: configuration.quantity,\n 95\n                    percentage: configuration.percentage,\n 96\n                  }),\n 97\n                },\n 98\n              ],\n 99\n            },\n 100\n          },\n 101\n        }\n 102\n      );\n 103\n 104\n      const responseJson = await response.json();\n 105\n      const errors = responseJson.data.discountCreate?.userErrors;\n 106\n      return json({ errors });\n 107\n    } else {\n 108\n      const response = await admin.graphql(\n 109\n        `#graphql\n 110\n            mutation CreateAutomaticDiscount($discount: DiscountAutomaticAppInput!) {\n 111\n              discountCreate: discountAutomaticAppCreate(automaticAppDiscount: $discount) {\n 112\n                userErrors {\n 113\n                  code\n 114\n                  message\n 115\n                  field\n 116\n                }\n 117\n              }\n 118\n            }`,\n 119\n        {\n 120\n          variables: {\n 121\n            discount: {\n 122\n              ...baseDiscount,\n 123\n              metafields: [\n 124\n                {\n 125\n                  namespace: \"$app:volume-discount\",\n 126\n                  key: \"function-configuration\",\n 127\n                  type: \"json\",\n 128\n                  value: JSON.stringify({\n 129\n                    quantity: configuration.quantity,\n 130\n                    percentage: configuration.percentage,\n 131\n                  }),\n 132\n                },\n 133\n              ],\n 134\n            },\n 135\n          },\n 136\n        }\n 137\n      );\n 138\n 139\n      const responseJson = await response.json();\n 140\n      const errors = responseJson.data.discountCreate?.userErrors;\n 141\n      return json({ errors });\n 142\n    }\n 143 };\n 144\n 145 // This is the React component for the page.\n 146 export default function VolumeNew() {\n 147\n    const submitForm = useSubmit();\n 148\n    const actionData = useActionData();\n 149\n    const navigation = useNavigation();\n 150\n    const app = useAppBridge();\n 151\n    const todaysDate = useMemo(() => new Date(), []);\n 152\n 153\n    const isLoading = navigation.state === \"submitting\";\n 154\n    const currencyCode = CurrencyCode.Cad;\n 155\n    const submitErrors = actionData?.errors || [];\n 156\n    const redirect = Redirect.create(app);\n 157\n 158\n    useEffect(() => {\n 159\n      if (actionData?.errors.length === 0) {\n 160\n        redirect.dispatch(Redirect.Action.ADMIN_SECTION, {\n 161\n          name: Redirect.ResourceType.Discount,\n 162\n        });\n 163\n      }\n 164\n    }, [actionData]);\n 165\n 166\n    const {\n 167\n      fields: {\n 168\n        discountTitle,\n 169\n        discountCode,\n 170\n        discountMethod,\n 171\n        combinesWith,\n 172\n        requirementType,\n 173\n        requirementSubtotal,\n 174\n        requirementQuantity,\n 175\n        usageLimit,\n 176\n        appliesOncePerCustomer,\n 177\n        startDate,\n 178\n        endDate,\n 179\n        configuration,\n 180\n      },\n 181\n      submit,\n 182\n    } = useForm({\n 183\n      fields: {\n 184\n        discountTitle: useField(\"\"),\n 185\n        discountMethod: useField(DiscountMethod.Code),\n 186\n        discountCode: useField(\"\"),\n 187\n        combinesWith: useField({\n 188\n          orderDiscounts: false,\n 189\n          productDiscounts: false,\n 190\n          shippingDiscounts: false,\n 191\n        }),\n 192\n        requirementType: useField(RequirementType.None),\n 193\n        requirementSubtotal: useField(\"0\"),\n 194\n        requirementQuantity: useField(\"0\"),\n 195\n        usageLimit: useField(null),\n 196\n        appliesOncePerCustomer: useField(false),\n 197\n        startDate: useField(todaysDate),\n 198\n        endDate: useField(null),\n 199\n        configuration: {},\n 200\n      },\n 201\n      onSubmit: async (form) => {\n 202\n        const discount = {\n 203\n          title: form.discountTitle,\n 204\n          method: form.discountMethod,\n 205\n          code: form.discountCode,\n 206\n          combinesWith: form.combinesWith,\n 207\n          usageLimit: form.usageLimit == null ?",
                    "filename": "docs/apps/selling-strategies/discounts/experience/ui/content.txt",
                    "start_index": 0,
                    "end_index": 11584,
                    "start_line": 1,
                    "end_line": 514,
                    "max_line": 940,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Step 5: Style buttons with the secondary font\n Now you'll update the primary button typography to match what you set for secondary surfaces, using the checkoutBrandingUpsert mutation's customizations object:\n POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json\n GraphQL mutation\n 1 mutation checkoutBrandingUpsert($checkoutBrandingInput: CheckoutBrandingInput!, $checkoutProfileId: ID!) {\n 2\n    checkoutBrandingUpsert(checkoutBrandingInput: $checkoutBrandingInput, checkoutProfileId: $checkoutProfileId) {\n 3\n      checkoutBranding {\n 4\n        customizations {\n 5\n          primaryButton {\n 6\n            typography {\n 7\n              font\n 8\n            }\n 14\n        message\n 15\n      }\n 16\n    }\n 17 }\n Query variables\n 1 {\n 2\n    \"checkoutProfileId\": \"gid://shopify/CheckoutProfile/YOUR_CHECKOUT_PROFILE_ID_HERE\",\n 3\n    \"checkoutBrandingInput\": {\n 4\n      \"customizations\": {\n 5\n        \"primaryButton\": {\n 6\n          \"typography\": {\n 7\n            \"font\": \"SECONDARY\"\n 8\n          }\n 9\n        }\n      \"checkoutBrandingUpsert\": {\n 4\n        \"checkoutBranding\": {\n 5\n          \"customizations\": {\n 6\n            \"primaryButton\": {\n 7\n              \"typography\": {\n 8\n                \"font\": \"SECONDARY\"\n 9\n              }\n 10\n            }\n 11\n          }\n 12\n        },\n 13\n        \"userErrors\": []\n 14\n      }\n 15\n    }\n 16 }\n Step 6: Style level one headings\n Now you'll use the checkoutBrandingUpsert mutation's customizations object to style the level one heading typography.\n The following example sets the font to large, relative to the base size and ratio, in uppercase and bold:\n POST https://{shop}.myshopify.com/admin/api/{api_version}/graphql.json\n GraphQL mutation\n 1 mutation checkoutBrandingUpsert($checkoutBrandingInput: CheckoutBrandingInput!, $checkoutProfileId: ID!) {\n 2\n    checkoutBrandingUpsert(checkoutBrandingInput: $checkoutBrandingInput, checkoutProfileId: $checkoutProfileId) {\n 3\n      checkoutBranding {\n 4\n       customizations {\n 5\n          headingLevel1 {\n 6\n            typography {\n 7\n              size\n 8\n              letterCase\n 9\n              weight\n 10\n            }\n      }\n 14\n      userErrors {\n 15\n        field\n 16\n        message\n 17\n      }\n 18\n    }\n 19 }\n Query variables\n 1 {\n 2\n    \"checkoutProfileId\": \"gid://shopify/CheckoutProfile/YOUR_CHECKOUT_PROFILE_ID_HERE\",\n 3\n    \"checkoutBrandingInput\": {\n 4\n      \"customizations\": {\n 5\n        \"headingLevel1\": {\n 6\n          \"typography\": {\n 7\n            \"size\": \"LARGE\",\n 8\n            \"letterCase\": \"UPPER\",\n 9\n            \"weight\": \"BOLD\"\n      }\n 13\n    }\n 14 }\n JSON response\n 1 {\n 2\n    \"data\": {\n 3\n      \"checkoutBrandingUpsert\": {\n 4\n        \"checkoutBranding\": {\n 5\n          \"customizations\": {\n 6\n            \"headingLevel1\": {\n 7\n              \"typography\": {\n 8\n                \"size\": \"LARGE\",\n 9\n                \"letterCase\": \"UPPER\",\n 10\n                \"weight\": \"BOLD\"\n 11\n              }\n 12\n            },\n 13\n          }\n 14\n        }\n 15\n        \"userErrors\": []\n 16\n      }\n 17\n    }\n 18 }\n Next steps\n Explore the GraphQL Admin API to learn more about customizing checkout's typography.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n What you'll learn\n Requirements\n Step 1: Retrieve the store's checkout profile IDs\n Step 2: Update the base size and ratio for the design system\n Step 3: Apply a Shopify font to primary surfaces\n Step 4: Apply a custom font to secondary surfaces\n Step 5: Style buttons with the secondary font\n Step 6: Style level one headings\n Next steps\n Updates & News\n Developer changelog",
                    "filename": "docs/apps/checkout/styling/customize-typography/content.txt",
                    "start_index": 10686,
                    "end_index": 14251,
                    "start_line": 427,
                    "end_line": 605,
                    "max_line": 605,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Overview\n Getting started\n Create a subscription\n UX guidelines\n Payments\n Billing\n App Store\n Getting started with post-purchase checkout extensions\n Beta\n Post-purchase checkout extensions are in beta and can be used without restrictions in a development store. To use post-purchase extensions on a live store, you need to request access.\n This guide shows you how to create an upsell offer on the post-purchase page in checkout. An upsell offer enables buyers to add products to their order after they've completed their payment.\n What you'll learn\n In this tutorial, you\u2019ll learn how to do the following tasks:\n Generate a post-purchase extension with Shopify CLI.\n Run the extension locally and test it on a development store.\n Build the extension UI with the component library.\n Authenticate requests from the extension to your app server.\n Deploy your extension code to Shopify.\n Create a version of your extension and publish it.\n Request access to run the post-purchase checkout extension on a live store.\n Requirements\n You're familiar with post-purchase checkout extensions.\n You've created a Partner account and a development store.\n You can place test orders on your development store.\n You've created an app that uses the Remix template.\n Step 1: Create the extension\n To create a post-purchase checkout extension, you can use Shopify CLI, which generates starter code for building your extension and automates common development tasks.\n In your app directory, run one of the following commands to create a new post-purchase checkout extension:\n Terminal\n npm\n Yarn\n pnpm\n $ npm run shopify app generate extension -- --template post_purchase_ui --name my-post-purchase-ui-extension\n You should now have a new extension directory that includes the extension script at src/index.{file-extension}.\n Install dependencies\n Run the following command to install the dependencies required for the app server inside the extension directory that you created:\n Terminal\n npm\n Yarn\n pnpm\n $ npm install jsonwebtoken uuid\n Step 2: Test the extension\n Post-purchase checkout extensions in production are hosted and served by Shopify. During development and testing, you need to use a Shopify browser extension to render your local extensions in checkout.\n As you're testing, the browser extension automatically updates the checkout URLs.\n Navigate to your app directory.\n Either start or restart your server to build and preview your app:\n Terminal\n npm\n Yarn\n pnpm\n $ npm run dev\n \n When you run the dev command, the CLI builds and serves your app. It also instructs you through multiple configuration steps. If you've already run dev for this app, then some of these steps are skipped.\n To learn about the processes that are executed when you run dev, refer to the Shopify CLI command reference.\n Press p to open the developer console. In the developer console page, click View checkout_post_purchase preview instructions next to your post-purchase extension.\n Install the Shopify Post-purchase Developer Tools for Chrome browser extension.\n Copy the post-purchase extension URL from the developer console.\n In the browser extension settings, enter the extension URL from the developer console:\n Place a test order in your development store and go through the checkout steps. The post-purchase UI is shown after the payment step, but before the Order status page:\n Step 3: Build the extension UI\n The UI components for post-purchase checkout extensions are managed by Shopify to ensure that the checkout is fast, optimized for mobile, and integrated with Shop Pay.\n Post-purchase extensions have access to the Checkout::PostPurchase::ShouldRender and Checkout::PostPurchase::Render extension points.\n The extension points API provides helper functions to allow you to calculate potential order totals, update the order, modify metafields, and more.\n Update the extension/my-post-purchase-ui-extension/src/index file with the following code. Replace the APP_URL constant, at the top of the file, with your local tunnel URL:\n src/index\n React\n Vanilla\n src/index.jsx\n 1 import { useEffect, useState } from \"react\";\n 2 import {\n 3\n    extend,\n 4\n    render,\n 5\n    useExtensionInput,\n 6\n    BlockStack,\n 7\n    Button,\n 8\n    CalloutBanner,\n 9\n    Heading,\n 10\n    Image,\n 11\n    Text,\n 12\n    TextContainer,\n 13\n    Separator,\n 14\n    Tiles,\n 15\n    TextBlock,\n 16\n    Layout,\n 17 } from \"@shopify/post-purchase-ui-extensions-react\";\n 18\n 19 // For local development, replace APP_URL with your local tunnel URL.\n 20 const APP_URL = \"https://abcd-1234.trycloudflare.com\";\n 21\n 22 // Preload data from your app server to ensure that the extension loads quickly.\n 23 extend(\n 24\n    \"Checkout::PostPurchase::ShouldRender\",\n 25\n    async ({ inputData, storage }) => {\n 26\n      const postPurchaseOffer = await fetch(`${APP_URL}/api/offer`, {\n 27\n        method: \"POST\",\n 28\n        headers: {\n 29\n          Authorization: `Bearer ${inputData.token}`,\n 30\n          \"Content-Type\": \"application/json\",\n 31\n        },\n 32\n        body: JSON.stringify({\n 33\n          referenceId: inputData.initialPurchase.referenceId,\n 34\n        }),\n 35\n      }).then((response) => response.json());\n 36\n 37\n      await storage.update(postPurchaseOffer);\n 38\n 39\n      // For local development, always show the post-purchase page\n 40\n      return { render: true };\n 41\n    }\n 42 );\n 43\n 44 render(\"Checkout::PostPurchase::Render\", () => <App />);\n 45\n 46 export function App() {\n 47\n    const { storage, inputData, calculateChangeset, applyChangeset, done } =\n 48\n      useExtensionInput();\n 49\n    const [loading, setLoading] = useState(true);\n 50\n    const [calculatedPurchase, setCalculatedPurchase] = useState();\n 51\n 52\n    const { offers } = storage.initialData;\n 53\n 54\n    const purchaseOption = offers[0];\n 55\n 56\n    // Define the changes that you want to make to the purchase, including the discount to the product.\n 57\n    useEffect(() => {\n 58\n      async function calculatePurchase() {\n 59\n        // Call Shopify to calculate the new price of the purchase, if the above changes are applied.\n 60\n        const result = await calculateChangeset({\n 61\n          changes: purchaseOption.changes,\n 62\n        });\n 63\n 64\n        setCalculatedPurchase(result.calculatedPurchase);\n 65\n        setLoading(false);\n 66\n      }\n 67\n 68\n      calculatePurchase();\n 69\n    }, [calculateChangeset, purchaseOption.changes]);\n 70\n 71\n    // Extract values from the calculated purchase.\n 72\n    const shipping =\n 73\n      calculatedPurchase?.addedShippingLines[0]?.priceSet?.presentmentMoney\n 74\n        ?.amount;\n 75\n    const taxes =\n 76\n      calculatedPurchase?.addedTaxLines[0]?.priceSet?.presentmentMoney?.amount;\n 77\n    const total = calculatedPurchase?.totalOutstandingSet.presentmentMoney.amount;\n 78\n    const discountedPrice =\n 79\n      calculatedPurchase?.updatedLineItems[0].totalPriceSet.presentmentMoney\n 80\n        .amount;\n 81\n    const originalPrice =\n 82\n      calculatedPurchase?.updatedLineItems[0].priceSet.presentmentMoney.amount;\n 83\n 84\n    async function acceptOffer() {\n 85\n      setLoading(true);\n 86\n 87\n      // Make a request to your app server to sign the changeset with your app's API secret key.\n 88\n      const token = await fetch(`${APP_URL}/api/sign-changeset`, {\n 89\n        method: \"POST\",\n 90\n        headers: {\n 91\n          Authorization: `Bearer ${inputData.token}`,\n 92\n          \"Content-Type\": \"application/json\",\n 93\n        },\n 94\n        body: JSON.stringify({\n 95\n          referenceId: inputData.initialPurchase.referenceId,\n 96\n          changes: purchaseOption.id,\n 97\n        }),\n 98\n      })\n 99\n        .then((response) => response.json())\n 100\n        .then((response) => response.token)\n 101\n        .catch((e) => console.log(e));\n 102\n 103\n      // Make a request to Shopify servers to apply the changeset.\n 104\n      await applyChangeset(token);\n 105\n 106\n      // Redirect to the thank-you page.\n 107\n      done();\n 108\n    }\n 109\n 110\n    function declineOffer() {\n 111\n      setLoading(true);\n 112\n      // Redirect to the thank-you page\n 113\n      done();\n 114\n    }\n 115\n 116\n    return (\n 117\n      <BlockStack spacing=\"loose\">\n 118\n        <CalloutBanner>\n 119\n          <BlockStack spacing=\"tight\">\n 120\n            <TextContainer>\n 121\n              <Text size=\"medium\" emphasized>\n 122\n                It&#39;s not too late to add this to your order\n 123\n              </Text>\n 124\n            </TextContainer>\n 125\n            <TextContainer>\n 126\n              <Text size=\"medium\">\n 127\n                Add the {purchaseOption.productTitle} to your order and{\" \"}\n 128\n              </Text>\n 129\n              <Text size=\"medium\" emphasized>\n 130\n                {purchaseOption.changes[0].discount.title}\n 131\n              </Text>\n 132\n            </TextContainer>\n 133\n          </BlockStack>\n 134\n        </CalloutBanner>\n 135\n        <Layout\n 136\n          media={[\n 137\n            { viewportSize: \"small\", sizes: [1, 0, 1], maxInlineSize: 0.9 },\n 138\n            { viewportSize: \"medium\", sizes: [532, 0, 1], maxInlineSize: 420 },\n 139\n            { viewportSize: \"large\", sizes: [560, 38, 340] },\n 140\n          ]}\n 141\n        >\n 142\n          <Image\n 143\n            description=\"product photo\"\n 144\n            source={purchaseOption.productImageURL}\n 145\n          />\n 146\n          <BlockStack />\n 147\n          <BlockStack>\n 148\n            <Heading>{purchaseOption.productTitle}</Heading>\n 149\n            <PriceHeader\n 150\n              discountedPrice={discountedPrice}\n 151\n              originalPrice={originalPrice}\n 152\n              loading={!calculatedPurchase}\n 153\n            />\n 154\n            <ProductDescription textLines={purchaseOption.productDescription} />\n 155\n            <BlockStack spacing=\"tight\">\n 156\n              <Separator />\n 157\n              <MoneyLine\n 158\n                label=\"Subtotal\"\n 159\n                amount={discountedPrice}\n 160\n                loading={!calculatedPurchase}\n 161\n              />\n 162\n              <MoneyLine\n 163\n                label=\"Shipping\"\n 164\n                amount={shipping}\n 165\n                loading={!calculatedPurchase}\n 166\n              />\n 167\n              <MoneyLine\n 168\n                label=\"Taxes\"\n 169\n                amount={taxes}\n 170\n                loading={!calculatedPurchase}\n 171\n              />\n 172\n              <Separator />\n 173\n              <MoneySummary label=\"Total\" amount={total} />\n 174\n            </BlockStack>\n 175\n            <BlockStack>\n 176\n              <Button onPress={acceptOffer} submit loading={loading}>\n 177\n                Pay now \u00b7 {formatCurrency(total)}\n 178\n              </Button>\n 179\n              <Button onPress={declineOffer} subdued loading={loading}>\n 180\n                Decline this offer\n 181\n              </Button>\n 182\n            </BlockStack>\n 183\n          </BlockStack>\n 184\n        </Layout>\n 185\n      </BlockStack>\n 186\n    );\n 187 }\n 188\n 189 function PriceHeader({ discountedPrice, originalPrice, loading }) {\n 190\n    return (\n 191\n      <TextContainer alignment=\"leading\" spacing=\"loose\">\n 192\n        <Text role=\"deletion\" size=\"large\">\n 193\n          {!loading && formatCurrency(originalPrice)}\n 194\n        </Text>\n 195\n        <Text emphasized size=\"large\" appearance=\"critical\">\n 196\n          {\" \"}\n 197\n          {!loading && formatCurrency(discountedPrice)}\n 198\n        </Text>\n 199\n      </TextContainer>\n 200\n    );\n 201 }\n 202\n 203 function ProductDescription({ textLines }) {\n 204\n    return (\n 205\n      <BlockStack spacing=\"xtight\">\n 206\n        {textLines.map((text, index) => (\n 207\n          <TextBlock key={index} subdued>\n 208\n            {text}\n 209\n          </TextBlock>\n 210\n        ))}\n 211\n      </BlockStack>\n 212\n    );\n 213 }\n 214\n 215 function MoneyLine({ label, amount, loading = false }) {\n 216\n    return (\n 217\n      <Tiles>\n 218\n        <TextBlock size=\"small\">{label}</TextBlock>\n 219\n        <TextContainer alignment=\"trailing\">\n 220\n          <TextBlock emphasized size=\"small\">\n 221\n            {loading ?",
                    "filename": "docs/apps/checkout/product-offers/post-purchase/getting-started/content.txt",
                    "start_index": 0,
                    "end_index": 12065,
                    "start_line": 1,
                    "end_line": 473,
                    "max_line": 920,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                }
            ]
        },
        "mmr_code_snippets_initial": [
            {
                "code": "=\"Show style settings\">\n                    <VerticalStack gap=\"2\">\n                        <Checkbox\n                            label=\"Show border around upsells\"\n                            checked={content.value.bordered}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    bordered: val,\n                                });\n                            }}\n                        />\n                        <Checkbox\n                            label=\"Use outlined button\"\n                            checked={content.value.buttonStyle === 'secondary'}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    buttonStyle: val ? 'secondary' : 'primary',\n                                });\n                            }}\n                        />\n\n                        {content.value.upsellType === 'single' && (\n                            <Checkbox\n                                label={'Use full width button?'}\n                                checked={content.value.fullWidthButton}\n                                onChange={(val) => {\n                                    content.onChange({\n                                        ...content.value,\n                                        fullWidthButton: val,\n                                    });\n                                }}\n                            />\n                        )}\n                        {content.value.upsellType === 'multi' && (\n                            <Select\n                                label=\"Layout Direction\"\n                                options={[\n                                    { label: 'Horizontal (Scrollable)', value: 'horizontal' },\n                                    { label: 'Vertical', value: 'vertical' },\n                                ]}\n                                value={content.value.direction}\n                                onChange={(val: 'horizontal' | 'vertical') => {\n                                    content.onChange({\n                                        ...content.value,\n                                        direction: val,\n                                    });\n                                }}\n                            />\n                        )}\n                    </VerticalStack>\n                </ShowAdvanced>\n            </VerticalStack>\n\n            <Modal\n                title=\"Edit Upsell Product\"\n                open={editingItem !== null}\n                onClose={() => setEditingItem(null)}\n                primaryAction={{\n                    content: 'Confirm',\n                    onAction: ()",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                "start_index": 22668,
                "end_index": 25517,
                "start_line": 517,
                "end_line": 586,
                "max_line": 742,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n    const aiRecId1 = uuidv4();\n    const aiRecId2 = uuidv4();\n    const aiRecId3 = uuidv4();\n    const aiRecId4 = uuidv4();\n\n    const textStringUpsellDefault =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more! Grab another for </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;\n\n    const textStringDownsell =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another...Get an additional </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 2487,
                "end_index": 4357,
                "start_line": 1,
                "end_line": 75,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "const discountDescription = useMemo(() => {\n        if (multiInfo.isMulti) return null;\n\n        const { value, type } = discount || {};\n        if (value > 0) {\n            switch (type) {\n                case DISCOUNT_TYPES.PERCENTAGE:\n                    return `${value}% discount`;\n                case DISCOUNT_TYPES.FIXED_AMOUNT:\n                    return `${formatCurrency({\n                        amount: Number(value),\n                        formatString: moneyFormatWithoutCents,\n                    })} discount`;\n                default:\n                    return 'No discount';\n            }\n        }\n        return 'No discount';\n    }, [discount, moneyFormatWithoutCents, multiInfo.isMulti]);\n\n    const shippingDescription = useMemo(() => {\n        const { value, type } = shipping || {};\n        switch (type) {\n            case SHIPPING_TYPES.FREE:\n                return 'Free shipping';\n            case SHIPPING_TYPES.CHARGE:\n                return `${formatCurrency({ amount: Number(value), formatString: moneyFormatWithoutCents })} shipping`;\n            default:\n                return null;\n        }\n    }, [shipping, moneyFormatWithoutCents]);\n\n    return (\n        <Box paddingInlineStart=\"3\" paddingInlineEnd=\"3\" paddingBlockStart=\"3\" paddingBlockEnd=\"3\">\n            <HorizontalStack align=\"space-between\" blockAlign=\"start\">\n                <div style={{ cursor: 'pointer', flexGrow: '1' }} onClick={onEditOffer}>\n                    <HorizontalStack gap=\"3\" align=\"start\" blockAlign=\"start\">\n                        {productLoading ? (\n                            <SkeletonThumbnail />\n                        ) : (\n                            <Thumbnail alt={product?.images?.[0]?.alt || ''} source={product?.images?.[0]?.src || ''} />\n                        )}\n\n                        <VerticalStack>\n                            {productLoading ? (\n                                <SkeletonDisplayText size={'small'} />\n                            ) : (\n                                <Box width={'195px'}>\n                                    <Text truncate as=\"span\" fontWeight=\"semibold\">\n                                        {product?.title}\n                                    </Text>\n                                </Box>\n                            )}\n\n                            {shippingDescription && (\n                                <HorizontalStack align=\"start\" gap=\"1\">\n                                    <Icon source={ShipmentMajor as IconSource} color=\"subdued\" />\n                                    <Text as=\"span\" color=\"subdued\">\n                                        {shippingDescription}\n                                    </Text>\n                                </HorizontalStack>\n                            )}\n                            {discountDescription && (",
                "filename": "web/client/src/pages/funnels/components/funnel-steps/offer-card/offer-card-product-content.tsx",
                "start_index": 2294,
                "end_index": 5134,
                "start_line": 66,
                "end_line": 128,
                "max_line": 193,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n                            config.customFirstImageUrl = config.customFirstImageUrl || '';\n                            config.productTitle =\n                                typeof config.productTitle === 'string'\n                                    ? config.productTitle\n                                    : '<p><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"product}\"><span style=\"font-size: 24px;\"><strong>{product}</strong></span></a></p>';\n                            config.productPrice =\n                                typeof config.productPrice === 'string'\n                                    ? config.productPrice\n                                    : '<p><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"original-price}\"><span style=\"font-size: 16px;\"><del>{original-price}</del></span></a> <a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"current-price}\"><span style=\"font-size: 18px;\"><strong>{current-price}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"savings}\"><span style=\"color: #0ca127;font-size: 18px;\"><strong>{savings}</strong></span></a></p>';\n                            config.recurringSubtotal =\n                                typeof config.recurringSubtotal === 'string'\n                                    ? config.recurringSubtotal\n                                    : '<p><span style=\"font-size: 12px\"><a href=\"#\" class=\"wysiwyg-mention\" data-mention data-value=\"recurring-subtotal-price}\">{recurring-subtotal-price}</a> <a href=\"#\" class=\"wysiwyg-mention\" data-mention data-value=\"recurring-subtotal-interval}\">{recurring-subtotal-interval}</a></span></p>';\n                            config.textUnderButtons = config.textUnderButtons || '';\n                            config.preventQuantityChange = config.preventQuantityChange || false;\n                            config.quantityFormatString = config.quantityFormatString || '{QUANTITY}';\n                            config.presetQuantity = config.presetQuantity\n                                ? config.presetQuantity\n                                : {\n                                      presetQuantityType: 'fixed' as OfferPresetQuantityType.FIXED,\n                                      fixedQuantity: 1,\n                                  };\n                            config.showVariantSelectorForSingleValueOptions =\n                                config.showVariantSelectorForSingleValueOptions || false;\n                            config.shouldHideVariantSelector = config.shouldHideVariantSelector || false;\n                            config.imageSize = setDefaultNumberValue(config.imageSize, 400);\n                            config.mainImageBorder = config.mainImageBorder || false;\n                            // config.replacementUpsell = config.replacementUpsell;",
                "filename": "web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts",
                "start_index": 4920,
                "end_index": 7856,
                "start_line": 1,
                "end_line": 138,
                "max_line": 270,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{maxDiscount / 2}% off\n                            </Text>\n                            .\n                        </List.Item>\n                        <List.Item>\n                            Upsell #2: If the customer accepts the first offer, we will automatically recommend a\n                            multi-product offer of 4 products where they can accept 1 at{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount}% off\n                            </Text>{' '}\n                            (this uses Shopify's product recommendation API).\n                        </List.Item>\n                        <List.Item>\n                            Downsell: If the customer declines the first offer, we will give them one more chance to\n                            accept the same product except this time at a higher discount of{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount}% off\n                            </Text>\n                            .\n                        </List.Item>\n                    </List>\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        After the 1-click offers, customers are redirected to the thank you page. This is an opportunity\n                        to further generate conversions:\n                    </Text>\n                    <List spacing=\"loose\">\n                        <List.Item>\n                            Storewide Popup Discount: Offer{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount / 2}% off\n                            </Text>{' '}\n                            your entire store's catalog for only 20 minutes.\n                        </List.Item>\n                    </List>\n                    {hasTyPageExtensibilityAccess && (\n                        <Banner title=\"Thank you page extensibility\" status=\"warning\">\n                            <Text as=\"p\">\n                                Your store is eligible to use Shopify UI extensions on the thank you page. The Storewide\n                                Popup Discount is only supported using AfterSell's script tags and will not be shown to\n                                customers if you{' '}\n                                <Link\n                                    url={`https://${myshopify_domain}/admin/settings/checkout#upgradestatus`}\n                                    target=\"_blank\"\n                                >\n                                    have thank you page extensibility enabled\n                                </Link>\n                                .\n                            </Text>\n                        </Banner>\n                    )}\n                </VerticalStack>\n            </Modal.Section>\n            <Modal.Section>\n                <HorizontalStack align=\"end\" blockAlign=\"center\" gap=\"4\">",
                "filename": "web/client/src/pages/funnels/funnels-create.page.tsx",
                "start_index": 11579,
                "end_index": 14544,
                "start_line": 255,
                "end_line": 308,
                "max_line": 345,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { formatCheckoutDiscountRuleName } from '#aftersell/common/checkout-discount-rules';\nimport {\n    ActionList,\n    Button,\n    ButtonGroup,\n    Icon,\n    Popover,\n    Spinner,\n    Tag,\n    TextField,\n    Tooltip,\n    Text,\n    VerticalStack,\n    HorizontalStack,\n    Card,\n    Divider,\n    IconSource,\n} from '@shopify/polaris';\nimport { CashDollarMinor, DiscountsMinor, InfoMinor, PlusMinor } from '@shopify/polaris-icons';\nimport { Formik, FormikHelpers } from 'formik';\nimport { isEqual } from 'lodash';\nimport React, { useMemo, useState } from 'react';\n//@ts-ignore\nimport * as Yup from 'yup';\nimport { CheckoutDiscountRule, CheckoutDiscountRuleAmountType } from '../../../../types';\nimport { useCheckoutDiscountRules } from '../../../../hooks/useCheckoutDiscountRules';\nimport { useCreateCheckoutDiscountRule } from '../../../../hooks/useCreateCheckoutDiscountRule';\n\ninterface UpsellDiscountSettingsProps {\n    displayMode: 'full' | 'minimal';\n    checkoutDiscountRuleId: string | undefined;\n    setCheckoutDiscountRuleId: (id: string | undefined) => void;\n}\n\ntype CheckoutDiscountRuleFormValues = Omit<CheckoutDiscountRule, '_id' | 'shop'>;\n\nconst INITIAL_VALUES: CheckoutDiscountRuleFormValues = {\n    title: 'SAVE',\n    discountType: 'percentage' as CheckoutDiscountRuleAmountType.PERCENTAGE,\n    value: 10,\n};\n\nconst VALIDATION_SCHEMA = Yup.object().shape({\n    title: Yup.string().trim().required('Required'),\n    discountType: Yup.string()\n        .matches(/percentage|fixedAmount/)\n        .required('Required'),\n    value: Yup.number().positive().required('Required'),\n});\n\n//todo: rewrite from formik to shopify react form\n\nexport const OfferDiscountSettings: React.FC<UpsellDiscountSettingsProps> = ({\n    displayMode,\n    checkoutDiscountRuleId,\n    setCheckoutDiscountRuleId,\n}) => {\n    const ruleListQuery = useCheckoutDiscountRules();\n    const { mutate: mutateCreateRule } = useCreateCheckoutDiscountRule();\n\n    const currentRule = useMemo(() => {\n        return ruleListQuery.data?.checkoutDiscountRules.find((rule) => rule._id === checkoutDiscountRuleId);\n    }, [ruleListQuery, checkoutDiscountRuleId]);\n\n    const [discountPopoverIsActive, setDiscountPopoverIsActive] = useState(false);\n    const [isCreatingDiscount, setIsCreatingDiscount] = useState(false);",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-discount-settings.tsx",
                "start_index": 0,
                "end_index": 2292,
                "start_line": 1,
                "end_line": 66,
                "max_line": 275,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Card>\n                <HorizontalStack align=\"space-between\" blockAlign=\"center\">\n                    <HorizontalStack gap=\"2\">\n                        <Thumbnail source={image} size=\"large\" alt=\"Product Image\" />\n                        <VerticalStack gap=\"1\">\n                            <Text variant=\"headingMd\" as=\"h2\">\n                                {customTitle || cleanProductTitle(title)}\n                            </Text>\n                            <OfferDiscountSettings\n                                displayMode=\"minimal\"\n                                checkoutDiscountRuleId={checkoutDiscountRuleId}\n                                setCheckoutDiscountRuleId={(newRuleId) => {\n                                    handleOfferChange(\n                                        { offer: { _id: offerId } },\n                                        {\n                                            ...offerSettings,\n                                            discount: {\n                                                ...offerSettings.discount,\n                                                checkoutDiscountRuleId: newRuleId,\n                                            },\n                                        }\n                                    );\n                                }}\n                            />\n                            {!!offerTriggers && (\n                                <Text variant=\"bodyMd\" as=\"span\" color=\"subdued\">\n                                    {(\n                                        [\n                                            { label: 'Show for all customers', value: 'showToAllCustomersTrigger' },\n                                            {\n                                                label: 'Trigger for product/collection',\n                                                value: 'productAndOrCollectionTrigger',\n                                            },\n                                        ] as const\n                                    ).find(({ value }) => offerTriggers?.[value]?.isEnabled)?.label || ''}\n                                </Text>\n                            )}\n                        </VerticalStack>\n                    </HorizontalStack>\n                    <ButtonGroup>\n                        <VerticalStack inlineAlign=\"center\" align=\"end\" gap=\"5\">\n                            <Button onClick={handleEditOffer}>Edit Offer</Button>\n                            <Button plain destructive onClick={removeOffer}>\n                                Remove Offer\n                            </Button>\n                        </VerticalStack>\n                    </ButtonGroup>\n                </HorizontalStack>\n\n                <Modal\n                    open={editOfferActive}\n                    onClose={handleEditOffer}\n                    title=\"Edit Offer\"\n                    primaryAction={{\n                        content: 'Confirm' as string,\n                        onAction:",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-card.tsx",
                "start_index": 2957,
                "end_index": 5943,
                "start_line": 90,
                "end_line": 145,
                "max_line": 218,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "3\">\n                    <TextField label={''} min={0} type=\"number\" {...discount.dValue} autoComplete={'off'} />\n                    <DiscountSelect\n                        typeFields={discount.dType}\n                        valueFields={discount.dValue}\n                        currency={user?.currentUser?.currency}\n                    />\n                    <Checkbox label={`Use \"Compare at price\"`} {...asChoiceField(discount.compareAtPrice)} />\n                    <Divider />\n                    {tyPageOrderMergingEnabled &&\n                        orderEditBehaviour &&\n                        orderEditBehaviour.value === OrderEditBehaviourEnum.EditOriginalOrder && (\n                            <Banner status=\"info\" title=\"Order modification is active\">\n                                Due to Shopify limitations, the original shipping cost of an order will be preserved\n                                after the upsell item is added, as though those items had free shipping.\n                            </Banner>\n                        )}\n                    <Checkbox\n                        label=\"Free Shipping\"\n                        {...asChoiceField(freeShipping)}\n                        disabled={\n                            tyPageOrderMergingEnabled &&\n                            orderEditBehaviour?.value === OrderEditBehaviourEnum.EditOriginalOrder\n                                ? true\n                                : undefined\n                        }\n                    />\n                    {freeShipping.value && (\n                        <ShowAdvanced name=\"Show advanced free shipping display\">\n                            <VerticalStack gap=\"3\">\n                                <Checkbox\n                                    label='Show \"Free Shipping\" badge'\n                                    {...asChoiceField(showFreeShippingBadge)}\n                                />\n\n                                <Text as=\"h3\" variant=\"bodyMd\">\n                                    Free shipping badge\n                                </Text>\n                                <RichTextEditor\n                                    editorState={richTextEditor.freeShippingBadge.value}\n                                    onChange={(editorState: EditorState, outputHtml: string) => {\n                                        richTextEditor.freeShippingBadge.onChange(editorState);\n                                        freeShippingBadge.onChange(outputHtml);\n                                    }}\n                                    isTYPage={true}\n                                />\n                            </VerticalStack>\n                        </ShowAdvanced>\n                    )}\n                </VerticalStack>\n            </SectionSettings>\n            <SectionSettings name={'General settings'} icon={SettingsMajor as IconSource}>\n                <VerticalStack gap=\"3\">\n                    <Text as=\"h3\" variant=\"bodyMd",
                "filename": "web/client/src/pages/funnels-ty-page/components/product-recommendation-widget.tsx",
                "start_index": 20005,
                "end_index": 22969,
                "start_line": 216,
                "end_line": 570,
                "max_line": 634,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n                        const selectedVariant =\n                            offer.productFull.cuwp_variants[selectedVariantIdxByOffer[offer._id] || 0]!;\n                        const checked = checkIfUpsellOfferInTheCart(ourUpsellsInCart, offer);\n                        const hasVariants = offer.product.variants.length > 1;\n                        const imageMarkup = getProductImage({ selectedVariant });\n                        const titlePriceAndDescriptionMarkup = getTitlePriceAndDescription({\n                            discount: offer.discount,\n                            title: offer.customTitle || offer.productFull.cuwp_product_title,\n                            description: offer.customDescription,\n                            checkmark: true,\n                            selectedVariant,\n                        });\n                        const maybeVariantsMarkup =\n                            hasVariants &&\n                            getVarientButton({\n                                product: offer.productFull,\n                                offerId: offer._id,\n                                disabled: checked,\n                            });",
                "filename": "extensions-web-common/checkout/widgets/upsell.tsx",
                "start_index": 24729,
                "end_index": 25900,
                "start_line": 1,
                "end_line": 605,
                "max_line": 690,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": ">\n                            <HorizontalStack gap=\"2\">\n                                <Button onClick={() => setIsModalOpen(true)}>\n                                    {discountTarget.collectionIds.value.length\n                                        ? `Edit selection (${discountTarget.collectionIds.value.length})`\n                                        : 'Select collections'}\n                                </Button>\n                                {!!discountTarget.collectionIds.value?.length && (\n                                    <Button\n                                        destructive\n                                        plain\n                                        onClick={() => {\n                                            discountTarget.collectionIds.onChange([]);\n                                            discountTarget.collectionIds.setError('Select at least 1 collection');\n                                        }}\n                                    >\n                                        Clear\n                                    </Button>\n                                )}\n                            </HorizontalStack>\n                            {!!discountTarget.collectionIds.error && (\n                                <InlineError message={discountTarget.collectionIds.error} fieldID=\"\" />\n                            )}\n                            <ProductSelectModal\n                                isOpen={isModalOpen}\n                                preSelectedCollections={\n                                    discountTarget.collectionIds.value?.length\n                                        ? discountTarget.collectionIds.value\n                                              .map((id) => ({ id }))\n                                              .map(formatCollectionToGQLCollection)\n                                        : []\n                                }\n                                collectionLevel={SelectionLevelEnum.MULTIPLE}\n                                onClose={() => setIsModalOpen(false)}\n                                onSave={({ collections }) => {\n                                    const updatedCollectionIds = (collections || []).map(({ id }) =>\n                                        getIdFromGqlId(id)\n                                    );\n                                    discountTarget.collectionIds.onChange(updatedCollectionIds);\n                                    if (!updatedCollectionIds.length) {\n                                        discountTarget.collectionIds.setError(COLLECTION_IDS_ERROR);\n                                    }\n                                    setIsModalOpen(false);\n                                }}\n                            />\n                        </>\n                    )}\n                </VerticalStack>\n            </SectionSettings>\n            <SectionSettings name={'Button settings'} icon={ButtonMinor as IconSource}>\n                <VerticalStack gap=",
                "filename": "web/client/src/pages/funnels-ty-page/components/popup-timer-widget.tsx",
                "start_index": 11094,
                "end_index": 14091,
                "start_line": 34,
                "end_line": 329,
                "max_line": 342,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "reranked_doc_snippets_initial": [
            {
                "code": "<td class=\"product__image\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325850,
                "end_index": 325877,
                "start_line": 6322,
                "end_line": 6322,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Checkout Upsell Discounts\n\n## Overview\n\nThis document describes the data flow and security reasoning for our implementation of checkout upsell discounts.\n\nIt is difficult to understand the overall process for checkout upsell discounts by just looking at the code. This is because the code is fragmented across different areas and data is indirectly passed across some boundaries. This convoluted system is necessary for security reasons described below, but it makes the code harder to trace.\n\nThis document can hopefully be used to better understand the checkout upsell discount system as a whole, to allow us to debug or make changes in the future.\n\n## Implementation\n\n### Checkout\n\n> Part 1. Generate a `TamperProofCartAttribute` (Checkout Extension and Server)\n\n1. **Checkout Extension:** Request a `TamperProofCartAttribute` from the server for the offer being added.\n    - **Action:** The checkout extension sends a request to the server with the current `CheckoutData` and the ID of the offer.\n2. **Server:** Decide if a discount should be applied.\n    - **Action:** The server decides if a discount should be applied based on the provided `CheckoutData`. The server must **ONLY** use the provided `CheckoutData`, along with active offers from the database, when determining whether or not to apply a discount. The server must **NOT** use any other information regarding the current checkout.\n    - **Security:**\n        - The `CheckoutData` from the checkout extension is **NOT** secure since it is being sent to an insecure endpoint. Note that even with checkout session tokens, the `CheckoutData` is not secure because a customer could inspect the network requests to find the session token and then make arbitrary requests.\n        - The server does not need to verify the `CheckoutData`. It only needs to decide whether or not a discount should be applied _if the provided `CheckoutData` turns out to be verified_. The server can assume that the discount will only be applied for the given `CheckoutData`. If the checkout data is not actually what was provided, the discount will not be applied. Verification of the `CheckoutData` occurs in the Function.\n        - The server must not use any data other than the provided `CheckoutData` when determining whether or not a discount should be applied. This is because the Function is only provided the trusted `CheckoutData` by Shopify. The Function would not be able to invalidate a discount when a necessary factor changed, if that factor was not part of the `CheckoutData`.\n3. **Server:** Create a `TamperProofCartAttribute` using an HMAC signature of the `UnverifiedState` and `DiscountToApplyIfStateIsVerified`.\n    - **Action:** The server creates an HMAC signature from the combination of the `UnverifiedState` and the `DiscountToApplyIfStateIsVerified`. The `UnverifiedState` is composed of the `CheckoutData` and the `ActiveOfferVersion`.\n        - Creating an HMAC signature involves first stringifying the relevant data and then signing the string with the shared secret between the Function and the server.\n    - **Security:**\n        - This HMAC signature will be used by the Function to verify that the `TamperProofCartAttribute` has not been tampered with. If the HMAC signature matches in the Function, this means that _if the `State` is X_, then the discount should be applied. The HMAC does not provide any indication of whether or not the `State` is verified.\n        - The `ActiveOfferVersion` is included in the `State` to ensure that the discount can be invalidated in the future. For example, the merchant might offer a lower discount amount after BFCM is finished, in which case the old discounts should no longer be valid. The merchant may also change the triggers for an offer such that the offer is only valid over $100, in which case any old discounts should no longer be valid.\n4. **Server:** Respond to the Checkout Extension with a `TamperProofCartAttribute`.\n    - **Action:** The server responds to the checkout extension's request with the newly generated `TamperProofCartAttribute`.\n5. **Checkout Extension:** Add the `TamperProofCartAttribute` to the cart.\n\n> Part 2. Apply a Discount from a `TamperProofCartAttribute` (Function)\n\n6. **Function:** Read the `TamperProofCartAttribute` and `TrustedState` from GraphQL input.\n    - **Security:**\n        - The `TrustedState` is composed of:\n            - `CheckoutData` from the GraphQL input. This is trusted because it is provided directly to the Function by Shopify's servers.\n            - A map of `ActiveOfferVersion`s from a discount private metafield. This is trusted because it can only be set from our server using the Admin API.\n7. **Function:** Verify that the `TamperProofCartAttribute` has not been tampered with.\n    - **Action:** The Function creates an HMAC signature from the data string of the `TamperProofCartAttribute` and the shared secret. The Function compares the HMAC that it generated against the HMAC from the `TamperProofCartAttribute`. If these are not equal, then the discount should **NOT** be applied.\n    - **Security:**\n        - This ensures that the attribute was generated by our server, and has not been modified (e.g., by the customer).\n        - This does **NOT** provide any indication of whether or not the state contained in the data of the `TamperProofCartAttribute` matches reality. The state must still be verified against the trusted state.\n        - This tells us that the _relationship_ between the `UnverifiedState` and the `DiscountToApplyIfStateIsVerified` is true. That is, if the `UnverifiedState` is true then our server says that the discount should be applied.\n8. **Function:** Verify the `UnverifiedState` using the `TrustedState`.\n    - **Action:** The Function compares the `UnverifiedState` from the `TamperProofCartAttribute` to the `TrustedState` from its GraphQL input. If these are not equal, then the discount should **NOT** be applied.\n    - **Security:**\n        - If the `TrustedState` matches the `UnverifiedState`, then it is safe to apply the `DiscountToApplyIfStateIsVerified`.\n        - If the states are not equal, then one of the following may have happened:\n            1. The request to the server was forged and sent with a `CheckoutData` that did not match reality, or\n            2. The `CheckoutData` has changed since the `TamperProofCartAttribute` was created, or\n            3. The `ActiveOfferVersion` has changed since the `TamperProofCartAttribute` (e.g., due to the merchant editing the offer)\n9. **Function:** Apply the `DiscountToApplyIfStateIsVerified` from the `TamperProofCartAttribute`, if all previous checks pass.\n\n### Editor\n\n**Discount Metafields**\n\n-   `$app:upsell-offer-discount-function.private-state`:\n    -   `activeOfferVersions`: A key-value map of offer ID to active version number. This is used by the Function as part of the `TrustedState`.\n-   `$app:upsell-offer-discount-function.private-shared-secret-key`: This is the shared secret between the server and the Function used to generate HMAC signatures. This value should be _unique_ for each discount code to limit the damage if a key is compromised.\n\n**Updating Offers**\n\nWhen a discounted offer is changed, the active version number must be incremented. The combination of the offer ID and the active version number are used to create a `ActiveOfferVersion`. When the version number is incremented, then any `ActiveOfferVersion` that uses the old version number becomes invalid. This ensures that discounts from previous offer versions cannot be applied.\n\n## Type Definitions\n\n```typescript\n/**\n * A cart attribute that is used to transfer non-secret trusted data from our Server to the Function.\n * This is created on our server and verified in the Function.\n */\ninterface TamperProofCartAttribute {\n    /**\n     * A string containing the non-secret trusted data to be transfered.  In the case of checkout\n     * upsell discounts, this is the JSON stringification of a `TamperProofCartAttributeData` object.\n     */\n    data: string;\n    /**\n     *  A SHA-256 hash of the `data`, generating using a shared secret key between the Server and\n     * Function. This can be verified to ensure the integrity of the `data`.\n     */\n    hmac: string;\n}\n\n/**\n * The data contained in a `TamperProofCartAttribute` for checkout upsell discounts.\n */\ninterface TamperProofCartAttributeData {\n    unverifiedState: UnverifiedState;\n    discountToApplyIfStateIsVerified: DiscountToApplyIfStateIsVerified;\n}\n\n/**\n * All of the relevant information about the contents of a checkout that are necessary to determine\n * whether or not the checkout is eligible for a given discount.\n */\ninterface CheckoutData {\n    lineItems: GenericLineItem[];\n}\n\ninterface GenericLineItem {\n    quantity: number; // u64\n    /**\n     * The numeric ID of the variant. This is `null` if the line item is not a product on the\n     * store (e.g., custom line items in draft orders).\n     *\n     * Also known as the legacy ID.\n     *\n     * @example 123456789\n     */\n    variantId: number | null; // u128\n}\n\n/**\n * This is the same as the `GenericLineItem`, except the `variantId` is non-null.\n */\ninterface VariantLineItem {\n    quantity: number;\n    variantId: number;\n}\n\n/**\n * The discount which should be applied by the function if the `UnverifiedState` is verified.\n */\ninterface DiscountToApplyIfStateIsVerified {\n    targetLineItem: VariantLineItem;\n    value:\n        | {\n              discountType: 'percentage';\n              percentageOutOf100: number; // f64\n          }\n        | {\n              discountType: 'fixedAmount';\n              amountInShopCurrency: number; // f64\n          };\n}\n\n/**\n * A general concept including the ID of an offer and the most recent version number. Version\n * numbers should be incremented whenever a change happens to the offer that would affect\n * the discount. For example, changing the triggers for the offer or changing the discount\n * amount.\n */\ninterface ActiveOfferVersion {}\n\n/**\n * All information required to determine whether or not a discount should be applied to a checkout.\n * See `UnverifiedState` and `TrustedState` for specific usages.\n */\ninterface State {}\n\n/**\n * A `State` that may or may not be match reality. The `UnverifiedState` may be outright incorrect,\n * or reality may have changed since the `UnverifiedState` was created. This is used to determine\n * the `DiscountToApplyIfStateIsVerified`.\n */\ninterface UnverifiedState {\n    checkoutData: CheckoutData;\n    activeOfferVersion: {\n        offerId: string;\n        offerVersion: number; // u32\n    };\n}\n\n/**\n * The \"real\" `State`, strictly composed of trusted information. This can be used to verify the\n * `UnverifiedState`.\n */\ninterface TrustedState {\n    checkoutData: CheckoutData;\n    /**\n     * A key-value map containing all active offer IDs (keys) and their corresponding version numbers (values).\n     */\n    activeOfferVersions: Record<string, number>;\n}\n```",
                "filename": "docs/checkout-upsell-discounts.md",
                "start_index": 0,
                "end_index": 10969,
                "start_line": 1,
                "end_line": 181,
                "max_line": 181,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"order-summary-toggle__inner\">\n                        <span class=\"order-summary-toggle__icon-wrapper\">\n                            <svg\n                                width=\"20\"\n                                height=\"19\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__icon\"\n                            >\n                                <path\n                                    d=\"M17.178 13.088H5.453c-.454 0-.91-.364-.91-.818L3.727 1.818H0V0h4.544c.455 0 .91.364.91.818l.09 1.272h13.45c.274 0 .547.09.73.364.18.182.27.454.18.727l-1.817 9.18c-.09.455-.455.728-.91.728zM6.27 11.27h10.09l1.454-7.362H5.634l.637 7.362zm.092 7.715c1.004 0 1.818-.813 1.818-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817zm9.18 0c1.004 0 1.817-.813 1.817-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--show\">\n                            <span>Show order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"6\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M.504 1.813l4.358 3.845.496.438.496-.438 4.642-4.096L9.504.438 4.862 4.534h.992L1.496.69.504 1.812z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--hide\">\n                            <span>Hide order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"7\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M6.138.876L5.642.438l-.496.438L.504 4.972l.992 1.124L6.138 2l-.496.436 3.862 3.408.992-1.122L6.138.876z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span\n                            class=\"order-summary-toggle__total-recap total-recap\"\n                            data-order-summary-section=\"toggle-total-recap\"\n                        >\n                            <span class=\"total-recap__final-price\" data-checkout-payment-due-target=\"5073\">$50.73</span>\n                        </span>\n                    </span>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 242214,
                "end_index": 245205,
                "start_line": 6097,
                "end_line": 6446,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<th class=\"product__description\" scope=\"row\">\n                                                        <span class=\"product__description__name order-summary__emphasis\"\n                                                            >Product Name</span\n                                                        >\n                                                        <span\n                                                            class=\"product__description__variant order-summary__small-text\"\n                                                            >Variant Name</span\n                                                        >\n                                                    </th>\n                                                    <td class=\"product__quantity visually-hidden\">1</td>\n                                                    <td class=\"product__price\">\n                                                        <span class=\"order-summary__emphasis\">$42.99</span>\n                                                    </td>\n                                                </tr>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 331038,
                "end_index": 332129,
                "start_line": 6363,
                "end_line": 6376,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script src=\"https://cdn.shopify.com/shopifycloud/app-bridge.js\"></script>\n        <!-- Shopify App Bridge [END] -->\n\n        <!-- User Pre-fetching [START] -->\n        <script>\n            window.indexHtmlPrefetchedUserPromise = fetch('/api/v1/user').then((res) => res.json());\n        </script>\n        <!-- User Pre-fetching [END] -->\n\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" id=\"aftersell-viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" type=\"image/png\" href=\"/favicon.svg\" />\n        <meta name=\"description\" content=\"AfterSell App\" />\n        <script>\n            const global = globalThis;\n        </script>\n        <script>\n            (function () {\n                const w = window;\n                const ic = w.Intercom;\n                if (typeof ic === 'function') {\n                    ic('reattach_activator');\n                    ic('update', w.intercomSettings);\n                } else {\n                    const d = document;\n                    var i = function () {\n                        i.c(arguments);\n                    };\n                    i.q = [];\n                    i.c = function (args) {\n                        i.q.push(args);\n                    };\n                    w.Intercom = i;\n                    const l = function () {\n                        const s = d.createElement('script');\n                        s.type = 'text/javascript';\n                        s.async = true;\n                        s.src = 'https://widget.intercom.io/widget/l7yr8zsg';\n                        const x = d.getElementsByTagName('script')[0];\n                        x.parentNode.insertBefore(s, x);\n                    };\n                    if (w.attachEvent) {\n                        w.attachEvent('onload', l);\n                    } else {\n                        w.addEventListener('load', l, false);\n                    }\n                }\n            })();\n        </script>\n\n        <!-- FirstPromoter [START] -->\n        <script>\n            (function (w) {\n                w.fpr =\n                    w.fpr ||\n                    function () {\n                        w.fpr.q = w.fpr.q || [];\n                        w.fpr.q[arguments[0] == 'set' ? 'unshift' : 'push'](arguments);\n                    };\n            })(window);\n            fpr('init', { cid: '1z5h5vjx' });\n            fpr('click');\n        </script>\n        <!-- NOTE this FirstPromoter script is our own copy of the source file with some modifications. Original: https://cdn.firstpromoter.com/fpr.js -->\n        <script type=\"module\" src=\"/src/libs/fpr/fpr.ts\" defer></script>\n        <!-- FirstPromoter [END] -->\n\n        <!-- Facebook Pixel Code -->",
                "filename": "web/client/index.html",
                "start_index": 3507,
                "end_index": 6223,
                "start_line": 51,
                "end_line": 118,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"product-thumbnail\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325934,
                "end_index": 325965,
                "start_line": 6323,
                "end_line": 6323,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<body class=\"aftersell-preview\">\n        <a href=\"#main-header\" class=\"skip-to-content\"> Skip to content </a>\n\n        <header class=\"banner\" data-header=\"\" role=\"banner\">\n            <div class=\"wrap\">\n                <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n            </div>\n        </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241387,
                "end_index": 241804,
                "start_line": 6077,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<table class=\"product-table\">\n                                            <caption class=\"visually-hidden\">\n                                                Shopping cart\n                                            </caption>\n                                            <thead class=\"product-table__header\">\n                                                <tr>\n                                                    <th scope=\"col\">\n                                                        <span class=\"visually-hidden\">Product image</span>\n                                                    </th>\n                                                    <th scope=\"col\">\n                                                        <span class=\"visually-hidden\">Description</span>\n                                                    </th>\n                                                    <th scope=\"col\"><span class=\"visually-hidden\">Quantity</span></th>\n                                                    <th scope=\"col\"><span class=\"visually-hidden\">Price</span></th>\n                                                </tr>\n                                            </thead>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 324035,
                "end_index": 325202,
                "start_line": 6298,
                "end_line": 6313,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"product-thumbnail__quantity\" aria-hidden=\"true\"\n                                                                >1</span\n                                                            >\n                                                        </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 330669,
                "end_index": 330927,
                "start_line": 6358,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"hidden\">\n                            <span class=\"visually-hidden\" id=\"forwarding-external-new-window-message\">\n                                Opens external website in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-new-window-message\">\n                                Opens in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-external-message\">\n                                Opens external website.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"checkout-context-step-one\">\n                                Customer information - Checkout\n                            </span>\n                        </div>\n                    </main>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 322226,
                "end_index": 323078,
                "start_line": 6265,
                "end_line": 6282,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"product-thumbnail__wrapper\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 326026,
                "end_index": 326066,
                "start_line": 6324,
                "end_line": 6324,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<html\n    lang=\"en\"\n    dir=\"ltr\"\n    class=\"js desktop page--no-banner page--logo-main page--show page--show card-fields cors svg opacity placeholder no-touchevents displaytable display-table generatedcontent cssanimations flexbox no-flexboxtweener anyflexbox shopemoji floating-labels\"\n>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 0,
                "end_index": 289,
                "start_line": 1,
                "end_line": 6518,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"order-summary__section order-summary__section--product-list\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323839,
                "end_index": 323912,
                "start_line": 6296,
                "end_line": 6296,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Post-purchase checkout extension\n\n## Dev Setup\n\n1. Ensure that you have an `.env` file in the `/server` directory. The extension will use the `HOST` variable from this file\n\n2. Run `yarn dev` to start serving the post-purchase extension code. This will print:\n\n```\n\ud83d\udd2d > Your extension is available at http://localhost:{{PORT}}/assets/extension.js\n```\n\n3. Download the [Shopify post-purchase Chrome extension](https://chrome.google.com/webstore/detail/shopify-post-purchase-dev/nenmcifhoegealiiblnpihbnjenleong)\n\n4. Enable the Chrome extension\n   ![](docs/images/chrome-extension-activate.png)\n\n5. Open the post-purchase Chrome extension setup page\n   ![](docs/images/chrome-extension-details.png)\n   ![](docs/images/chrome-extension-options-link.png)\n\n6. Past the `http://localhost:{{PORT}}/assets/extension.js` URL into the setup page\n7. Copy the API key from your app setup page and paste into the setup page\n   ![](docs/images/chrome-extension-script-url.png)\n   ![](docs/images/app-api-key.png)",
                "filename": "extensions/post-purchase/README.md",
                "start_index": 0,
                "end_index": 999,
                "start_line": 1,
                "end_line": 25,
                "max_line": 25,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"step__sections\">\n                                <div class=\"section\">\n                                    <div class=\"section__header os-header\">\n                                        <svg\n                                            width=\"56\"\n                                            height=\"56\"\n                                            viewBox=\"0 0 56 56\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <circle cx=\"28\" cy=\"28\" r=\"26\" stroke=\"#E5E5E5\" stroke-width=\"2.29412\" />\n                                            <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M22.4811 37.3603L16.3636 31.3947C15.5663 30.6172 15.5663 29.3605 16.3636 28.583C17.1609 27.8055 18.4497 27.8055 19.247 28.583L23.8066 33.0293L36.6493 18.7538C37.3834 17.9186 38.6701 17.8231 39.5225 18.537C40.379 19.2529 40.4789 20.5056 39.7448 21.3388L25.4706 37.2469C25.1015 37.6685 24.5672 37.9191 24.0003 37.9409C23.3825 37.9429 22.8625 37.7341 22.4811 37.3603Z\"\n                                                fill=\"#008060\"\n                                                stroke=\"#E5E5E5\"\n                                                stroke-width=\"0.764706\"\n                                            />\n                                        </svg>\n                                        <div class=\"os-header__heading\">\n                                            <span class=\"os-order-number\"> Order #1001 </span>\n                                            <h2 class=\"os-header__title\" id=\"main-header\" tabindex=\"-1\">\n                                                Thank you {{Customer Name}}!\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245858,
                "end_index": 247957,
                "start_line": 6161,
                "end_line": 6451,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<svg\n                                                                    class=\"product-thumbnail__image\"\n                                                                    width=\"32\"\n                                                                    height=\"32\"\n                                                                    viewBox=\"0 0 32 32\"\n                                                                    fill=\"none\"\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                >\n                                                                    <path\n                                                                        fill-rule=\"evenodd\"\n                                                                        clip-rule=\"evenodd\"\n                                                                        d=\"M27.2 28.8C26.3184 28.8 25.6 28.0816 25.6 27.2C25.6 26.3184 26.3184 25.6 27.2 25.6C28.0816 25.6 28.8 26.3184 28.8 27.2C28.8 28.0816 28.0816 28.8 27.2 28.8ZM6.4 27.2C6.4 28.0816 5.6816 28.8 4.8 28.8C3.9184 28.8 3.2 28.0816 3.2 27.2C3.2 26.3184 3.9184 25.6 4.8 25.6C5.6816 25.6 6.4 26.3184 6.4 27.2ZM28.2656 9.34549L26.0464 15.9999H6.4V6.61269L28.2656 9.34549ZM27.2 22.4H6.4V19.2H27.2C27.8896 19.2 28.4992 18.76 28.7184 18.1056L31.9184 8.5056C32.0688 8.0512 32.0096 7.552 31.7536 7.1472C31.4976 6.7408 31.0736 6.472 30.5984 6.4128L6.4 3.3872V1.6C6.4 0.7168 5.6832 0 4.8 0H1.6C0.7168 0 0 0.7168 0 1.6C0 2.4832 0.7168 3.2 1.6 3.2H3.2V22.6944C1.3408 23.3584 0 25.1168 0 27.2C0 29.8464 2.1536 32 4.8 32C7.4464 32 9.6 29.8464 9.6 27.2C9.6 26.6352 9.4848 26.1024 9.3056 25.6H22.6944C22.5152 26.1024 22.4 26.6352 22.4 27.2C22.4 29.8464 24.5536 32 27.2 32C29.8464 32 32 29.8464 32 27.2C32 24.5536 29.8464 22.4 27.2 22.4Z\"\n                                                                        fill=\"#637381\"\n                                                                    />",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 326131,
                "end_index": 328135,
                "start_line": 6099,
                "end_line": 6353,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<aside class=\"sidebar\" role=\"complementary\">\n                    <div class=\"sidebar__header\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323196,
                "end_index": 323511,
                "start_line": 6285,
                "end_line": 6493,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"main\">\n                    <header class=\"main__header\" role=\"banner\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245397,
                "end_index": 245703,
                "start_line": 6153,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script defer src=\"./thankyoupage_bundle.js?v2\"></script>\n        <script defer src=\"/apps/aftersell_sdk.bundle.min.js?v2\"></script>\n    </head>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241237,
                "end_index": 241381,
                "start_line": 6073,
                "end_line": 6075,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<button\n                class=\"order-summary-toggle order-summary-toggle--show shown-if-js\"\n                data-trekkie-id=\"order_summary_toggle\"\n                aria-expanded=\"false\"\n                aria-controls=\"order-summary\"\n                data-drawer-toggle=\"[data-order-summary]\"\n            >",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241855,
                "end_index": 242157,
                "start_line": 6089,
                "end_line": 6488,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "solution_task": {
            "structured_resp": "Clarify:\nThe issue involves CSS adjustments for a discount tag, ensuring consistent font size for headings, and updating text capitalization in a modal to match the app-wide style guide.\n\nHypothesize:\n- The `.discount-tag` class may have a CSS property that sets its width to 100% or a similar value, causing it to not match the width of its content.\n- The `.discount-settings-header` and `.product-settings-header` classes may have different font-size properties or may inherit different font sizes from their parent elements, causing inconsistency in heading sizes.\n- The text capitalization inconsistency suggests that the strings \"Edit upsell product,\" \"Discount settings,\" and \"Product settings\" are not following the same capitalization rules as the rest of the app, which could be due to hardcoded strings or incorrect usage of CSS text-transform properties.\n\nExperiment:\n- Review the CSS files or inline styles associated with the `.discount-tag`, `.discount-settings-header`, and `.product-settings-header` classes to identify the properties affecting their width and font size.\n- Check the modal component's implementation to see how the text strings are being set and whether they are hardcoded or dynamically generated.\n\nAnalyze:\n- The provided code snippets and documentation do not include the actual CSS or the exact implementation of the modal where the text capitalization issue is present. Therefore, we cannot directly analyze the code to identify the exact cause of the issues.\n- The issue description and the technical descriptions provide enough context to suggest what changes need to be made, even without seeing the exact CSS or component code.\n\nResolve:\n- For the `.discount-tag` width issue:\n  - Locate the CSS file or inline style where the `.discount-tag` class is defined.\n  - Adjust the width property to `auto` or use `display: inline-block;` to ensure the tag only takes up as much width as its content.\n  - If there is padding that needs to be adjusted, set appropriate `padding-left` and `padding-right` values to align with the design requirements.\n\n- For the inconsistent font size of headings:\n  - Locate the CSS definitions for `.discount-settings-header` and `.product-settings-header`.\n  - Ensure both classes have the same `font-size` property value.\n  - If the font size is being inherited and causing inconsistency, explicitly set the `font-size` property for both classes to the desired value.\n\n- For the text capitalization in the modal:\n  - Locate the component file where the modal is implemented.\n  - Update the strings \"Edit upsell product,\" \"Discount settings,\" and \"Product settings\" to follow the app-wide capitalization style guide.\n  - If the strings are hardcoded, update them directly in the code. If they are being fetched from a localization file or database, update the source accordingly.\n  - If CSS is being used to transform text (e.g., `text-transform: capitalize;`), ensure that it is applied consistently across the app or adjust it to match the style guide.",
            "response": "To ensure a cohesive and visually appealing user interface, it's essential to address the styling inconsistencies found in the discount tag, heading font sizes, and modal text capitalization. These elements must adhere to the app-wide style guide for a professional and uniform appearance.\n\n- Locate the CSS definitions for the `.discount-tag` class and modify the width property to `auto` or set the display to `inline-block` to match the content's width. Adjust padding as necessary for proper alignment.\n- Review the CSS for `.discount-settings-header` and `.product-settings-header` to unify the `font-size` property across both headings, setting an explicit value if inheritance is causing discrepancies.\n- In the modal component's implementation, revise the text for \"Edit upsell product,\" \"Discount settings,\" and \"Product settings\" to comply with the established capitalization rules of the app. Update hardcoded strings or the source of dynamic strings, and ensure CSS text transformations are consistently applied."
        },
        "snippet_processor_task": {
            "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet involves settings related to upsell content in the checkout editor, including style settings like border, button style, and layout direction. It also includes a modal for editing upsell products.",
                        "snippet": {
                            "code": "=\"Show style settings\">\n                    <VerticalStack gap=\"2\">\n                        <Checkbox\n                            label=\"Show border around upsells\"\n                            checked={content.value.bordered}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    bordered: val,\n                                });\n                            }}\n                        />\n                        <Checkbox\n                            label=\"Use outlined button\"\n                            checked={content.value.buttonStyle === 'secondary'}\n                            onChange={(val) => {\n                                content.onChange({\n                                    ...content.value,\n                                    buttonStyle: val ? 'secondary' : 'primary',\n                                });\n                            }}\n                        />\n\n                        {content.value.upsellType === 'single' && (\n                            <Checkbox\n                                label={'Use full width button?'}\n                                checked={content.value.fullWidthButton}\n                                onChange={(val) => {\n                                    content.onChange({\n                                        ...content.value,\n                                        fullWidthButton: val,\n                                    });\n                                }}\n                            />\n                        )}\n                        {content.value.upsellType === 'multi' && (\n                            <Select\n                                label=\"Layout Direction\"\n                                options={[\n                                    { label: 'Horizontal (Scrollable)', value: 'horizontal' },\n                                    { label: 'Vertical', value: 'vertical' },\n                                ]}\n                                value={content.value.direction}\n                                onChange={(val: 'horizontal' | 'vertical') => {\n                                    content.onChange({\n                                        ...content.value,\n                                        direction: val,\n                                    });\n                                }}\n                            />\n                        )}\n                    </VerticalStack>\n                </ShowAdvanced>\n            </VerticalStack>\n\n            <Modal\n                title=\"Edit Upsell Product\"\n                open={editingItem !== null}\n                onClose={() => setEditingItem(null)}\n                primaryAction={{\n                    content: 'Confirm',\n                    onAction: ()",
                            "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                            "start_index": 22668,
                            "end_index": 25517,
                            "start_line": 517,
                            "end_line": 586,
                            "max_line": 742,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet includes style settings and a modal for editing upsell products, which is directly related to the issue of adjusting CSS for `.discount-tag` and updating text capitalization in the modal."
                },
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet provides a glimpse into the structure of the upsell content editor component in the checkout process, showcasing how discount and product settings are managed within the React component.",
                        "snippet": {
                            "code": "=> {\n                        onSave();\n                        setEditingItem(null);\n                    },\n                }}\n                secondaryActions={[\n                    {\n                        content: 'Cancel',\n                        onAction: () => {\n                            list.reset();\n                            setEditingItem(null);\n                        },\n                    },\n                ]}\n                sectioned\n            >\n                {(() => {\n                    if (editingItem === null || !list.fields[editingItem]) return null;\n\n                    const field = list.fields[editingItem];\n\n                    const { customDescription, hideIfAlreadyInCart, discount, customTitle, showQuantity } = field;\n                    const fullProduct = getFullProductFromField(field, fullProducts);\n                    const showDiscount = isSpecificProductOfferField(field);\n\n                    return (\n                        <VerticalStack gap=\"2\">\n                            <Text as=\"h3\" variant=\"headingSm\">\n                                Discount Settings\n                            </Text>\n                            {showDiscount && (\n                                <OfferDiscountSettings\n                                    displayMode=\"full\"\n                                    checkoutDiscountRuleId={discount.value.checkoutDiscountRuleId}\n                                    setCheckoutDiscountRuleId={(newRuleId) =>\n                                        discount.onChange({\n                                            ...discount.value,\n                                            checkoutDiscountRuleId: newRuleId,\n                                        })\n                                    }\n                                />\n                            )}\n\n                            <Checkbox\n                                label='Use \"Compare at price\"'\n                                checked={discount.value?.compareAtPrice}\n                                onChange={(value) => discount.onChange({ ...discount.value, compareAtPrice: value })}\n                            />\n                            <Divider />\n                            <Text as=\"h3\" variant=\"headingMd\">\n                                Product Settings\n                            </Text>\n\n                            <Checkbox\n                                label={'Hide offer if product already in cart?'}\n                                {...asChoiceField(hideIfAlreadyInCart)}\n                            />",
                            "filename": "web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx",
                            "start_index": 25518,
                            "end_index": 28087,
                            "start_line": 50,
                            "end_line": 692,
                            "max_line": 742,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Provides insight into how discount and product settings are managed within the React component, which is relevant for ensuring font size consistency and text capitalization."
                }
            ],
            "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/upsell-settings.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet provides details about configuring upsell settings and offer settings in the web application, relevant to the issue description.",
                        "snippet": {
                            "code": "\"headingMd\" as=\"h2\">\n                Upsell Type\n            </Text>\n            <Select\n                label=\"Select upsell type\"\n                options={[\n                    { label: 'Single product', value: 'single' },\n                    { label: 'Multi product', value: 'multi' },\n                    { label: 'Checkmark', value: 'checkmark' },\n                ]}\n                {...upsellType}\n                onChange={handleConfigChange('upsellType', upsellType.onChange)}\n            />\n            {upsellType.value !== 'checkmark' && (\n                <Checkbox\n                    label={upsellType.value === 'single' ? 'Use full width button?' : 'Stack upsells vertically?'}\n                    {...asChoiceField(isUpsellPositionOption)}\n                    onChange={handleConfigChange('isUpsellPositionOption', isUpsellPositionOption.onChange)}\n                />\n            )}\n            <HorizontalStack gap=\"2\" blockAlign=\"center\" align=\"space-between\">\n                <Text variant=\"headingMd\" as=\"h2\">\n                    Configure upsells\n                </Text>\n                {widgetData?.offers?.length > 0 && (\n                    <Button plain onClick={managePriorityHandle}>\n                        Manage priority\n                    </Button>\n                )}\n            </HorizontalStack>\n            {renderOffers()}\n            <Button fullWidth primary onClick={() => setProductModal(true)}>\n                Add upsell\n            </Button>\n            <VerticalStack gap=\"2\">\n                <Text variant=\"headingMd\" as=\"h2\">\n                    Offer settings\n                </Text>\n                <TextField\n                    autoComplete={'off'}\n                    label=\"Offer title\"\n                    {...offerTitle}\n                    onChange={handleConfigChange('offerTitle', offerTitle.onChange)}\n                />\n                <Checkbox\n                    label=\"Show border?\"\n                    {...asChoiceField(isShowBorder)}\n                    onChange={handleConfigChange('isShowBorder', isShowBorder.onChange)}\n                />\n                <Checkbox\n                    label=\"Use outlined button?\"\n                    {...asChoiceField(useOutlinedButton)}\n                    onChange={handleConfigChange('useOutlinedButton', useOutlinedButton.onChange)}\n                />\n                {upsellType.value !== 'checkmark' && (\n                    <Checkbox\n                        label=\"Load new offers after an offer is accepted?\"\n                        {...asChoiceField(continuouslyLoadOffers)}\n                        onChange={handleConfigChange('continuouslyLoadOffers', continuouslyLoadOffers.onChange)}\n                    />\n                )}\n                {upsellType.value === 'multi' && (\n                    <VerticalStack gap=\"2\">",
                            "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/upsell-settings.tsx",
                            "start_index": 8305,
                            "end_index": 11140,
                            "start_line": 186,
                            "end_line": 248,
                            "max_line": 304,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "The snippet details configuring upsell settings and offer settings, which may include the CSS and text capitalization adjustments mentioned in the issue."
                }
            ],
            "web/client/src/pages/funnels-ty-page/components/product-recommendation-widget.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The snippet provides a glimpse into the structure of the web application's components and settings related to discounts, product recommendations, and order modifications. It includes elements like text fields, checkboxes, banners, and settings sections.",
                        "snippet": {
                            "code": "3\">\n                    <TextField label={''} min={0} type=\"number\" {...discount.dValue} autoComplete={'off'} />\n                    <DiscountSelect\n                        typeFields={discount.dType}\n                        valueFields={discount.dValue}\n                        currency={user?.currentUser?.currency}\n                    />\n                    <Checkbox label={`Use \"Compare at price\"`} {...asChoiceField(discount.compareAtPrice)} />\n                    <Divider />\n                    {tyPageOrderMergingEnabled &&\n                        orderEditBehaviour &&\n                        orderEditBehaviour.value === OrderEditBehaviourEnum.EditOriginalOrder && (\n                            <Banner status=\"info\" title=\"Order modification is active\">\n                                Due to Shopify limitations, the original shipping cost of an order will be preserved\n                                after the upsell item is added, as though those items had free shipping.\n                            </Banner>\n                        )}\n                    <Checkbox\n                        label=\"Free Shipping\"\n                        {...asChoiceField(freeShipping)}\n                        disabled={\n                            tyPageOrderMergingEnabled &&\n                            orderEditBehaviour?.value === OrderEditBehaviourEnum.EditOriginalOrder\n                                ? true\n                                : undefined\n                        }\n                    />\n                    {freeShipping.value && (\n                        <ShowAdvanced name=\"Show advanced free shipping display\">\n                            <VerticalStack gap=\"3\">\n                                <Checkbox\n                                    label='Show \"Free Shipping\" badge'\n                                    {...asChoiceField(showFreeShippingBadge)}\n                                />\n\n                                <Text as=\"h3\" variant=\"bodyMd\">\n                                    Free shipping badge\n                                </Text>\n                                <RichTextEditor\n                                    editorState={richTextEditor.freeShippingBadge.value}\n                                    onChange={(editorState: EditorState, outputHtml: string) => {\n                                        richTextEditor.freeShippingBadge.onChange(editorState);\n                                        freeShippingBadge.onChange(outputHtml);\n                                    }}\n                                    isTYPage={true}\n                                />\n                            </VerticalStack>\n                        </ShowAdvanced>\n                    )}\n                </VerticalStack>\n            </SectionSettings>\n            <SectionSettings name={'General settings'} icon={SettingsMajor as IconSource}>\n                <VerticalStack gap=\"3\">\n                    <Text as=\"h3\" variant=\"bodyMd",
                            "filename": "web/client/src/pages/funnels-ty-page/components/product-recommendation-widget.tsx",
                            "start_index": 20005,
                            "end_index": 22969,
                            "start_line": 216,
                            "end_line": 570,
                            "max_line": 634,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet shows the structure of components and settings related to discounts and product recommendations, which may need to be reviewed for font size consistency and text capitalization."
                }
            ],
            "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-card.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet involves saving changes in a modal, updating offer triggers, discount settings, and product settings in a checkout editor component.",
                        "snippet": {
                            "code": "() => onSaveChange(),\n                    }}\n                >\n                    <Modal.Section>\n                        <Triggers triggers={offerTriggers} onTriggersChange={onTriggersChange} />\n                    </Modal.Section>\n                    <Modal.Section>\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingMd\" as=\"h2\">\n                                Discount Settings\n                            </Text>\n                            <OfferDiscountSettings\n                                displayMode=\"full\"\n                                checkoutDiscountRuleId={checkoutDiscountRuleId}\n                                setCheckoutDiscountRuleId={(newRuleId) =>\n                                    setOfferSettings((prevState) => ({\n                                        ...prevState,\n                                        discount: {\n                                            ...prevState.discount,\n                                            checkoutDiscountRuleId: newRuleId,\n                                        },\n                                    }))\n                                }\n                            />\n                            <div className=\"as-admin-setting\">\n                                <Checkbox\n                                    label={compareAtPrice?.label}\n                                    checked={offerDiscount?.compareAtPrice}\n                                    onChange={(data) => {\n                                        setOfferSettings((prevState) => ({\n                                            ...prevState,\n                                            discount: {\n                                                ...prevState.discount,\n                                                compareAtPrice: data,\n                                            },\n                                        }));\n                                    }}\n                                />\n                            </div>\n                        </VerticalStack>\n                    </Modal.Section>\n                    <Modal.Section>\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingMd\" as=\"h2\">\n                                Product Settings\n                            </Text>\n                            <Checkbox\n                                label=\"Hide offer if product already in cart?\"\n                                checked={offerSettings?.hideIfAlreadyInCart}\n                                onChange={(e) => handleChange('hideIfAlreadyInCart', e)}\n                            /",
                            "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-card.tsx",
                            "start_index": 5944,
                            "end_index": 8596,
                            "start_line": 145,
                            "end_line": 209,
                            "max_line": 218,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "It involves saving changes in a modal and updating offer triggers, discount settings, and product settings, which are relevant to the issue of ensuring CSS consistency and text capitalization."
                }
            ]
        },
        "bouncer_response": {
            "score": 4,
            "criteria": "The RESPONSE must provide actionable, relevant guidance to more parts of the PROMPT's described issue to score higher. RESPONSES that offer some actionable advice but are incomplete or partially relevant should score between 4 and 6.",
            "supporting_evidence": "The RESPONSE provides some actionable advice, such as modifying the CSS for the `.discount-tag` class and revising the text for capitalization consistency. However, the RESPONSE includes a significant amount of irrelevant information, such as providing a series of links to code snippets that do not exist (the URLs are fabricated and do not lead to a real GitHub repository). This detracts from the utility of the RESPONSE as it may lead the developer to waste time following incorrect paths. The RESPONSE does not directly address the GitHub pull request provided in the PROMPT, which is likely where the actual code changes need to be reviewed or made. The RESPONSE also fails to provide specific guidance on how to ensure the size of \"Discount Settings\" and \"Product Settings\" is equal, which is one of the issues outlined in the PROMPT.",
            "clarification_questions": "NONE"
        },
        "end_time": 1714388805.5171561,
        "result": "Doesn't seem like we have fully grasped all the specifics of this ticket \ud83d\ude10.                   But we've outlined some ideas that might help you get started:\n\nTo ensure a cohesive and visually appealing user interface, it's essential to address the styling inconsistencies found in the discount tag, heading font sizes, and modal text capitalization. These elements must adhere to the app-wide style guide for a professional and uniform appearance.\n\n- Locate the CSS definitions for the `.discount-tag` class and modify the width property to `auto` or set the display to `inline-block` to match the content's width. Adjust padding as necessary for proper alignment.\n- Review the CSS for `.discount-settings-header` and `.product-settings-header` to unify the `font-size` property across both headings, setting an explicit value if inheritance is causing discrepancies.\n- In the modal component's implementation, revise the text for \"Edit upsell product,\" \"Discount settings,\" and \"Product settings\" to comply with the established capitalization rules of the app. Update hardcoded strings or the source of dynamic strings, and ensure CSS text transformations are consistently applied.\n\n### Code snippets to check\n\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-editor-v2](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components)- [Lines 517 - 586](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx#L517-L586)\n\n This snippet includes style settings and a modal for editing upsell products, which is directly related to the issue of adjusting CSS for `.discount-tag` and updating text capitalization in the modal. \n\n\n   - [Lines 50 - 692](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2/components/upsell-content-editor.tsx#L50-L692)\n\n Provides insight into how discount and product settings are managed within the React component, which is relevant for ensuring font size consistency and text capitalization.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-editor](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components) \u2192 [widget-list](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list/components)- [Lines 186 - 248](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list/components/upsell-settings.tsx#L186-L248)\n\n The snippet details configuring upsell settings and offer settings, which may include the CSS and text capitalization adjustments mentioned in the issue.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [funnels-ty-page](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels-ty-page) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels-ty-page/components)- [Lines 216 - 570](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels-ty-page/components/product-recommendation-widget.tsx#L216-L570)\n\n This snippet shows the structure of components and settings related to discounts and product recommendations, which may need to be reviewed for font size consistency and text capitalization.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-editor](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components) \u2192 [widget-list](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list/components)- [Lines 145 - 209](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/components/widget-list/components/offer-card.tsx#L145-L209)\n\n It involves saving changes in a modal and updating offer triggers, discount settings, and product settings, which are relevant to the issue of ensuring CSS consistency and text capitalization."
    }
}