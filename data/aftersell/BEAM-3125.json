{
    "id": "BEAM-3125",
    "repo_name": "testbed/aftersell",
    "title": "Prevent wrapping in tables",
    "body": "\n[IMG_1]\n\n[IMG_2]\n\nThe first case of testimonials is more important since that is the default text.\n---\nGlossary:\nimage_2: The image displays a user interface section labeled \"Content\" with a dropdown arrow indicating expandable options. Below this, there is a rounded rectangle with the heading \"Testimonials\" in bold. Inside this rectangle, there is a testimonial entry from \"Jane D.\" with the text \"I LOVE this product! All of my family was so jealous when I got it, now they all bought one too haha\". To the left of the testimonial text, there are two icons: a pencil icon for editing and a trash bin icon for deletion. On the right side of the image, outside the rectangle, there are two buttons: \"Reorder\" and \"Add testimonial\", both enclosed in a smaller rounded rectangle. Above this set of buttons, aligned to the right, is a link with an icon indicating a feature to \"Create A/B test\" with a downward arrow suggesting a dropdown menu. The overall layout suggests a content management system interface for managing testimonials.\nimage_3: The image displays a user interface section titled \"Select Triggers\" with two options: \"Show this configuration to all customers\" and \"Trigger on specific conditions,\" the latter being selected. Below this, there is a box labeled \"Trigger conditions\" with the subheading \"Applied discounts.\" Inside this box, there are three tags with sample text (\"abcdefg,\" \"hijklmnop,\" \"qrstuvwxyz\") and a numerical tag (\"123456\"), each with a close button (denoted by an \"x\"). To the right of these tags is an input field with placeholder text \"Enter discount title.\" Below the tags and input field, there is an icon resembling a trash bin. To the right of the box, there is a dropdown menu currently displaying \"AND\" and a button labeled \"Add condition.\" Another dropdown menu is aligned with the input field, displaying \"is\" with an upward-pointing caret indicating more options are available. The overall layout suggests a form for setting conditions based on applied discounts, with the ability to add more conditions or specify the logical relationship between them.\ngithub_pr_1: https://github.com/beam-commerce/aftersell/pull/1121\n\n",
    "classification": "other",
    "state": "closed",
    "repo_link": "https://github.com/testbed/aftersell.git",
    "requested_commit": null,
    "issue_tracker_identifier": "",
    "ai_cost": {
        "issue_classifier": 0.0003905,
        "issue_summarizer": 0.01433,
        "search_embedding": 6.162e-05,
        "documentation_agent": 0.00818,
        "repo_summary": 0.09375649999999999,
        "issue_star_solver": 0.1611545,
        "snippet_processor": 0.02223,
        "bouncer": 0.02737
    },
    "attachments": [
        {
            "title": "BEAM-3125-prevent-wrapping-in-tables",
            "url": "https://github.com/beam-commerce/aftersell/pull/1121",
            "content": "",
            "placeholder_tag": "github_pr_1",
            "content_type": "ExternalAssetsType.GITHUB_PR"
        }
    ],
    "inline_assets": [
        {
            "title": "",
            "url": "https://uploads.linear.app/a4f50fbf-738c-4ae7-b7ca-dc198278934f/f5d75cb5-8c4f-4edf-9931-95e280c2a5ca/34a052a9-3844-454a-9267-b073f05c4f2c",
            "content": "",
            "placeholder_tag": "image_2",
            "content_type": "ExternalAssetsType.IMAGE"
        },
        {
            "title": "",
            "url": "https://uploads.linear.app/a4f50fbf-738c-4ae7-b7ca-dc198278934f/c0936782-3fa6-4ec0-b8e3-576b942ff640/d70fa7ee-6b83-463c-925a-2814f838667c",
            "content": "",
            "placeholder_tag": "image_3",
            "content_type": "ExternalAssetsType.IMAGE"
        }
    ],
    "linked_issue_ids": [],
    "comments": [],
    "issue_summary": "Error Messages: None provided.\n\nFunction and Variable Names:\n- Testimonials\n- \"Reorder\" button\n- \"Add testimonial\" button\n- \"Create A/B test\" link\n- \"Show this configuration to all customers\" option\n- \"Trigger on specific conditions\" option\n- \"Trigger conditions\"\n- \"Applied discounts\"\n- Tags (\"abcdefg\", \"hijklmnop\", \"qrstuvwxyz\", \"123456\")\n- Close button (denoted by an \"x\")\n- Input field with placeholder \"Enter discount title\"\n- Trash bin icon\n- Dropdown menu displaying \"AND\"\n- \"Add condition\" button\n- Dropdown menu displaying \"is\"\n\nTechnical Descriptions:\n- Issue with wrapping in tables for testimonials and trigger conditions.\n- UI sections: \"Content\" and \"Select Triggers\".\n- Testimonials entry from \"Jane D.\" with specific text.\n- Editing and deletion icons for testimonials.\n- Interface for managing testimonials in a content management system.\n- Form for setting conditions based on applied discounts.\n- Logical relationship specification between conditions.\n\nOutput Format: Compact list of UI elements and associated actions or features.\n\nGitHub PR: https://github.com/beam-commerce/aftersell/pull/1121",
    "repo_summary": "The project is a complex web application divided into multiple directories such as web, extensions, and widgets. It utilizes TypeScript heavily with a variety of dependencies for linting, testing, and building. The project includes components for checkout, funnels, and post-purchase interactions. The issue at hand seems to involve preventing text wrapping within tables, likely related to the display of testimonials or other content in a structured manner.",
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1714342146.1255622,
        "classification": "other",
        "initial_code_snippets": [
            {
                "code": "\"xloose\">\n                <Heading level={1}>Post-purchase Text Samples</Heading>\n                <BlockStack>\n                    <Separator />\n                    <TextBlock emphasized size=\"xlarge\">\n                        1. Links\n                    </TextBlock>\n                    <Separator />",
                "filename": "extensions/post-purchase/src/__samples__/textFormattingSample.ts",
                "start_index": 717,
                "end_index": 1018,
                "start_line": 32,
                "end_line": 317,
                "max_line": 327,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Banner\n                                            status=\"warning\"\n                                            title={'\ud83d\ude80 Faster, Smoother, & Better Checkout Editor'}\n                                            action={{\n                                                content: 'Update Now',\n                                                loading: updateVersionLoading,\n                                                onAction: () => {\n                                                    updateCheckoutVersion('V2');\n                                                },\n                                            }}\n                                        >\n                                            <Text variant=\"bodyLg\" as=\"p\">\n                                                Explore our upgraded checkout editor. Discover new triggers, AI upsells,\n                                                multiple widget configurations, split testing and other customization\n                                                features. Upgrading is fully reversible and will automatically transfer\n                                                your current setup.\n                                            </Text>\n                                        </Banner>\n                                    )}\n                                    {currentSplitTestTab === 'A' || !currentSplitTestTab\n                                        ? widgetsVersionA\n                                        : widgetsVersionB}\n                                </VerticalStack>\n                            )}\n                        </div>\n                        <div className={styles.preview}>\n                            <div>\n                                <Preview widget={selectedWidgetData} widgetType={previewSelection?.type} />\n                                {selectedTab === 'rewardsWidget' && (\n                                    <div style={{ marginTop: '20px' }}>\n                                        <Banner title=\"\" status=\"info\">\n                                            The rewards bar widget is intended to be used with one or more upsell\n                                            widgets. If a customer sees that they're $10 away from free shipping, they\n                                            might want to accept one of your upsell products to get there!\n                                        </Banner>\n                                        <Banner\n                                            title=\"Create discount\"\n                                            action={{\n                                                content: 'Create discount',",
                "filename": "web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx",
                "start_index": 10154,
                "end_index": 12821,
                "start_line": 236,
                "end_line": 274,
                "max_line": 306,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{maxDiscount / 2}% off\n                            </Text>\n                            .\n                        </List.Item>\n                        <List.Item>\n                            Upsell #2: If the customer accepts the first offer, we will automatically recommend a\n                            multi-product offer of 4 products where they can accept 1 at{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount}% off\n                            </Text>{' '}\n                            (this uses Shopify's product recommendation API).\n                        </List.Item>\n                        <List.Item>\n                            Downsell: If the customer declines the first offer, we will give them one more chance to\n                            accept the same product except this time at a higher discount of{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount}% off\n                            </Text>\n                            .\n                        </List.Item>\n                    </List>\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        After the 1-click offers, customers are redirected to the thank you page. This is an opportunity\n                        to further generate conversions:\n                    </Text>\n                    <List spacing=\"loose\">\n                        <List.Item>\n                            Storewide Popup Discount: Offer{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount / 2}% off\n                            </Text>{' '}\n                            your entire store's catalog for only 20 minutes.\n                        </List.Item>\n                    </List>\n                    {hasTyPageExtensibilityAccess && (\n                        <Banner title=\"Thank you page extensibility\" status=\"warning\">\n                            <Text as=\"p\">\n                                Your store is eligible to use Shopify UI extensions on the thank you page. The Storewide\n                                Popup Discount is only supported using AfterSell's script tags and will not be shown to\n                                customers if you{' '}\n                                <Link\n                                    url={`https://${myshopify_domain}/admin/settings/checkout#upgradestatus`}\n                                    target=\"_blank\"\n                                >\n                                    have thank you page extensibility enabled\n                                </Link>\n                                .\n                            </Text>\n                        </Banner>\n                    )}\n                </VerticalStack>\n            </Modal.Section>\n            <Modal.Section>\n                <HorizontalStack align=\"end\" blockAlign=\"center\" gap=\"4\">",
                "filename": "web/client/src/pages/funnels/funnels-create.page.tsx",
                "start_index": 11579,
                "end_index": 14544,
                "start_line": 255,
                "end_line": 308,
                "max_line": 345,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n    const aiRecId1 = uuidv4();\n    const aiRecId2 = uuidv4();\n    const aiRecId3 = uuidv4();\n    const aiRecId4 = uuidv4();\n\n    const textStringUpsellDefault =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more! Grab another for </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;\n\n    const textStringDownsell =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another...Get an additional </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 2487,
                "end_index": 4357,
                "start_line": 1,
                "end_line": 75,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n            /**\n             * Insert containers in thankyou page\n             */\n            const createContainer = (id) => `<div id=\"${id}\" class=\"aftersell-wrap\" data-id=\"${id}\"></div>`;\n            as$('body').addClass('aftersell-page');\n            as$(as$(ORDER_CONFIRMED_ID)[0]).addClass('aftersell-order-confirm');\n            const leftSections = as$(CUSTOMER_INFO_ID);\n            if (leftSections && leftSections.length) {\n                as$(leftSections[leftSections.length - 1]).addClass('aftersell-customer-info');\n            }\n            as$(HEADER_SECTION_ID).addClass('aftersell-header-section');\n            as$(ORDER_SUMMARY_ID).addClass('aftersell-order-summary');\n            as$('.aftersell-header-section')\n                .before(createContainer(AS_BEFORE_HEADER))\n                .after(createContainer(AS_AFTER_HEADER));\n            as$('.aftersell-order-confirm')\n                .before(createContainer(AS_BEFORE_ORDER_CONFIRMED))\n                .after(createContainer(AS_AFTER_ORDER_CONFIRMED));\n            as$('.aftersell-customer-info').after(createContainer(AS_AFTER_CUSTOMER_INFO));\n            as$('.aftersell-order-summary')\n                .before(createContainer(AS_BEFORE_ORDER_SUMMARY))\n                .after(createContainer(AS_AFTER_ORDER_SUMMARY));\n\n            /**\n             * Revenue Tracking globally\n             */\n            const checkoutFromAftersell = store.get('as_goto_checkout_initiated');\n\n            /**\n             * For product recommendation widget we have to make sure that the accepted variant is checkout\n             */\n            const shopifyCheckout = (window.Shopify || {}).checkout || {};\n            const orderId = shopifyCheckout.order_id;\n            const checkoutVariantFromAftersell = +(store.get('as_goto_checkout_variant') || 0);\n            const currentWidgetName = store.get('as_current_widget_name');\n            const IS_PRODUCT_RECOMMENDATION_WIDGET = currentWidgetName === 'productRecommendation';\n            const IS_POPUPTIMER_WIDGET = currentWidgetName === 'popupTimer';\n            const purchasedItemVariants = (shopifyCheckout.line_items || []).map((item) => +item.variant_id) || [];\n            const orderContainsAcceptedVariant = purchasedItemVariants.includes(checkoutVariantFromAftersell);\n            //total_price in liquid object by default is in the local (presentment) currency\n            const orderAmount = ((shopifyCheckout.total_price_set || {}).shop_money || {}).amount;\n            const subtotalPrice = shopifyCheckout.subtotal_price;\n            const discount =\n                window.Shopify && Shopify.checkout && Shopify.checkout.discount && Shopify.checkout.discount.code;\n            const discountCode =\n                store.get(POPUP_TIMER_SAVED_DATA_SESSION_KEY) &&\n                store.get(POPUP_TIMER_SAVED_DATA_SESSION_KEY).discountCode;\n            const lineItems = shopifyCheckout.line_items;",
                "filename": "web/widgets/src/apps/widgets/index.ts",
                "start_index": 3348,
                "end_index": 6282,
                "start_line": 5,
                "end_line": 146,
                "max_line": 354,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "variant=\"bodyLg\" as=\"span\">\n                            Upsell #1\n                        </Text>\n                    </VerticalStack>\n                    <OfferCardOrAddPlaceholder\n                        funnelId={funnelId}\n                        funnelNameForm={funnelNameForm}\n                        funnelOffersForm={funnelOffersForm}\n                        splitTestsForm={splitTestsForm}\n                        offerType=\"upsell_default\"\n                        saveIfDirty={saveIfDirty}\n                        analytics={upsell1Analytics}\n                        splitTestAnalytics={upsell1SplitTestAnalytics}\n                        analyticsLoading={queryResult.isLoading}\n                    />\n                </VerticalStack>\n            </Box>\n            <HorizontalStack gap=\"10\">\n                <Box width=\"45%\">\n                    <VerticalStack gap=\"3\">\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingLg\" as=\"h5\">\n                                If accepted\n                            </Text>\n                            <Text variant=\"bodyLg\" as=\"span\">\n                                Upsell #2\n                            </Text>\n                        </VerticalStack>\n                        <OfferCardOrAddPlaceholder\n                            funnelId={funnelId}\n                            funnelNameForm={funnelNameForm}\n                            funnelOffersForm={funnelOffersForm}\n                            splitTestsForm={splitTestsForm}\n                            offerType=\"upsell_additional\"\n                            saveIfDirty={saveIfDirty}\n                            analytics={upsell2Analytics}\n                            splitTestAnalytics={upsell2SplitTestAnalytics}\n                            analyticsLoading={queryResult.isLoading}\n                        />\n                    </VerticalStack>\n                </Box>\n                <Box width=\"45%\">\n                    <VerticalStack gap=\"3\">\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingLg\" as=\"h5\">\n                                If declined\n                            </Text>\n                            <Text variant=\"bodyLg\" as=\"span\">\n                                Downsell\n                            </Text>\n                        </VerticalStack>\n                        <OfferCardOrAddPlaceholder\n                            funnelId={funnelId}\n                            funnelNameForm={funnelNameForm}\n                            funnelOffersForm={funnelOffersForm}\n                            splitTestsForm={splitTestsForm}\n                            offerType=\"downsell\"\n                            saveIfDirty={saveIfDirty}\n                            analytics={downsellAnalytics}\n                            splitTestAnalytics={downsellSplitTestAnalytics}\n                            analyticsLoading={queryResult.isLoading}",
                "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                "start_index": 25424,
                "end_index": 28396,
                "start_line": 361,
                "end_line": 710,
                "max_line": 2225,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "[\n                {\n                    appId: 'addTextWidget',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 0,\n                    config: {\n                        heading: {\n                            value: '<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, before you go!</strong></span></p>',\n                        },\n                        text: {\n                            value: '',\n                        },\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },\n                {\n                    appId: 'timer',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 1,\n                    config: {\n                        minutes: '5',\n                        heading: `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\", sans-serif;\">Your order is confirmed but you can still add the following for a limited time</span><span style=\"font-size: 18px;\"> </span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span></p>`,\n                        text: '',\n                        textColor: 'Black',\n                        backgroundColor: 'Yellow',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 24366,
                "end_index": 26314,
                "start_line": 29,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "export const UpsellsContent = z.object({\n    upsellType: z.enum(['multi', 'single', 'checkmark']),\n    offerTitle: TextSettings,\n    bordered: z.boolean(), //isShowBorder\n    buttonStyle: z.enum(['primary', 'secondary']), //alternative useOutlinedButton\n\n    skipDiscountIfOtherDiscountsAlreadyApplied: z.boolean(), //if it has hasDiscountedOffer\n    offers: z.array(UpsellOffer),\n\n    //single\n    fullWidthButton: z.boolean(), // instead isUpsellPositionOption: z.boolean(),\n\n    //multi\n    direction: z.enum(['horizontal', 'vertical']), // instead isUpsellPositionOption: z.boolean(),\n    customizeNumberOfOffers: z.boolean(),\n    numberOfOffersToShow: z.number().int().positive(),\n\n    //single & multi\n    continuouslyLoadOffers: z.boolean(),\n\n    //checkmark\n    acceptedDefault: z.boolean(),\n});\n\nconst Testimonial = z.object({\n    id: z.string().uuid(),\n    reviewerName: z.string(),\n    reviewerText: z.string(),\n});\n\nconst TestimonialsContent = z.object({\n    // title: TextSettings,\n    testimonials: z.array(Testimonial),\n});\n\nconst TextContent = z.object({\n    heading: TextSettings,\n    body: TextSettings,\n    statusLevel: z.enum(['info', 'success', 'warning', 'critical']),\n    type: z.enum(['banner', 'plain']),\n    spacing: z.nativeEnum(SpacingSize).optional(),\n});\n\nconst RewardsContent = z.object({\n    textBeforeAchieving: TextSettings,\n    textAfterAchieving: TextSettings,\n    barBackgroundColor: z.string(),\n    barForegroundColor: z.string(),\n    rewardBasis: z.enum(['item_count', 'cart_total']),\n    minimumAmount: z.number(),\n    itemCount: z.number(),\n});\n\nexport const Badge = z.object({\n    id: z.string().uuid(),\n    title: TextSettings,\n    description: TextSettings,\n    icon: z.string(),\n    appearance: z.string(),\n    customImage: z.string().nullable(),\n});\n\nconst TrustBadgesContent = z.object({\n    layout: z.enum(['vertical', 'horizontal']),\n    badges: z.array(Badge),\n});\n\nexport const Note = z.object({\n    id: z.string().uuid(),\n    text: TextSettings,\n    checked: z.boolean(),\n    showTextBox: z.boolean(),\n    textBoxPlaceholder: z.string(),\n});\n\nconst NotesContent = z.object({\n    notes: z.array(Note),\n});\n\nconst ImagesContent = z.object({\n    imageUrl: z.string(),\n    size: z.number(),\n});\n\nconst UpsellsConfiguration = z.discriminatedUnion('splitTestEnabled', [\n    RegularConfiguration.extend({ content: UpsellsContent }),\n    SplitTestConfiguration.extend({ contentA: UpsellsContent, contentB: z.union([UpsellsContent, z.literal(null)]) }),\n]);\nconst TestimonialsConfiguration = z.discriminatedUnion('splitTestEnabled', [\n    RegularConfiguration.extend({ content: TestimonialsContent }),\n    SplitTestConfiguration.extend({\n        contentA: TestimonialsContent,\n        contentB: z.union([TestimonialsContent, z.literal(null)]),\n    }),\n]);",
                "filename": "web/server/src/modules/checkout-v2/checkout-v2.dtos.ts",
                "start_index": 5222,
                "end_index": 8020,
                "start_line": 166,
                "end_line": 332,
                "max_line": 428,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "[\n                {\n                    appId: 'addTextWidget',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 0,\n                    config: {\n                        heading: {\n                            value: `<p style=\"text-align:center;\"><span style=\"font-size: 24px;\"><strong>Don't miss out on these </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>! </strong></span></p>`,\n                        },\n                        text: {\n                            value: '',\n                        },\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },\n                {\n                    appId: 'timer',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 1,\n                    config: {\n                        minutes: '5',\n                        heading: `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;\">Add any 1 of the following 4 products! <strong>Limited time offer:</strong></span><strong> </strong><a href=\"https://c9da132488ea.ngrok.io/funnels/single/62f46c743e93b55e47cce44d/editor/undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><strong> </strong></p>`,\n                        text: '',\n                        textColor: 'Black',\n                        backgroundColor: 'Blue',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 10259,
                "end_index": 12117,
                "start_line": 29,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "[\n                {\n                    appId: 'addTextWidget',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 0,\n                    config: {\n                        heading: {\n                            value: `<p style=\"text-align:center;\"><span style=\"font-size: 24px;\"><strong>Don't miss out on these </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>! </strong></span></p>`,\n                        },\n                        text: {\n                            value: '',\n                        },\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },\n                {\n                    appId: 'timer',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 1,\n                    config: {\n                        minutes: '5',\n                        heading: `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;\">Add any 1 of the following 4 products! <strong>Limited time offer:</strong></span><strong> </strong><a href=\"https://c9da132488ea.ngrok.io/funnels/single/62f46c743e93b55e47cce44d/editor/undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><strong> </strong></p>`,\n                        text: '',\n                        textColor: 'Black',\n                        backgroundColor: 'Blue',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 10259,
                "end_index": 12117,
                "start_line": 29,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "[\n                {\n                    appId: 'addTextWidget',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 0,\n                    config: {\n                        text: {\n                            config: {\n                                fontSize: 'medium',\n                                appearance: '',\n                            },\n                            value: '',\n                        },\n                        heading: {\n                            config: {\n                                fontSize: 'xlarge',\n                                appearance: '',\n                            },\n                            value: textStringUpsellDefault,\n                        },\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },\n                {\n                    appId: 'timer',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 1,\n                    config: {\n                        minutes: '5',\n                        heading: `<p style=\"text-align:center;\"><span style=\"font-size: 18px;\">Offer expires in: </span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a>&nbsp;</p>`,\n                        text: '',\n                        textColor: 'Black',\n                        backgroundColor: 'Yellow',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 5241,
                "end_index": 6873,
                "start_line": 29,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "/*\n * --- DO NOT IMPORT THIS FILE! ---\n *\n * This is NOT meant to be part of the production bundle. It is only\n * a sample to show the text formatting capabilities on the post-purchase\n * page.\n *\n * To see this example, serve this file as index.js with `shopify extension serve`\n */\n\nimport {\n    extend,\n    render,\n    Link,\n    Text,\n    Layout,\n    TextContainer,\n    TextBlock,\n    Heading,\n    BlockStack,\n    Separator,\n    InlineStack,\n} from '@shopify/post-purchase-ui-extensions-react';\n\nextend('Checkout::PostPurchase::ShouldRender', async () => ({ render: true }));",
                "filename": "extensions/post-purchase/src/__samples__/textFormattingSample.ts",
                "start_index": 0,
                "end_index": 578,
                "start_line": 1,
                "end_line": 25,
                "max_line": 327,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "config: {\n                        productPerRow: 'onePerRow',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                        showBreakdown: false,\n                        declineButtonStyle: 'link',\n                        productList: [\n                            {\n                                productId: aiRecId5,\n                                sortOrder: 1,\n                                purchaseOption: 'BOTH',\n                                quantitySelection: false,\n                                hideIfInOriginalOrder: false,\n                                isProductReviewEnabled: true,\n                                discount: {\n                                    type: 'percentage',\n                                    value: discountAmount,\n                                    compareAtPrice: true,\n                                },\n                                shipping: {\n                                    type: 'free',\n                                    value: 0,\n                                    perUnit: false,\n                                },\n                                switcher: {\n                                    enabled: false,\n                                    showAll: false,\n                                },\n                                showAllOutOfStockVariants: false,\n                                variantPreselection: 'bestMatchFromInitialPurchase',\n                                imageSize: 200,\n                                mainImageBorder: false,\n                            },\n                            {\n                                productId: aiRecId6,\n                                sortOrder: 1,\n                                purchaseOption: 'BOTH',\n                                quantitySelection: false,\n                                hideIfInOriginalOrder: false,\n                                isProductReviewEnabled: true,\n                                discount: {\n                                    type: 'percentage',\n                                    value: discountAmount,\n                                    compareAtPrice: true,\n                                },\n                                shipping: {\n                                    type: 'free',\n                                    value: 0,\n                                    perUnit: false,\n                                },\n                                switcher: {\n                                    enabled: false,\n                                    showAll: false,\n                                },\n                                showAllOutOfStockVariants: false,\n                                variantPreselection: 'bestMatchFromInitialPurchase',\n                                imageSize: 200,\n                                mainImageBorder: false,\n                            },\n                        ],\n                    },\n                }",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 43470,
                "end_index": 46447,
                "start_line": 113,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": ") => {\n    const yesButtonMarkup = (\n        <button\n            className=\"rokt-button\"\n            style={{\n                backgroundColor: config.primaryButtonBackgroundColor,\n                color: config.primaryButtonFontColor,\n                borderColor: config.primaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            Yes please\n        </button>\n    );\n    const noButtonMarkup = (\n        <button\n            className=\"rokt-button\"\n            style={{\n                backgroundColor: config.secondaryButtonBackgroundColor,\n                color: config.secondaryButtonFontColor,\n                borderColor: config.secondaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            No thanks\n        </button>\n    );\n\n    return (\n        <div className=\"rokt-content preview\">\n            <div className=\"wrapper\" style={{ fontFamily: config.textFontFamily }}>\n                <div className=\"flex column gap-2\" style={{ color: config.paragraphFontColor }}>\n                    <p className=\"text-bold\">Hi, thank you for your purchase:</p>\n                    <div className=\"flex column full-width gap-3\">\n                        <div className=\"flex column full-width\">\n                            <p className=\"text-regular\">",
                "filename": "web/client/src/pages/rokt/rokt.page.tsx",
                "start_index": 59509,
                "end_index": 61086,
                "start_line": 52,
                "end_line": 1292,
                "max_line": 1493,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\">\n                            Customizations\n                        </Text>\n                    </HorizontalStack>\n                    <ColorInput label={'Compare price color'} {...displayPrice.comparePriceColor} />\n                    <ColorInput label={'Sale price color'} {...displayPrice.salePriceColor} />\n                    <Checkbox label={'Show compare at price'} {...asChoiceField(displayPrice.showCompareAtPrice)} />\n                    <Checkbox label={'Show discount'} {...asChoiceField(displayPrice.showDiscount)} />\n                    <Select\n                        {...displayPrice.priceLayout}\n                        label={'Display settings'}\n                        options={[\n                            { label: 'Horizontal', value: 'horizontal' },\n                            { label: 'Horizontal in one line (no wrap)', value: 'one-line' },\n                            { label: 'Vertical', value: 'vertical' },\n                            { label: 'Conditional layout', value: 'conditional' },\n                        ]}\n                        onChange={(value: 'horizontal' | 'vertical' | 'conditional' | 'one-line') => {\n                            displayPrice.priceLayout.onChange(value);\n                        }}\n                    />\n                </VerticalStack>\n            </SectionSettings>\n            <SectionSettings name={'Shop button settings'} icon={BuyButtonMajor as IconSource}>\n                <VerticalStack gap=\"3\">\n                    <HorizontalStack align={'space-between'} blockAlign=\"center\" wrap={false}>\n                        <Text as=\"h3\" variant=\"bodyMd\">\n                            Shop CTA button\n                        </Text>\n                        <Text as=\"p\" variant=\"bodySm\" color=\"subdued\">\n                            Customizations\n                        </Text>\n                    </HorizontalStack>\n                    <TextField label={'Button text'} autoComplete=\"off\" {...shopNow.buttonText} />\n                    <ColorInput label={'Background color'} {...shopNow.buttonBackgroundColor} />\n                    <ColorInput label={'Text color'} {...shopNow.buttonTextColor} />\n                    <Checkbox label=\"Sticky bottom button\" {...asChoiceField(shopNow.stickyBottomButton)} />\n                </VerticalStack>\n            </SectionSettings>\n            <SectionSettings name=\"Other settings\" icon={ToolsMajor as IconSource}>\n                <VerticalStack gap=\"3\">\n                    <Checkbox\n                        label=\"Hide products that are in the original order\"\n                        {...asChoiceField(hideOfferIfPurchased)}\n                    />\n                    <Checkbox label=\"Hide out of stock variants",
                "filename": "web/client/src/pages/funnels-ty-page/components/product-recommendation-widget.tsx",
                "start_index": 28040,
                "end_index": 30760,
                "start_line": 216,
                "end_line": 589,
                "max_line": 634,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<RangeSlider\n                            onChange={(val: number) => {\n                                onChangeConfig({\n                                    imageSize: val,\n                                });\n                            }}\n                            output\n                            step={50}\n                            value={config.imageSize!}\n                            label=\"Image size\"\n                            min={150}\n                            max={450}\n                            prefix={<p>150</p>}\n                            suffix={<p>450</p>}\n                        />\n                    )}\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Heading\n                    </Text>\n                    <RichTextEditor\n                        isMultiProduct={isMultiProduct}\n                        editorState={fields.heading.value}\n                        offerVersion={offerVersion}\n                        onChange={getHandleChangeRichTextEditor('heading')}\n                        isPostPurchase\n                    />\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Body text\n                    </Text>\n                    <RichTextEditor\n                        isMultiProduct={isMultiProduct}\n                        editorState={fields.text.value}\n                        offerVersion={offerVersion}\n                        onChange={getHandleChangeRichTextEditor('text')}\n                        isPostPurchase\n                    />\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Image\n                    </Text>\n                    <ImageUploader\n                        onUpload={(result: { file: string }) => {\n                            onChangeConfig({\n                                file: result,\n                            });\n                        }}\n                        onDelete={() => {\n                            onChangeConfig({\n                                file: undefined,\n                            });\n                        }}\n                        file={config.file ? config.file : null}\n                    />\n                    {offerVersion === 'v2' && (\n                        <>\n                            <RangeSlider\n                                onChange={(val: number) => {\n                                    onChangeConfig({ topPadding: val });\n                                }}\n                                output\n                                step={2}\n                                value={config.topPadding ?? 0}\n                                label=\"Top padding\"\n                                min={0}\n                                max={10}\n                                prefix={<p>0</p>}\n                                suffix={<p>10</p>}\n                            />",
                "filename": "web/client/src/pages/funnels/components/text-and-image-widget-settings.tsx",
                "start_index": 9751,
                "end_index": 12619,
                "start_line": 119,
                "end_line": 198,
                "max_line": 217,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\">\n                                Product price\n                            </Text>\n                            <RichTextEditor\n                                isMultiProduct={false}\n                                editorState={fields.productPrice.value}\n                                offerVersion={'v2'}\n                                onChange={getHandleChangeRichTextEditor('productPrice')}\n                                isPostPurchase\n                            />\n                        </>\n                    )}\n                    {isSingleConfig(config, isSingleOfferConfig) && (\n                        <>\n                            <Text variant=\"bodyMd\" as=\"p\">\n                                Offer description\n                            </Text>\n                            <RichTextEditor\n                                isMultiProduct={!isSingleOfferConfig}\n                                editorState={fields.offerDescription.value}\n                                offerVersion={offerVersion}\n                                onChange={getHandleChangeRichTextEditor('offerDescription')}\n                                isPostPurchase\n                            />\n                        </>\n                    )}\n                    {/* NOTE: this setting is in the button settings for single product, but moved here for multi-product because\n                              the button settings for multi-product apply to the entire offer, but we want the text to be specific\n                              to the product */}\n                    {isConfigV2(config, offerVersion) && isMultiConfig(config) && (\n                        <>\n                            <Text variant=\"bodyMd\" as=\"p\">\n                                Text under accept Button\n                            </Text>\n                            <RichTextEditor\n                                isMultiProduct={!isSingleOfferConfig}\n                                editorState={fields.textUnderButtons.value}\n                                offerVersion={'v2'}\n                                onChange={getHandleChangeRichTextEditor('textUnderButtons')}\n                                isPostPurchase\n                            />\n                        </>\n                    )}\n                    {isConfigV2(config, offerVersion) &&\n                        hasSubscriptionVariants &&\n                        config.purchaseOption !== PURCHASE_OPTION_NAMES.ONE_TIME && (\n                            <ShowAdvanced name=\"Show advanced text fields\">\n                                <VerticalStack gap=\"3\">\n                                    <Text variant=\"bodyMd\" as=\"p\">\n                                        Recurring subtotal\n                                    </Text>\n                                    <Text variant=\"bodySm\" as=\"p\" color=\"subdued",
                "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                "start_index": 64420,
                "end_index": 67273,
                "start_line": 338,
                "end_line": 1266,
                "max_line": 1401,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "The quantity will be rounded up to the nearest whole number. Enter 50% for half, 100% for the same quantity, 200% for double, etc. Preview is based on an initial purchase with quantity of 5.\"\n                                        />\n                                    )}\n                                </VerticalStack>\n                            </ShowAdvanced>\n                        )}\n                        <Checkbox\n                            label={\n                                isSingleProduct\n                                    ? 'Skip offer if product is in original order'\n                                    : 'Hide product if product is in original order'\n                            }\n                            // Even if this setting somehow got enabled for most/least expensive products, we will show\n                            // that it is disabled since the offer will be shown anyways.\n                            checked={config.hideIfInOriginalOrder && !isMostOrLeastExpensiveProduct}\n                            onChange={(val) =>\n                                onChangeConfig({\n                                    hideIfInOriginalOrder: val,\n                                })\n                            }\n                            disabled={isMostOrLeastExpensiveProduct}\n                            helpText={\n                                isMostOrLeastExpensiveProduct\n                                    ? 'This setting is disabled because most/least expensive products will always be from the original order'\n                                    : ''\n                            }\n                        />\n                        {isSingleConfigV2(config, offerVersion) && (\n                            <Checkbox\n                                label=\"Show shipping and tax breakdown\"\n                                checked={config?.showBreakdown}\n                                onChange={(val) =>\n                                    onChangeConfig({\n                                        showBreakdown: val,\n                                    })\n                                }\n                            />\n                        )}\n                    </VerticalStack>\n                    {isConfigV2(config, offerVersion) && (\n                        <>\n                            <Text variant=\"bodyMd\" as=\"p\">\n                                Product title\n                            </Text>\n                            <RichTextEditor\n                                isMultiProduct={false}\n                                editorState={fields.productTitle.value}\n                                offerVersion={'v2'}\n                                onChange={getHandleChangeRichTextEditor('productTitle')}\n                                isPostPurchase\n                            />\n                            <Text variant=\"bodyMd\" as=\"p",
                "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                "start_index": 61516,
                "end_index": 64420,
                "start_line": 1164,
                "end_line": 1263,
                "max_line": 1401,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\"space-between\">\n                    <CheckboxTriggerName\n                        label=\"Enable customer order history trigger?\"\n                        disabled={disabled}\n                        {...fields.checked}\n                    />\n                </HorizontalStack>\n                {fields.checked.value && (\n                    <VerticalStack gap=\"4\">\n                        <HorizontalStack gap=\"2\">\n                            <Select\n                                label=\"\"\n                                disabled={settingsDisabled}\n                                options={[\n                                    { label: 'Customer previously ordered', value: 'include' as IncludeOrExclude },\n                                    {\n                                        label: 'Customer has not previously ordered',\n                                        value: 'exclude' as IncludeOrExclude,\n                                    },\n                                ]}\n                                value={fields.includeOrExclude.value}\n                                onChange={(val: IncludeOrExclude) => fields.includeOrExclude.onChange(val)}\n                            />\n                            <Button disabled={settingsDisabled} onClick={() => setOpen(true)}>\n                                {selectionCount ? `Edit selection (${selectionCount})` : 'Select'}\n                            </Button>\n                            <ProductSelectModal\n                                isOpen={open}\n                                onClose={() => setOpen(false)}\n                                onSave={(arg) => {\n                                    fields.products.onChange(getProductIdsFromGQLEntity(arg.products || [], true));\n                                    fields.collections.onChange(getCollectionsIdsFromGQLEntity(arg.collections || []));\n                                    setOpen(false);\n                                }}\n                                productLevel={SelectionLevelEnum.MULTIPLE}\n                                collectionLevel={SelectionLevelEnum.MULTIPLE}\n                                preSelectedProducts={(fields.products.value || []).map(formatProductToGQLProduct)}\n                                preSelectedCollections={(fields.collections.value || []).map(\n                                    formatCollectionToGQLCollection\n                                )}\n                            />\n                        </HorizontalStack>\n\n                        <Text variant=\"bodyMd\" as=\"p\" color=\"subdued\">\n                            This only checks previous orders placed by the customer. It does not include the current\n                            order that the customer is about to place. You can use the product/collection or exclusion\n                            triggers to add conditions based on the current order.\n                        </Text>\n\n                        {hasAllRequiredScopes || !additionalOauthScopes ?",
                "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                "start_index": 52348,
                "end_index": 55340,
                "start_line": 770,
                "end_line": 1282,
                "max_line": 2225,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<>\n            <HorizontalStack gap=\"4\" wrap align=\"center\">\n                <SingleCard\n                    icon={BuyButtonMajor as IconSource}\n                    planName=\"Post Purchase Only\"\n                    planId={availablePlanIds.POST_PURCHASE_ONLY}\n                    planDescription=\"Create post purchase upsells\"\n                    price=\"Free\"\n                    buttonText=\"Try for free\"\n                    priceDescription=\"+ usage up to $799/month\"\n                    hasUsage\n                    openPricingModal={openPricingModal}\n                    benefits={[\n                        'Unlimited offer funnels',\n                        'Customize with widgets',\n                        'Precise targeting',\n                        'A/B testing',\n                        'Robust analytics',\n                    ]}\n                />\n                <SingleCard\n                    icon={CheckoutMajor as IconSource}\n                    planName=\"Checkout Only\"\n                    planId={availablePlanIds.CHECKOUT_ONLY}\n                    planDescription=\"Customize your Shopify checkout\"\n                    price=\"$99\"\n                    buttonText=\"Try for free\"\n                    priceDescription=\"per month\"\n                    openPricingModal={openPricingModal}\n                    benefits={['Unlimited checkout widgets', 'Precise targeting', 'A/B testing', 'Robust analytics']}\n                />",
                "filename": "web/client/src/pages/onboarding/onboarding-pricing.page.tsx",
                "start_index": 11765,
                "end_index": 13200,
                "start_line": 293,
                "end_line": 421,
                "max_line": 461,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "initial_doc_snippets": [
            {
                "code": "<body class=\"aftersell-preview\">\n        <a href=\"#main-header\" class=\"skip-to-content\"> Skip to content </a>\n\n        <header class=\"banner\" data-header=\"\" role=\"banner\">\n            <div class=\"wrap\">\n                <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n            </div>\n        </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241387,
                "end_index": 241804,
                "start_line": 6077,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"hidden\">\n                            <span class=\"visually-hidden\" id=\"forwarding-external-new-window-message\">\n                                Opens external website in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-new-window-message\">\n                                Opens in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-external-message\">\n                                Opens external website.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"checkout-context-step-one\">\n                                Customer information - Checkout\n                            </span>\n                        </div>\n                    </main>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 322226,
                "end_index": 323078,
                "start_line": 6265,
                "end_line": 6282,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<html\n    lang=\"en\"\n    dir=\"ltr\"\n    class=\"js desktop page--no-banner page--logo-main page--show page--show card-fields cors svg opacity placeholder no-touchevents displaytable display-table generatedcontent cssanimations flexbox no-flexboxtweener anyflexbox shopemoji floating-labels\"\n>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 0,
                "end_index": 289,
                "start_line": 1,
                "end_line": 6518,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<table class=\"product-table\">\n                                            <caption class=\"visually-hidden\">\n                                                Shopping cart\n                                            </caption>\n                                            <thead class=\"product-table__header\">\n                                                <tr>\n                                                    <th scope=\"col\">\n                                                        <span class=\"visually-hidden\">Product image</span>\n                                                    </th>\n                                                    <th scope=\"col\">\n                                                        <span class=\"visually-hidden\">Description</span>\n                                                    </th>\n                                                    <th scope=\"col\"><span class=\"visually-hidden\">Quantity</span></th>\n                                                    <th scope=\"col\"><span class=\"visually-hidden\">Price</span></th>\n                                                </tr>\n                                            </thead>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 324035,
                "end_index": 325202,
                "start_line": 6298,
                "end_line": 6313,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"section__content\">\n                                                    <div\n                                                        class=\"section__content__column section__content__column--half\"\n                                                    >\n                                                        <div class=\"text-container\">\n                                                            <h3 class=\"heading-3\">Contact information</h3>\n\n                                                            <p class=\"as-dummy-line\"></p>\n\n                                                            <h3 class=\"heading-3\">Shipping address</h3>\n                                                            <address class=\"address\">\n                                                                <p class=\"as-dummy-line\"></p>\n                                                                <p class=\"as-dummy-line as-w80\"></p>\n                                                                <p class=\"as-dummy-line as-w40\"></p>\n                                                            </address>\n\n                                                            <h3 class=\"heading-3\">Shipping method</h3>\n                                                            <p class=\"as-dummy-line as-w40\"></p>\n                                                        </div>\n                                                    </div>\n\n                                                    <div\n                                                        class=\"section__content__column section__content__column--half\"\n                                                    >\n                                                        <div class=\"text-container\">\n                                                            <h3 class=\"heading-3\">Payment method</h3>\n                                                            <ul class=\"payment-method-list\">\n                                                                <li class=\"payment-method-list__item\">\n                                                                    <p class=\"as-dummy-line as-w80\"></p>\n                                                                </li>\n                                                            </ul>\n\n                                                            <h3 class=\"heading-3\">Billing address</h3>\n                                                            <address class=\"address\">\n                                                                <p class=\"as-dummy-line\"></p>\n                                                                <p class=\"as-dummy-line as-w80\"></p>\n                                                                <p class=\"as-dummy-line as-w40\"></p>\n                                                            </address>\n                                                        </div>\n                                                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318877,
                "end_index": 321837,
                "start_line": 6191,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box\">\n                                            <div class=\"content-box__row content-box__row--no-border\">\n                                                <h2>Customer information</h2>\n                                            </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318496,
                "end_index": 318753,
                "start_line": 6192,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<td class=\"product__image\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325850,
                "end_index": 325877,
                "start_line": 6322,
                "end_line": 6322,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"step__sections\">\n                                <div class=\"section\">\n                                    <div class=\"section__header os-header\">\n                                        <svg\n                                            width=\"56\"\n                                            height=\"56\"\n                                            viewBox=\"0 0 56 56\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <circle cx=\"28\" cy=\"28\" r=\"26\" stroke=\"#E5E5E5\" stroke-width=\"2.29412\" />\n                                            <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M22.4811 37.3603L16.3636 31.3947C15.5663 30.6172 15.5663 29.3605 16.3636 28.583C17.1609 27.8055 18.4497 27.8055 19.247 28.583L23.8066 33.0293L36.6493 18.7538C37.3834 17.9186 38.6701 17.8231 39.5225 18.537C40.379 19.2529 40.4789 20.5056 39.7448 21.3388L25.4706 37.2469C25.1015 37.6685 24.5672 37.9191 24.0003 37.9409C23.3825 37.9429 22.8625 37.7341 22.4811 37.3603Z\"\n                                                fill=\"#008060\"\n                                                stroke=\"#E5E5E5\"\n                                                stroke-width=\"0.764706\"\n                                            />\n                                        </svg>\n                                        <div class=\"os-header__heading\">\n                                            <span class=\"os-order-number\"> Order #1001 </span>\n                                            <h2 class=\"os-header__title\" id=\"main-header\" tabindex=\"-1\">\n                                                Thank you {{Customer Name}}!\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245858,
                "end_index": 247957,
                "start_line": 6161,
                "end_line": 6451,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"product-thumbnail__wrapper\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 326026,
                "end_index": 326066,
                "start_line": 6324,
                "end_line": 6324,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"order-summary-toggle__inner\">\n                        <span class=\"order-summary-toggle__icon-wrapper\">\n                            <svg\n                                width=\"20\"\n                                height=\"19\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__icon\"\n                            >\n                                <path\n                                    d=\"M17.178 13.088H5.453c-.454 0-.91-.364-.91-.818L3.727 1.818H0V0h4.544c.455 0 .91.364.91.818l.09 1.272h13.45c.274 0 .547.09.73.364.18.182.27.454.18.727l-1.817 9.18c-.09.455-.455.728-.91.728zM6.27 11.27h10.09l1.454-7.362H5.634l.637 7.362zm.092 7.715c1.004 0 1.818-.813 1.818-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817zm9.18 0c1.004 0 1.817-.813 1.817-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--show\">\n                            <span>Show order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"6\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M.504 1.813l4.358 3.845.496.438.496-.438 4.642-4.096L9.504.438 4.862 4.534h.992L1.496.69.504 1.812z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--hide\">\n                            <span>Hide order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"7\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M6.138.876L5.642.438l-.496.438L.504 4.972l.992 1.124L6.138 2l-.496.436 3.862 3.408.992-1.122L6.138.876z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span\n                            class=\"order-summary-toggle__total-recap total-recap\"\n                            data-order-summary-section=\"toggle-total-recap\"\n                        >\n                            <span class=\"total-recap__final-price\" data-checkout-payment-due-target=\"5073\">$50.73</span>\n                        </span>\n                    </span>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 242214,
                "end_index": 245205,
                "start_line": 6097,
                "end_line": 6446,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script src=\"https://cdn.shopify.com/shopifycloud/app-bridge.js\"></script>\n        <!-- Shopify App Bridge [END] -->\n\n        <!-- User Pre-fetching [START] -->\n        <script>\n            window.indexHtmlPrefetchedUserPromise = fetch('/api/v1/user').then((res) => res.json());\n        </script>\n        <!-- User Pre-fetching [END] -->\n\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" id=\"aftersell-viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" type=\"image/png\" href=\"/favicon.svg\" />\n        <meta name=\"description\" content=\"AfterSell App\" />\n        <script>\n            const global = globalThis;\n        </script>\n        <script>\n            (function () {\n                const w = window;\n                const ic = w.Intercom;\n                if (typeof ic === 'function') {\n                    ic('reattach_activator');\n                    ic('update', w.intercomSettings);\n                } else {\n                    const d = document;\n                    var i = function () {\n                        i.c(arguments);\n                    };\n                    i.q = [];\n                    i.c = function (args) {\n                        i.q.push(args);\n                    };\n                    w.Intercom = i;\n                    const l = function () {\n                        const s = d.createElement('script');\n                        s.type = 'text/javascript';\n                        s.async = true;\n                        s.src = 'https://widget.intercom.io/widget/l7yr8zsg';\n                        const x = d.getElementsByTagName('script')[0];\n                        x.parentNode.insertBefore(s, x);\n                    };\n                    if (w.attachEvent) {\n                        w.attachEvent('onload', l);\n                    } else {\n                        w.addEventListener('load', l, false);\n                    }\n                }\n            })();\n        </script>\n\n        <!-- FirstPromoter [START] -->\n        <script>\n            (function (w) {\n                w.fpr =\n                    w.fpr ||\n                    function () {\n                        w.fpr.q = w.fpr.q || [];\n                        w.fpr.q[arguments[0] == 'set' ? 'unshift' : 'push'](arguments);\n                    };\n            })(window);\n            fpr('init', { cid: '1z5h5vjx' });\n            fpr('click');\n        </script>\n        <!-- NOTE this FirstPromoter script is our own copy of the source file with some modifications. Original: https://cdn.firstpromoter.com/fpr.js -->\n        <script type=\"module\" src=\"/src/libs/fpr/fpr.ts\" defer></script>\n        <!-- FirstPromoter [END] -->\n\n        <!-- Facebook Pixel Code -->",
                "filename": "web/client/index.html",
                "start_index": 3507,
                "end_index": 6223,
                "start_line": 51,
                "end_line": 118,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row content-box__row--no-padding\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 248190,
                "end_index": 248249,
                "start_line": 6193,
                "end_line": 6193,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<tbody class=\"total-line-table__tbody\">\n                                            <tr class=\"total-line total-line--subtotal\">\n                                                <th class=\"total-line__name\" scope=\"row\">Subtotal</th>\n                                                <td class=\"total-line__price\">\n                                                    <span\n                                                        class=\"order-summary__emphasis\"\n                                                        data-checkout-subtotal-price-target=\"4299\"\n                                                    >\n                                                        $42.99\n                                                    </span>\n                                                </td>\n                                            </tr>\n\n                                            <tr class=\"total-line total-line--shipping\">\n                                                <th class=\"total-line__name\" scope=\"row\">\n                                                    <span> Shipping </span>\n                                                </th>\n                                                <td class=\"total-line__price\">\n                                                    <span\n                                                        class=\"order-summary__emphasis\"\n                                                        data-checkout-total-shipping-target=\"0\"\n                                                    >\n                                                        Free\n                                                    </span>\n                                                </td>\n                                            </tr>\n\n                                            <tr class=\"total-line total-line--taxes\" data-checkout-taxes=\"\">\n                                                <th class=\"total-line__name\" scope=\"row\">Taxes</th>\n                                                <td class=\"total-line__price\">\n                                                    <span\n                                                        class=\"order-summary__emphasis\"\n                                                        data-checkout-total-taxes-target=\"774\"\n                                                        >$7.74</span\n                                                    >\n                                                </td>\n                                            </tr>\n                                        </tbody>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 333285,
                "end_index": 335837,
                "start_line": 6396,
                "end_line": 6433,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script defer src=\"./thankyoupage_bundle.js?v2\"></script>\n        <script defer src=\"/apps/aftersell_sdk.bundle.min.js?v2\"></script>\n    </head>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241237,
                "end_index": 241381,
                "start_line": 6073,
                "end_line": 6075,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318798,
                "end_index": 318828,
                "start_line": 6214,
                "end_line": 6214,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<th class=\"product__description\" scope=\"row\">\n                                                        <span class=\"product__description__name order-summary__emphasis\"\n                                                            >Product Name</span\n                                                        >\n                                                        <span\n                                                            class=\"product__description__variant order-summary__small-text\"\n                                                            >Variant Name</span\n                                                        >\n                                                    </th>\n                                                    <td class=\"product__quantity visually-hidden\">1</td>\n                                                    <td class=\"product__price\">\n                                                        <span class=\"order-summary__emphasis\">$42.99</span>\n                                                    </td>\n                                                </tr>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 331038,
                "end_index": 332129,
                "start_line": 6363,
                "end_line": 6376,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"main\">\n                    <header class=\"main__header\" role=\"banner\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245397,
                "end_index": 245703,
                "start_line": 6153,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "</table>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 332223,
                "end_index": 332231,
                "start_line": 6378,
                "end_line": 6450,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"order-summary__section order-summary__section--product-list\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323839,
                "end_index": 323912,
                "start_line": 6296,
                "end_line": 6296,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"wrap\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241571,
                "end_index": 241589,
                "start_line": 6081,
                "end_line": 6152,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "intial_documentation_sources": {
            "shopify": {
                "collection": "shopify_documentation",
                "reason_for_relevance": "The issue involves UI elements and actions in a content management system, which may be part of a Shopify store. Shopify's documentation could provide necessary information on managing testimonials, setting conditions for discounts, and specifying logical relationships between conditions, which are relevant to solving the issue."
            }
        },
        "external_documentation_snippets": {
            "external_shopify": [
                {
                    "code": "Deployment\n Distribution\n Billing\n App Store\n UX guidelines for discounts\n A great buyer-facing user experience (UX) for discounts is important to the success of app users. This guide explains important considerations for implementing discounts in user interfaces (UIs).\n User interface guidelines\n Apps should consider how discounted products appear in multiple places on the online store, such as product pages, collection pages, search results, featured product sections on the home page, and quick view modals on product cards. Surfacing potential savings in these areas can further encourage customers to purchase.\n Discounts information is displayed in the following components of the online store:\n Product forms\n Cart items\n Order details\n When building your discount types, first decide if your discount will apply to specific products in an order, to the order as a whole, or to the shipping for the order. If your discount could belong to multiple categories, then you should create separate discount types for each.\n Note\n The class of the discount type that you create is set as a static value in a .toml file when your discount script is uploaded. The class can\u2019t be changed later.\n Whether a discount is a product, order, or shipping discount determines what options users have for allowing it to combine with other discounts at checkout.\n Navigation\n The discount details page has a breadcrumb button (the arrow \u2190 next to the page title). The breadcrumb button must always go back to the page that the user came from. For example, when the details page is reached using the Discounts page of the Shopify admin, the breadcrumb button must return the user to the Discounts page.\n If you choose to link to your discount details page from somewhere else, such as a page in your app, then the breadcrumb button should return the user to that page.\n Discount page\n Use the provided template and React component library to build the details page (create/edit page) for your discount type.\n The discount details page has a number of standard cards:\n Method\n Minimum purchase requirements\n Customer eligibility\n Maximum uses\n Combinations\n Active dates\n Best practices\n Implement everything in the provided template, only removing elements when they don\u2019t make logical sense for your discount type. For example, it doesn\u2019t make sense for a Buy X Get Y discount to have the minimum purchase requirements card, because \u201cbuy x\u201d already defines the minimums. You still need to submit data for any required fields in the Shopify API, so submit a value that makes sense for your discount.\n The card immediately below the Method card typically contains the fields that will differ between discount types. Often this card\u2019s title is Value, which refers to the discount amount that the customer will get. You can also choose a title that makes sense for your discount type.\n As described in Shopify functions, store any custom data used by your discount type using metafields.\n Always provide validations for your discount type\u2019s custom fields that are stored as metafields. If users enter invalid data, then they\u2019ll get helpful feedback.\n Error validation\n You'll get errors back from bad data passed to API calls, but validating the data client-side before firing off a network request makes for a faster UI experience.\n If you choose to validate on the client, then take extra care with free-form entry, such as text fields. Run your validation check only after focus moves away from the field and there's at least one character in the field. This helps avoid marking the field with an error before users have committed a value.\n You might choose not to validate client-side in some cases, such as when validation on a given field takes longer than 1000 ms and validation performance can\u2019t be improved.\n If you get any validation errors, then display them on the specific fields that contain the invalid data, including a message explaining what went wrong and how to fix it. Polaris form components have an error property that you can use for this purpose.\n If there are multiple invalid fields, then provide an error banner at the top of the page, and focus the banner on submit. The banner should include a list of the fields with problems. Link each item in the banner to the corresponding field on the page, enabling the user to jump to that field.\n If there is only a single field with an error, then move focus to that field instead.\n Learn more about form validation.\n Responsive layouts\n Make any custom layout responsive, whether it\u2019s the fields in the Value card, or any other custom UI.\n Ensure that the layout is fluid down to 320 px wide.\n Ensure that key functionality remains available on a touchscreen device. Avoid conveying essential information using tooltips or hover states.\n Avoid truncating text whenever possible.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n User interface guidelines\n Navigation\n Discount page\n Error validation\n Responsive layouts\n Updates & News",
                    "filename": "docs/apps/selling-strategies/discounts/experience/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 4995,
                    "start_line": 1,
                    "end_line": 55,
                    "max_line": 55,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Deciding extension placement\n Localizing UI extensions\n Testing UI extensions\n UX guidelines\n Selling strategies\n App Store\n UX guidelines\n Customer accounts offer a secure and flexible way for customers to manage their information and orders. Accounts empower customers with greater control over post-purchase surfaces and create opportunities for merchants to drive more sales with features like offers, wishlists, product offers, and loyalty programs.\n All apps should follow the general guidance provided by the App Design Guidelines. This guide provides additional guidance for designing customer account UI extensions.\n Merchant-to-customer content\n When you write UI content for your customer account app, you\u2019re writing directly to a merchant\u2019s customers. The content that you write should represent the merchant, not your app, and should optimize the customer\u2019s online experience.\n Consult Polaris for more guidelines on voice, tone, and vocabulary to consider for merchant-to-customer content.\n Principles\n Enable self-service: Self-service options help customers resolve issues faster and reduce merchant support interactions.\n Design for consistency: Merchants can use different apps to enhance their customer account interface. Because your app operates alongside other apps, it's important to ensure a familiar user experience. Avoid introducing unfamiliar UX patterns, terms, or navigation paradigms that deviate from our guidelines. Aim to integrate your app seamlessly into the existing customer account experience.\n Personalize when possible: Customer account extensions benefit from authenticated access to customer data. Use this data to personalize the customer experience and create delightful moments. For example, offer complementary products, birthday discounts, or personalize content with the customer's name. Be creative, but respect privacy.\n Don't expose your brand to the customer: Enhance the merchant's brand subtly and effectively. At all times, aim to create a seamless and consistent experience that makes customers feel like they're interacting directly with the merchant.\n Build for scale: Design your app to support merchants of all sizes, from small startups to large enterprises. Ensure that your app effectively handles both low and high order volumes.\n Responsive design\n Design interfaces that adapt to different screen sizes. Your app should offer a good UX across mobile, tablet, and desktop devices. Test the extension on various screen sizes to ensure content adjusts appropriately for each device.\n Grid layouts\n Grid layouts enable responsive design for different screen sizes, and streamline development while enhancing the overall aesthetics of the customer experience. Grid layouts also ensure that elements are spaced, aligned, and positioned consistently.\n Customer account pages are made up of columns, gutters, and margins. The design is based on a 12-column grid.\n The following are the grid breakpoints per device type:\n Mobile: 375 dp breakpoint, six column grid, one column content\n Tablet: 750 dp breakpoint, six column grid, one column content\n Small laptop: 1000 dp breakpoint, six column grid, two column content\n When you design your page layout, you should generally space the content evenly across the grid columns. For example, in a three-column layout, each column of content would span four columns of the grid. However, to create a layout similar to the Order status page, the first column of content should span seven columns and the second should span five columns.\n Fulfillment statuses\n Conditional logic based on status\n Design your apps so that merchants have the flexibility to determine where an action displays.\n For example, for order actions that only become relevant once the customer has received the order, like requesting a return or writing a review, ideally customer's can\u2019t take action until the order is marked as delivered. However, when merchants don't provide a tracking number for a fulfilled order, it can be difficult for Shopify to know when the order has been delivered. In these instances, customer wouldn't have access to actions that depend on an order's delivered status. Be mindful of situations like this, and enable merchants to configure your app to suit their fulfillment processes.\n Content guidelines\n Status names\n Aim for one to three words.\n Use sentence case.\n Test different fulfillment scenarios\n We recommend testing your Order status page extensions across different fulfillment states. The following are some examples:\n Different delivery statuses, such as confirmed, on its way, and delivered.\n Partial fulfillments\n Multiple fulfillments\n Local pickup\n Gift cards\n Digital products\n Returns\n Payment statuses\n Depending on the payment status of an order, a payment card will display above the order summary. For example, when a customer has made a purchase with Net 90 payment terms, they have 90 days to submit payment. In this scenario, the payment card displays the amount due, the due date, and a Pay now button.\n Test different payment scenarios\n We recommend testing your Order status page extensions across different payment statuses. The following are some example statuses:\n Payment terms\n Partial payment\n Refund\n Paid\n User feedback and informational banners\n Error messages\n Error messages should help the customer understand what went wrong and how they can resolve the error.\n Create error messages using a Banner component with the alert or critical status prop.\n Don't use toasts for error messages. Since toasts disappear, customers lose access to the information that they need to move forward.\n Learn more about error handling.\n Informational banners\n Create informational banners using a Banner component with the info status prop.\n To build a more neutral banner, without the icons and colors that are associated with the different props, the following are some examples of components that you can use:\n Card: Customer account\n Heading: Heading 2\n Text: Default\n Button: Secondary\n These components adopt the merchant's branding by default, which helps your banner align with the overall look and feel of the merchant's shop.\n Next steps\n Figma UI kit\n Everything you need to start designing with customer account and checkout components.\n Figma: Account screens\n Explore all the customer account screens to design your extensions.\n Customer account components\n Learn about the components that you can use to build customer account UI extensions.\n Checkout components\n Learn about the checkout components that you can also use to build customer account UI extensions.\n Merchant-to-customer content guidelines\n Learn how to write UI content that represents merchants and optimizes the customer experience.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Merchant-to-customer content\n Principles\n Responsive design\n Grid layouts\n Fulfillment statuses\n Payment statuses\n User feedback and informational banners\n Next steps\n Updates & News",
                    "filename": "docs/apps/customer-accounts/best-practices/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 6978,
                    "start_line": 1,
                    "end_line": 90,
                    "max_line": 90,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Delivery and shipping\n Product offers\n Payments\n Thank you and Order status\n Overview\n Add a survey\n UX guidelines\n Localized UI extensions\n Test UI extensions\n Best practices\n Distribution\n Billing\n App Store\n UX guidelines for Thank you and Order status customizations\n This guide introduces UX guidelines for Thank you and Order status customizations.\n Choosing placement\n Before getting started, you first need to decide whether you want your extension to show up at a static target, or a dynamic target. Read the target framework to learn more. Choosing the right target approach is key to providing a great customer experience.\n In the example above, purchase.thank-you.block.render is a dynamic extension point, which a merchant can place wherever they want. In this instance, the extension adds a post-checkout survey extension in OrderStatus1 above the customer information, because the survey feedback should be captured directly after the buying experience.\n Choosing components\n To understand the complete list of components needed to create a Thank you and Order status extension, you should first understand the extension's possible states.\n An extension has four possible states:\n Loading state. Learn more about requesting network access scope.\n Loaded (default) state\n Processing state\n Submitted state\n Note\n The submitted state doesn't need a success banner because the addition of the survey to the page indicates that the extension was rendered.\n Component list\n To create the four possible states of a post-checkout survey extension, you need all the components listed in the following chart.\n Component Preview Tips\n SkeletonText Try to reflect the actual content's dimensions to keep placement from shifting when the content loads.\n View View is a generic container component. Its contents will always be the same size, so this component can be useful in layout components like Grid, BlockStack, and InlineStack that would otherwise stretch their children to fit.\n Heading Allow merchants to customize the header content and make it configurable from the checkout editor.\n Text Allow merchants to customize the text content and make it configurable from the checkout editor.\n ChoiceList Use choice lists to present a list of choices where customers can make a single selection or multiple selections. If possible, enable merchants to customize the `OptionList` content.\n Button Use secondary buttons here, reserving the primary button for the main call to actions (such as \"Continue shopping\").\n Banner Use secondary buttons here, reserving the primary button for the main call to actions (such as \"Continue shopping\").\n Choosing a layout\n When using a nested layout, you need only the following structural component:\n Component Preview Tips\n BlockStack BlockStack components can be nested with themselves or with other components.\n Use the BlockStack component to vertically stack elements on top of each other.\n Nesting BlockStack\n Spacing between the heading and content should be set to base to keep it consistent with nested components. To address different spacing values, you can nest a BlockStock inside of another BlockStack component, as shown in the following image:\n Post-checkout survey UX guidelines\n To help merchants gain customer trust and to provide a great post-checkout experience, follow these guidelines when designing a post-checkout survey app extension.\n Display only one survey per session\n Limit content so that customers aren't overwhelmed with information after they've completed their order.\n Give merchants control over survey content\n Merchants know their customers best and should have the flexibility to create surveys that relate to the shopping journey of their customers.\n Next steps\n Use a Checkout UI extension to add a post-checkout survey to the Thank you and Order status pages.\n Explore UX guidelines for the entire checkout experience.\n For general best practices for developing apps, refer to Best practices for building Shopify apps.\n For practical guidance on how to design a user interface for the Shopify admin, refer to Shopify's App Design Guidelines.\n Get familiar with Polaris accessibility and content guidelines.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Choosing placement\n Choosing components\n Choosing a layout\n Post-checkout survey UX guidelines\n Next steps\n Updates & News",
                    "filename": "docs/apps/checkout/thank-you-order-status/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 4363,
                    "start_line": 1,
                    "end_line": 65,
                    "max_line": 65,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Verify that the sold out message or badge is displayed when applicable.\n Product page\n Run the following tests on your product page, on each of the product configurations outlined. For each of these tests, verify the following:\n Customers can add a selected variant to the cart\n Variant information changes dynamically when different variants are selected\n Customers are prevented from adding more than the available quantity of items to the cart\n Product configurations\n Single product (no variants)\n On sale product\n Product with one option\n Product with more than 1 option with different variant quantity inventories (out of stock variant, unavailable variant).\n Product with three options\n Product with 100 variants\n Product with no image\n Product with varying product media (image, vidoe, 3D model. AR, MP4)\n Product with unit price\n Tests\n Add a product title:\n A single word title (30 characters, no spacing)\n A multi-word title (30-60 characters)\n Verify that when variants are selected from drop-down menus, product details are updated dynamically:\n Variant prices\n Variant media\n Variant SKU\n Action buttons (disable Add to cart and dynamic checkout buttons on sold out and unavailable variants)\n Variant selectors (cross out or disable sold out and unavailable variants)\n Unit price\n Shop Pay Installments banner\n Local pickup banner\n Inventory quantity (if applicable)\n Product images\n No image\n Test the following aspect ratios using portrait and landscape:\n 16:9\n 4:3\n 3:2\n 1:1\n PNG image\n Image zoom (if applicable)\n Color swatches (if applicable)\n Option to disable swatches\n Clear instruction on how to upload custom swatches\n Product description\n Add multiple paragraphs (minimum 1000 characters)\n Add links:\n Internal link\n External link\n Link opens in the same window\n Link opens in a new window\n Link styling indicates that the text is clickable\n Add images (images must display as they appear in the rich text editor)\n Verify that an error message appears when customers try to add more than the available quantity of items to the cart\n Blog page\n Run the following tests on your blog page. For each of these tests, verify the following:\n All blog posts in the collection are accessible\n Multiple blog post image ratios are supported\n Must support varying blog post image ratios\n Blog post information must be visible. This includes the title, excerpt, author, date, and comment count\n If available, blog filtering works as expected and combining filter tags doesn't break the page\n Test the way the grid responds to blog images of different aspect ratios, using portrait and landscape:\n 16:9\n 4:3\n 3:2\n 1:1\n Test blog filtering (if applicable):\n Filter by a single-word tag (30 characters, no spacing)\n Filter by a long list of tags (20+ tags)\n Test a blog with many posts:\n Test pagination (if applicable)\n Verify that only five pages show on initial load\n Test the View more button (if applicable)\n Test infinite scrolling (if applicable)\n Blog post page (Article)\n Run the following tests on your blog post page.\n Add blog post content:\n Add multiple paragraphs (minimum 1000 characters)\n Add links:\n Internal link\n External link\n Link opens in the same window\n Link opens in a new window\n Link styling indicates that the text is clickable\n Add images (images must display as they appear in the rich text editor)\n Add comments:\n Input comment text\n Submit the form\n Test error detection and handling\n Test the submission success message\n Verify that comments over a certain limit are paginated\n Test the following blog post image aspect ratios using portrait and landscape:\n 16:9\n 4:3\n 3:2\n 1:1\n Cart page, modal, or drawer\n Run the following tests on your cart. For each of these tests, verify the following:\n All products in the cart are fully visible\n The customer must be able to update the product quantity\n Automatic discounts must update dynamically\n Add enough products to the cart to trigger scrolling\n Setting 0 for quantity should remove the product\n Verify that an error message appears when customers try to add more than the available quantity of items to the cart\n Automatic discount\n Cart notes\n Search page\n Run the following tests on your search page. For each of these tests, verify that search result attributes are fully visible.\n Verify that the number of results displayed on first load is limited\n Test pagination (if applicable):\n Pagination truncates on search results with five or more pages\n Test the View more button (if applicable)\n Test infinite scrolling (if applicable)\n Test filtering (if applicable)\n Test both list and grid view (if applicable)\n Test error detection and handling, for example, when no results are found\n Pages\n Run the following tests on a page that uses the generic page template. For each of these tests, verify that page content is fully visible.\n Add a page title:\n A single word title (30 characters, no spacing)\n A multi-word title (30-60 characters)\n Add multiple paragraphs (minimum 3000 characters)\n Add links:\n Internal link\n External link\n Link opens in the same window\n Link opens in a new window\n Link styling indicates that the text is clickable\n Add image \u2013 must display imagery as inputted in the RTE\n Repeat testing for all existing product templates\n Pages (contact form template)\n Run the following tests on a page that uses the contact form template. For each of these tests, verify that customers can send the merchant an email using the contact form.\n Input text\n Test mandatory fields, such as the message field\n Submit the form\n Test error detection and handling\n Test the submission success message\n Gift card page\n Run the following tests on the gift card page. For each of these tests, verify that the gift card code and store name or logo is fully visible.\n Add logo fallback text:\n Long store name (30-40 characters, no spaces)\n Long store name with hyphens\n Add a logo:\n Test the following logo aspect ratios using portrait and landscape:\n 16:9\n 4:3\n 3:2\n 1:1\n Transparent background on PNG image\n Logo scales appropriately\n Varying positions/alignments (if applicable)\n Gift card code must not be cut off\n 6. Link sharing\n Share a link to the store where you're testing your theme on various social media platforms. Verify that the sharing image appears. You can use tools like the Facebook sharing debugger and the Twitter card validator to perform this test.\n 7. Local pickup\n Test your local pickup banner in the following scenarios. Before you start, prepare your store to test local pickup.\n Variant 1 - available for pickup at five locations:\n Verify that the pickup banner appears\n When you click Check availability at other stores, verify that all locations are visible, and that you can scroll to see all location information\n Variant 2 - available for pickup at only one location:\n Verify that the pickup banner appears\n Verify that the Check availability at other stores text is updated to View store information\n Variant 3 - available for pickup at only two locations, and sold out one of those locations:\n Verify that the pickup banner appears, and indicates that the item is available or unavailable at one of the locations.\n Verify that the Check availability at other stores link is present\n Verify that clicking on Check availability at other stores brings up only two locations\n Variant 4 - only available at a location that doesn't offer pickup:\n Verify that the pickup banner is removed\n Variant 5 - sold out at all locations:\n Verify that the pickup banner is removed\n Verify that the Add to cart button is changed to Sold out\n Ensure the pickup banner changes dynamically when a new variant is selected\n 8. Unit pricing\n Test unit prices in your theme. Before you start, prepare your store to test unit pricing.\n Verify that unit prices change dynamically on variant change\n Verify that unit prices appear in the following locations:\n Product page\n Collection page product cards\n Cart drawer, page, or popup\n Customer order page\n 9. Rich media\n Test rich media in your theme. Before you start, prepare your store to test rich media.\n Verify 3D/AR behavior:\n Verify that you can view and move 3d models on desktop and mobile devices\n Verify that the View in your space button appears on mobile devices\n Verify that can view both AR objects on mobile devices\n Verify video behavior (YouTube, Vimeo, MP4):\n Verify that video controls are accessible\n Verify that you can mute and unmute videos\n Verify that you can play and pause videos\n Verify that variant display when the associated variant is selected\n Verify that rich media types don't break the product card layout of the collection page:\n YouTube\n Vimeo\n MP4\n 3D models\n 10. Selling plans\n Test selling plans in your theme. Before you start, prepare your store to test selling plans.\n Applied selling plans appear on the cart page\n Applied selling plans appear on the customer order page\n Was this section helpful?\n YesNo\n ON THIS PAGE\n 1. Home page\n 2. Header\n 3. Footer\n 4. Sections\n 5. Pages\n 6. Link sharing\n 7. Local pickup\n 8. Unit pricing\n 9. Rich media\n 10. Selling plans\n Updates & News\n Developer changelog",
                    "filename": "docs/themes/store/test-theme/checklist/content.txt",
                    "start_index": 13320,
                    "end_index": 22422,
                    "start_line": 353,
                    "end_line": 565,
                    "max_line": 565,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Delivery and shipping\n Product offers\n Overview\n Pre-purchase\n Overview\n Build a pre-purchase offer\n UX guidelines\n Post-purchase\n Payments\n Thank you and Order status\n App Store\n UX guidelines for pre-purchase product offers\n Shopify Plus\n Checkout UI extensions that render on the information and shipping and payment steps in checkout are available only to stores on a Shopify Plus plan.\n This guide introduces UX guidelines for adding pre-purchase product offers to checkout.\n Placement\n Choosing the right target is key to providing a good experience.\n Before you start building, decide whether you want your product offer to render at a static target, a dynamic target, or whether you'll support both. To learn more about target types, refer to the target API reference.\n This product offer example uses the Checkout::Dynamic::Render[OrderSummary4] target for the following reasons:\n The target keeps the line items, discounts, and money lines together, which makes it easy for customers to scan their order summary.\n A product offer is considered secondary content, and should therefore be placed outside of the order summary.\n Note\n On mobile, the order summary area is collapsed by default. The UI won't display the product offer until the customer expands the order summary.\n Components\n The components to create a product offer depends on the extension's possible states.\n The product offer use case can have the following states:\n Loading\n Loaded (default)\n Adding\n Added\n Note\n Added doesn't need a success banner. The addition of the item to the order summary is confirmation that the item was successfully added to the order.\n You can use the following components to create the states:\n Components list for the product offer use case\n Component Preview Tips\n Divider Because the product offer will likely display in a core checkout feature such as contact information or order summary line items, include divider lines to help separate the product offer from the order summary.\n SkeletonText To keep placement from shifting when the content loads, try to reflect the actual content\u2019s dimensions.\n SkeletonImage\n Image Keep the thumbnail size the same as the thumbnail in the order summary to keep the layout consistent.\n Heading If possible, allow merchants to customize the heading content.\n Text\n Text\n Button Use secondary buttons here, reserving the primary button for the main call to actions like Pay now and Next step.\n Banner Use banners to communicate error states.\n Layout\n When you use a nested layout, you'll need only the following structural components:\n Components list for the product offer use case\n Component Preview Tips\n BlockStack You can nest BlockStack components either with themselves or with other components.\n InlineLayout You can nest Inline components with themselves or with other components.\n BlockStack\n Use the BlockStack component to stack elements on top of each other vertically.\n Nesting BlockStack\n Note\n BlockStack and BlockLayout components are similar to each other. BlockLayout enables you to specify different row sizes. With BlockStack, you don't need to do that.\n Set spacing between the divider and the content to loose, for consistency with the rest of checkout\u2019s spacing. Set the spacing between the heading and the line item content to base.\n To address different spacing values, you can nest a BlockStack inside of another BlockStack component.\n InlineLayout\n To display products horizontally, use InlineLayout, and set the spacing between elements to base.\n UX guidelines\n Adhere to the following guidelines when you're designing a product offer checkout UI extension, so that you can help merchants gain customer trust and provide a great checkout experience:\n Only show two product offers at a time\n Adding more than two offers can overwhelm customers, making it difficult for them to choose a product.\n Let merchants personalize product offers\n Customers are more likely to respond positively to offers that relate to their shopping journey or to the items in their cart.\n Only show necessary information\n Make it easy for customers to process offer information by only showing what's most relevant. For example, if supporting information like a product description is required, then progressively reveal it to customers at strategic moments.\n Next steps\n Learn how to offer customers additional products at checkout that they can add to their order.\n Explore UX guidelines for the entire checkout experience.\n For general best practices for developing apps, refer to Best practices for building Shopify apps.\n For practical guidance on how to design a user interface for the Shopify admin, refer to Shopify's App Design Guidelines.\n Get familiar with Polaris accessibility and content guidelines.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Placement\n Components\n Layout\n UX guidelines",
                    "filename": "docs/apps/checkout/product-offers/pre-purchase/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 4860,
                    "start_line": 1,
                    "end_line": 80,
                    "max_line": 80,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "A common approach is to encourage purchases with a lower initial price, for example, \"Save $10 on the first 3 deliveries.\"\n If an initial price incentive is applied to a subscription, then explain the current payment and how payments will change in the future.\n It\u2019s important to be transparent. A lack of information can cause customer mistrust and might appear misleading. Certain states and countries have laws around price clarity, which means that merchants might be subject to lawsuits.\n Subscription policy link\n In the mockup, the link to View subscription policy is part of the selling plan description and therefore in the merchant\u2019s or app\u2019s control to provide. The intention is to allow individual selling plans to provide a link out to a dedicated URL, if available.\n Theshop.subscription_policy object available in Liquid makes it possible to link to a dedicated /policies/subscription-policy page. The content of the page is editable by the merchant in the Shopify admin under Legal settings (/admin/settings/legal). The content of the subscription policy is also available at checkout.\n Main call-to-action\n Having a call-to-action that reflects the subscription type helps customers differentiate between subscription options and the one-time subscription.\n # UI element API properties and information UI guidelines\n 1 Call-to-action On first page load, if the product requires a selling plan or one is selected, then switch the call-to-action string to something subscription-specific that merchants can customize.\n \n Shopify doesn't display the dynamic checkout button on products that include selling plans. Ensure that the theme accounts for this, and that the primary call-to-action style is used for the form submission. Update the call-to-action label to Add subscription to cart for a subscription subscription.\n Cart items\n Each subscription item displays the most important subscription details to help customers understand their purchase. Customers should be able to understand a subscription\u2019s delivery frequency and, if applicable, the commitment period. The price should also match what is represented on the product page.\n The subcomponents of a cart item include the following:\n Cart page\n Cart notification\n Cart page\n Customers tend to scan the cart page and review the information before proceeding to checkout:\n # UI element API properties and information UI guidelines\n 1 Selling plan information line_item.selling_plan_allocation.selling_plan.name\n \n Use selling_plan.name in the cart line item. This same text is used at checkout. For more information, refer to Using the selling plan name. Because the selling plan name is meant to accurately summarize the subscription, don't list the individual selling plan option values alongside the selling plan name.\n Cart notification\n The cart notification returns information about the item that was just added to the cart:\n # UI element API properties and information UI guidelines\n 1 Selling plan information line_item.selling_plan_allocation.selling_plan.name\n \n This information comes from a Cart API JSON response.\n \n Use selling_plan.name in the order line item. The same text is used at checkout. For more information, refer to Using the selling plan name. Because the selling plan name is meant to accurately summarize the subscription, don't list the individual selling plan option values alongside the selling plan name.\n Using the selling plan name\n The selling_plan.name should be a succinct description of the selling plan that can be easily understood by customers. The text is displayed in multiple areas of the online store, such as cart line items, checkout, and past order details. The value is also displayed in the merchant\u2019s internal admin on order pages.\n Note\n The selling plan name shouldn't be an additional opportunity to write marketing text.\n Shopify doesn't control the value of the name, which means that merchants can enter any text value they want using an app.\n When creating selling plan names, implement the following recommended guidelines:\n State the delivery frequency and a prepaid period, if applicable.\n Don't state exact dollars amounts, for example, \"$9 a month\". Use percentages when applicable.\n Considerations for currency switching and price rounding\n Merchants can sell in multiple currencies on their online store.\n When a customer visits the online store, Shopify presents the currency that's determined appropriate for the customer. Online stores can offer a currency selector to customers to enable them to manually switch the currency. Shopify also offers a price rounding feature to merchants, which allows merchants to set custom rounding rules for converted prices.\n Apps and merchants shouldn't write any prices in the various strings that are shown to customers, for example, selling plan names that say \"$9.99 a month\" or \"Save $5\". Any prices that are written in these strings won't reflect currency switching or price rounding, and might be incorrect or misleading to customers.\n When an app or merchant wants to express savings in a text field, use percentages whenever possible. For example, \"Deliver every week (Save 20%)\".\n Note\n Price properties returned from APIs of the Online Store (Liquid or JSON) reflect the currency of the customer's session and any price rounding rules.\n Order details\n Customers logged in to the store can view the details of each past order. It's important to let the customer easily identify the subscription product.\n # UI element API properties and information UI guidelines\n 1 Selling plan information line_item.selling_plan_allocation.selling_plan.name\n \n Use selling_plan.name in the cart notification line item. The same text is used at checkout. For more information, refer to Using the selling plan name. Because the selling plan name is meant to accurately summarize the subscription, don't list the individual selling plan option values alongside the selling plan name.\n Next steps\n Create and manage selling plans: Follow a step-by-step workflow to create and manage selling plans in your subscription app.\n Getting started building a product subscription app extension: Learn how to create a new product subscription app extension with App Bridge Admin, connect the extension to Shopify, and render your working code inside Shopify's UI.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n User experience principles\n User interface guidelines\n Product forms\n Cart items\n Order details\n Next steps",
                    "filename": "docs/themes/pricing-payments/subscriptions/subscription-ux-guidelines/content.txt",
                    "start_index": 15177,
                    "end_index": 21661,
                    "start_line": 162,
                    "end_line": 225,
                    "max_line": 225,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Design guidelines\n Overview\n App structure\n Layout\n Overview\n Responsive layout grid\n App Body width\n Layout options\n Spacing\n Information density\n Containers\n Visual design\n Content\n Navigation\n User experience\n Deployment\n Distribution\n Billing\n App Store\n Layout\n Layout design is the process of arranging visual elements such as text, images, and shapes on a page.\n Apps have a variety of available layouts. These layouts adapt the app body content to every screen size and device type. Selecting the proper layout for the task at hand will benefit your app's merchant experience.\n Responsive layout grid\n The Polaris Layout component provides built-in responsiveness. The following breakpoints are applied in the Shopify admin. Take these into into consideration when you build your app.\n Breakpoint Minimum viewport size Maximum viewport size\n xs 0 489px\n sm 490px 767px\n md 768px 1039px\n lg 1040px 1399px\n xl 1440px \u221e\n Must Do\n Design your app to be responsive and adapt to different screen sizes and devices. This ensures a seamless user experience across various platforms.\n App body width\n The following table shows recommended sizes for the app body width.\n The Polaris Page component is an easy way to align the app body with the rest of the Shopify admin and make it simpler to update layouts over time.\n Breakpoint Default app body width Behavior\n xs 0 \u2013 489px Flexible, always full width\n sm 442px \u2013 719px Flexible, always full width\n md 480px \u2013 751px Flexible, always full width\n lg 752px \u2013 950px Flexible, then fixed width at 998px\n xl 950px fixed Fixed width\n Tip\n Use a full-width page when merchants are dealing with lists of data that have many columns.\n Full-width page\n In some cases, it\u2019s necessary to apply full width to the Polaris Page component. This includes single-column layouts with a high density of information in your app, such as product or order lists. Full-width pages only modify how the Page component is displayed in lg and xl breakpoints.\n The following sections explain when to use the default or full-width Page component:\n Layout options\n The Polaris Layout component offers various layouts to match the complexity of your app.\n Must Do\n Keep your app aligned with the Shopify admin by using the Polaris Patterns for common layouts such as index pages and resource detail pages.\n Single-column layout\n The single-column layout enables merchants to scan content from top-to-bottom and focus on a single, obvious task.\n Most often, an app\u2019s homepage uses the single-column layout in a default-width page. However, if your app feels more like a dashboard, then you can also use the two-column equal width or three-column layout.\n Must Do\n Use a full-width page when merchants are dealing with lists of data that have many columns.\n Do Not\n Don\u2019t use a single-column layout with a full-width page when you\u2019re not dealing with lists of data. This makes the app feel out of place on larger displays. Apps should feel integrated with the Shopify admin.\n Two-column layout\n Two-column layouts include primary/secondary and equal-width.\n Primary/secondary: Meant for complex editors where the primary column is used for parent content, and the secondary column is used for child content.\n Equal-width: Meant for scanning information that has the same level of importance, like in a dashboard.\n Must Do\n Complex editors should use the two-column primary/secondary layout in a default-width page. This offers merchants a streamlined editing experience.\n Do Not\n Don\u2019t use a two-column primary/secondary layout for your app home page and other pages that don\u2019t require a parent/child relationship between different parts of the interface.\n Must Do\n If your app\u2019s page behaves as a dashboard, then use a two-column equal width layout. Use a three-column layout for higher content density.\n Do Not\n Don\u2019t use two-column layouts in full-width pages, because it makes your app\u2019s content harder to parse on larger displays.\n Annotated layout\n Annotated layouts are the best choice for pages that are dense with settings.\n Learn more about this layout in the Polaris App settings pattern.\n Do Not\n Don\u2019t use annotated layouts for content that isn\u2019t editable. Use a single-column layout instead.\n Three-column layout\n Three-column layouts are for complex pages only, like analytics content. Similar to two-column layouts, three-column layouts are used for scanning information that has the same level of importance.\n Three-column layouts work well when merchants need to compare across related information types.\n Must Do\n Set three-column layouts in a full-width page when you\u2019re using them for interfaces like dashboards and analytics.\n Do Not\n Don\u2019t use three-column layouts to display unrelated content side by side, as it can confuse merchants. Use a single-column layout instead.\n Spacing\n Spacing helps your app maintain a pleasant experience by keeping interface components well-positioned with consistent visual rhythm.\n For more information on spacing, visit the Polaris spacing guidelines.\n The 4px spacing grid\n The Shopify admin is built on a 4px spacing grid. Following this grid is a great way to offer a seamless app experience. You can use Polaris spacing tokens to achieve this.\n Information density\n The density of elements in a layout can greatly impact your app\u2019s readability and usability.\n Make your app efficient and easy to use by providing the right density at the right moment, for the right task.\n Must Do\n Use looser spacing for low-density layouts. Use tighter spacing for high-density layouts.\n Do Not\n Don't change information density within a single page, otherwise your app can feel disjointed.\n Containers\n Most of an app\u2019s content exists in containers. Containers compartmentalize content and create a natural hierarchy between parts of an interface.\n Must Do\n Make the majority of your app\u2019s content live in a container, such as a card. This creates visual structure and rhythm that helps merchants find information quickly.\n Do Not\n Don't place paragraphs of text directly on the background. This reduces legibility and makes scanning the page difficult for merchants.\n Using cards\n Cards structure your app\u2019s content so that merchants can scan information easily. Cards act as containers and can be static or interactive.\n The Polaris Card component provides an easy way to segment content, while still respecting Shopify\u2019s App Design Guidelines.\n Must Do\n Place your app\u2019s content in a card-like container a majority of the time. Complex components or images aren\u2019t necessarily required to be in a container.\n Must Do\n Cards that offer interactivity, such as calls to action (CTAs) and buttons, should have at most one primary styled action.\n Using tables\n Tables are helpful for summarizing many object instances. Use the Polaris Data table component for relatively simple summaries, and the Index table when you have a lot of data to show.\n Refer also to the Polaris Pattern for Resource index layout, when you are summarizing resource objects.\n Must Do\n Actions in tables must use secondary action styling, such as a text button, minor icon, or dropdown menu. Don't use primary style buttons in tables.\n Your browser doesn't support this video.\n Tip\n Tables can easily become visually cluttered when there are many cells in a row. Reduce clutter in your table rows by revealing actions only when that row is hovered or in focus state.\n Previous\n App structure\n Next\n Visual design\n Was this page helpful?\n YesNo",
                    "filename": "docs/apps/design-guidelines/layout/content.txt",
                    "start_index": 0,
                    "end_index": 7480,
                    "start_line": 1,
                    "end_line": 120,
                    "max_line": 120,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Overview\n Getting started\n Create a subscription\n UX guidelines\n Overview\n Upsell\n Subscriptions\n Payments\n Thank you and Order status\n Localized UI extensions\n UX guidelines for post-purchase upsells\n Beta\n Post-purchase checkout extensions are in beta and can be used without restrictions in a development store. To use post-purchase extensions on a live store, you need to request access.\n When you design a post-purchase upsell, a great customer-facing user experience (UX) and merchant experience are important to the success of our merchants. The post-purchase upsell page should represent the merchant well and protect their brand\u2019s trust.\n User experience\n To provide a great post-purchase experience and to help the merchant gain trust from customers, implement the following UX principles in your post-purchase checkout extension:\n Be transparent about all the costs involved in a purchase.\n Present clear options to accept or refuse upsell offers without pressuring customers.\n Display a maximum of two consecutive upsell offers.\n Present relevant products by tailoring upsell offers to the shopping behaviors and preferences of customers.\n Provide default copy that addresses customers directly using a voice that's appropriate for any store, regardless of brand personality.\n Header and footer\n The styling of the header and footer is consistent across every post-purchase page:\n Header: Confirms the payment of the initial purchase of the order. Customers can also directly access their full order confirmation (and bypass the upsell offer pages) using the View order confirmation button.\n Footer: Contains links to the privacy policy, terms of service, and refund policy.\n Note\n You can't adjust the header and footer components.\n Required components\n App Bridge Checkout provides many powerful UI components that a rendering extension can use to build an interface. The App Bridge Checkout UI components are rendered natively by Shopify, so you can depend on them to be performant, accessible, and functional in all of the checkout\u2019s supported browsers.\n Before you integrate your post-purchase app into checkout, familiarize yourself with the UI guidelines and best practices for the following required components:\n Callout banner\n Product title and price\n Product image\n Price breakdown\n Call to action buttons\n Callout banner\n A callout banner encourages customers to take action on a post-purchase upsell. Use the App Bridge Checkout CalloutBanner to implement this component:\n Place a callout banner near the top of the page to let the customer know what the upsell offer is. Provide strong default copy in your app to encourage merchants to be explicit about the upsell offer.\n Do Don't\n Lead with clear text that explains what a customer can add to the order they've placed. For example: It\u2019s not too late to add to your order.\n Include the product name and the discount associated with it.\n Use exclamation points. For example: \"Wait! Before time runs out!\n Use misleading language that makes the upsell offer feel compulsory or introduces doubt about the status of the order.\n Product title and price\n The product must have the same title and price that it has on the merchant\u2019s store. Keep this consistent to maintain a customer\u2019s trust if they compare. Place the price of the product directly below the product title.\n If the post-purchase product is an upsell offer at a discounted price, then do the following:\n Strike out the original price of the product.\n Display the discounted price next to the original price so that the relationship is clear.\n Product image\n The product image represents the product being offered to the customer in the post-purchase upsell offer. Use the App Bridge Checkout Image component to add an image:\n ADDING MULTIPLE IMAGES\n If the upsell offer includes multiple images, then the images need to be easy to navigate and provide additional context to the customer. Images can be presented using different angles or sizes.\n Note\n There isn't an App Bridge Checkout component available for a carousel feature.\n Do Don't\n Use 48px previous and next arrow buttons.\n Give customers options to swipe between images, navigate using the keyboard, or click on a thumbnail to navigate to the next image.\n Make additional images responsive across screen sizes.\n Implement auto-scrolling through the images, as this might overwhelm customers.\n Price breakdown\n The post-purchase price breakdown shows the total cost of the upsell offer that the customer is accepting. The breakdown needs to be placed under the variant and quantity pickers. The breakdown also needs to dynamically update to reflect price changes if the customer adjusts the product's quantity or variants.\n STRUCTURE OF THE PRICE BREAKDOWN\n The price breakdown needs to include the following:\n Money line: An individual breakdown of costs.\n Subtotal: The total before shipping and taxes have been included.\n Shipping: The total shipping cost for the item(s).\n Taxes: The added cost of goods or services.\n Money summary: The combined total of the subtotal, shipping, and taxes.\n If your product description is long enough that a customer can't see the price breakdown without scrolling, then you need to include a copy of the price breakdown at the end of your product description.\n Call to action buttons\n A call to action button allows a customer to accept or decline an upsell offer. Use the App Bridge Checkout Button component to implement call to action buttons.\n ACCEPT BUTTON\n The accept button is the primary action on the post-purchase upsell page.\n Use the following text for the accept button:\n [Pay now \u2022 Product total price]\n If the product you are offering is free, then use the following text:\n [Add now \u2022 Free] or [Add now \u2022 $0]\n Note\n Don't give merchants the option to change the button text. However, you can translate the button text to any language that you want to support.\n CONFIRMING ACCEPTED UPSELL OFFERS\n Use the App Bridge Checkout Banner component to display a confirmation message when a customer accepts an upsell offer. For example: [Your order has been updated].\n Customers might not expect the accept button to generate a payment immediately because the convention is for \"buy now\" actions to trigger an additional confirmation step. To clarify that there is no additional confirmation step, do the following:\n Add a summary modal to confirm whether the customer wants to proceed.\n Add additional help text directly under the accept button informing the customer that they'll be charged immediately.\n DECLINE BUTTON\n The decline button needs to be placed under the accept button and should be less visually prominent than the accept button. However, despite being less visually prominent, the decline button should still be easy to see so that the merchant can easily decline the upsell offer. The decline button must contain the text [Decline upsell offer].\n Optional components\n In addition to the required components, you can add the following optional components to the post-purchase page:\n Product description\n Variant picker\n Quantity picker\n Product description\n The product description provides a summary of the key features of the product being displayed in the product image (or images).\n Use the TextBlock, TextContainer and Text App Bridge Checkout components to implement a product description.\n All upsell offers should have a product description that accurately summarizes the product features. Encourage merchants using your app to keep the product description as short as possible.\n LENGTHY PRODUCT DESCRIPTIONS\n If the product description is so long that it pushes the rest of the components down (variant picker, quantity picker, price breakdown, and buttons, then divide it into the following two parts:\n A summary description that reveals all other components without scrolling\n A longer, more detailed description below the other components\n Variant picker\n If the product has several variants (for example, size or color), then the page needs to include a variant picker under the product description. Use the App Bridge Checkout Select component to implement a variant picker.\n Label the picker with the name of the variant and the variant values. For example, Size: S, M, L, XL. If your product has several sizes, then consider linking to a size chart.\n Quantity picker\n The quantity picker should be placed below the product description to allow customers to adjust the quantity of a product.\n The quantity picker needs to be a number stepper that's set to 1 as a default. Use the label [Quantity].\n Post-purchase app selector\n Merchants need to enable their post-purchase app in the Shopify admin checkout settings. If there are multiple post-purchase apps installed, then they can also use the checkout settings to select which post-purchase app they want to enable on the post-purchase page.\n We recommend that you let merchants know that they might need to manually select your app to be active in the checkout settings. You could explain this in installation instructions or in your help pages.\n Your can check whether or not it is currently selected, using the following GraphQL Query:\n 1 {\n 2\n    app  {\n 3\n        isPostPurchaseAppInUse\n 4\n    }\n 5 }\n Suggested merchant-facing content for your app:\n You could use the following copy as the basis for a merchant-facing message about multiple post-purchase extensions:\n \"If you already have a post-purchase app installed, you must manually select to make [app-name] active. You can do this in the Shopify admin checkout settings. This option only shows if you already have a post-purchase app installed.\"\n Performance consideration\n To guarantee a good experience for both merchants and customers, we strongly recommend that you prioritize performance when building your extensions. You can depend on App Bridge Checkout UI components to be performant, accessible, and functional in all of the checkout's supported browsers. Keep the following guidelines in mind when building your app:\n Network calls must complete in two seconds or less.\n Network calls that occur before an interface presents to the customer must happen in the ShouldRender handler.\n Render must not require a network call before an interface presents to the customer. Ensure the extension caches required data beforehand using the storage API from ShouldRender.\n Next steps\n Learn how to create a post-purchase upsell.\n Explore UX guidelines for the entire checkout experience.\n For general best practices for developing apps, refer to Best practices for building Shopify apps.\n For practical guidance on how to design a user interface for the Shopify admin, refer to Shopify's App Design Guidelines.\n Get familiar with Polaris accessibility and content guidelines.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n User experience\n Post-purchase app selector\n Performance consideration\n Next steps\n Updates & News\n Developer changelog",
                    "filename": "docs/apps/checkout/product-offers/post-purchase/ux-guidelines/upsell/content.txt",
                    "start_index": 0,
                    "end_index": 10936,
                    "start_line": 1,
                    "end_line": 140,
                    "max_line": 140,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Product recommendations\n Media and images\n Overview\n Support product media\n Product media UX guidelines\n Theme Store\n Product media UX guidelines\n The following are the main user experience (UX), and user interface (UI), aspects to consider with product media:\n Badges and buttons\n 3D model viewers\n Video players\n Slideshows\n Badges and buttons\n Both video and 3D model media displays should have the following included in their display, with each associated element, respectively:\n A play or 3D icon badge on the media thumbnail\n A play or 3D icon button control on the featured media\n 3D model media displays should also include a View in your space button.\n For example:\n When adding these badges and buttons you should consider the following:\n The icons to use\n Their placement and sizing\n Their styling\n The 'View in your space' button\n When including the View in your space button, you should consider the following:\n If the button is being placed on top of the media display, then you need to ensure that video and 3D controls aren't obstructed.\n Only show the button for devices that support AR. Supporting devices will run iOS version 13 or higher, or Android version 9 or higher.\n If a product's media includes a 3D model, and that media should be displayed, then the button should be visible regardless of the currently displayed media type. Additionally, if the product has more than one 3D model, then the button should open the currently visible model, or the first model if none are currently visible.\n The button should include the 3D icon.\n The button should only be placed below the featured media. For example:\n Tip\n To learn more about how to create a View in your space button, refer to Support product media.\n Icons\n Click the button below to download an asset library that includes icons for video and 3D model displays. You should use the icons from this library, rather than create custom icons as they're industry standards that will help customers more easily identify the available interaction.\n Download product media assets\n The icons come in two different styles:\n Rounded\n Angular\n You should only use one style, and it should match your theme's style.\n Badge placement and sizing\n The placement, and sizing, of the display varies depending whether it's for a thumbnail badge, or a featured button control.\n Thumbnail badge\n Thumbnail badges should adhere to the following guidelines:\n They shouldn't occupy more than 1/9th of the thumbnail display, or 1/6th for landscape thumbnails, and shouldn't be smaller than 20px x 20px. For example:\n They can be aligned in any corner of the thumbnail, however should be uniformly aligned. For example:\n Featured button control\n Featured button controls should be a minimum of 60px x 60px, and maximum of 90px x 90px.\n Styling\n The styling of the badges and buttons should adhere to the following guidelines:\n You should maintain the whitespace around the badge and button icons, as well as their proportions. For example:\n The background of both badges, and buttons, can be modified to match your theme style. For example, a circle, rounded corners, etc. For example:\n You should use existing colour settings to style the badges and buttons. There should be a high contrast between the background and the icon, as well as the media and the background, so settings for \"Main background\", \"Heading\", or \"Text\" generally give the best results. For example:\n The opacity of the badge elements should vary depending on the element. Refer to Thumbnail badge opacity and Featured button control opacity to learn more.\n In addition to the above, the View in your space button should either have no background color, or a very neutral color, so that it doesn't compete with primary and secondary calls to action. For example:\n Thumbnail badge opacity\n The thumbnail badge elements should adhere to the following opacity guidelines:\n The icon opacity should be 60%.\n The badge background opacity should be 100%.\n The badge background should have a border that is at least 5% opacity of the icon's colour.\n For example:\n Featured button control opacity\n The featured badge elements should adhere to the following opacity guidelines:\n The icon opacity should be 100%.\n The icon should persist on hover to maintain visibility.\n The badge background opacity should be a minimum of 75%.\n The badge background should have a border that is at least 5% opacity of the icon's colour.\n For example:\n 3D model viewers\n There are the following aspects to consider with 3D model viewers:\n The general behavior\n Accessibility\n The display elements\n Focus order\n Accessibility\n You should consider the following accessibility guidelines:\n 3D model content should default to inactive on page load as it can be unexpected, overwhelming, and distracting when defaulted to active.\n 3D models should allow for panning with only the keyboard, in addition to mouse and swipe gestures.\n Add dedicated button controls, with appropriate labels, to control the model positioning.\n Ensure keyboard focus states are visible for sighted keyboard-only or voice dictation users.\n Refrain from shifting keyboard focus when interacting with a button control so customers can navigate away when they're ready.\n Allow for text descriptions of models for each stage view.\n Announce the current state of the model via ARIA live status element when button controls are interacted with.\n Test your implementation with a variety of assistive technologies. For example, keyboard alone, and multiple screen readers.\n Display elements\n 3D model viewers should have the following display elements:\n 3D model viewer controls\n 3D model viewer progress bar\n 3D model viewer controls\n These controls should follow the badge and button styling suggestions, however the icons can be set to a minimum of 55% opacity. For example:\n These controls should be placed in the bottom right corner of the media element, either with even, or no padding:\n You should keep visual consistency among all UI elements, so the corners of the control display shouldn't be rounded unless the icons and buttons in the theme are also rounded. For example:\n 3D model viewer progress bar\n The progress bar is to show the load progress of the model. Similar to the controls, the progress bar should following the badge and button styling practices, however it should have 100% opacity, and should be placed at the top of the media element.\n For example:\n Focus order\n In order to facilitate keyboard interaction, 3D model viewers should have a specific focus order on the related elements. There are two main states to consider:\n Inactive\n Active\n Inactive\n When the viewer is inactive, the focus order should be as follows:\n Viewer controls\n Active\n When the viewer is active, the focus order should be as follows:\n Viewer container\n Zoom in\n Zoom out\n Fullscreen\n Video players\n There are the following aspects to consider with video players:\n The general behavior\n Accessibility\n Styling and placement\n Accessibility\n Video content should default to paused on page load as it can be unexpected, overwhelming, and distracting when defaulted to playing.\n If a video plays on page load, it should be muted by default.\n Test your implementation with a variety of assistive technologies. For example, keyboard alone, and multiple screen readers.\n Styling and placement\n In addition to the badge and button styling suggestions, video players should adhere to the following:\n They should be placed at the bottom of the featured media, either with even, or no padding:\n If the theme uses custom focus states, then you should maintain consistency. Otherwise, the default browser focus state should be used.\n You should keep visual consistency among all UI elements, so the corners of the control display shouldn't be rounded unless the icons and buttons in the theme are also rounded. For example:\n General behavior\n Note\n The following uses the terms \"active\" and \"inactive\". In the context of videos, this would be equivalent to \"playing\" and \"paused\".\n In general, video players and 3D model viewers should be set to inactive while advancing through media galleries as videos and models that aren't visible shouldn't be active.\n If more than one media element is displaying at a time, then all media should be inactive by default, requiring the customer to initiate activity. If only one media element is visible at once, then you should adhere to the following:\n Desktop - The first media element on page load should be set to inactive, however as the media changes, the current media should automatically be set to active.\n Tablet/Mobile - All media elements should default to inactive, requiring the customer to initiate activity.\n Slideshows\n If your theme uses a slideshow media gallery, then you shouldn't rely solely on swipe gestures for navigation as video players and 3D model viewers can interfere. For example:\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Badges and buttons\n 3D model viewers\n Video players\n General behavior\n Slideshows\n Updates & News\n Developer changelog\n Partner blog",
                    "filename": "docs/themes/product-merchandising/media/media-ux/content.txt",
                    "start_index": 0,
                    "end_index": 9092,
                    "start_line": 1,
                    "end_line": 140,
                    "max_line": 140,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Billing\n App Store\n Marketing\n The Shopify admin is first and foremost a place for merchants to get work done. These directives explain how to incorporate marketing messages in your app in an unobtrusive way.\n Branding\n Branding can set your app apart from others, but over-branding sets it apart from Shopify. We recommend expressing your brand with a light touch. Imagery and illustration styles are great and non-disruptive ways to do this.\n Express your app\u2019s brand through illustration and imagery. Try to keep your app\u2019s layouts and common components, like Cards, consistent with the Shopify admin.\n Promotion\n Promotional messages include requests to rate the app, plan or subscription upgrades, or calls to download additional apps.\n Remember that merchants are looking to the current app they installed to accomplish a task or certain workflow. We have specific directives to limit the interference of marketing messages.\n Tip\n Place promotional messages into a dismissible container, such as a card or gallery, at the bottom of your app homepage. Or, create a separate page dedicated to promotional messages.\n Must Do\n Promotional information on the app home page must be dismissible. If dismissed, the information shouldn't display for the same user again.\n Must Do\n Features that are only available to paid or premium plans must be in a visually-disabled state. Use caption-style text in a subdued color to communicate that the feature is available only by upgrading.\n Do Not\n Don't mislead or pressure merchants. Your app must not include fake reviews, false special offers, or use elements like countdown timers for limited-time opportunities. Deceptive or manipulative promotion practices erode merchant trust in your app and in Shopify.\n Do Not\n Don\u2019t oversell or overpromise. This can break trust with customers.\n Do Not\n Don't mix the primary call to action (CTA) with unrelated actions such as marketing messages or requests for support. This obscures the primary action.\n Do Not\n Don't present the same marketing messages on all app pages.\n Previous\n Onboarding\n Next\n Forms\n Was this page helpful?\n YesNo",
                    "filename": "docs/apps/design-guidelines/user-experience/marketing/content.txt",
                    "start_index": 0,
                    "end_index": 2125,
                    "start_line": 1,
                    "end_line": 30,
                    "max_line": 30,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                }
            ]
        },
        "mmr_code_snippets_initial": [
            {
                "code": "\"xloose\">\n                <Heading level={1}>Post-purchase Text Samples</Heading>\n                <BlockStack>\n                    <Separator />\n                    <TextBlock emphasized size=\"xlarge\">\n                        1. Links\n                    </TextBlock>\n                    <Separator />",
                "filename": "extensions/post-purchase/src/__samples__/textFormattingSample.ts",
                "start_index": 717,
                "end_index": 1018,
                "start_line": 32,
                "end_line": 317,
                "max_line": 327,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Banner\n                                            status=\"warning\"\n                                            title={'\ud83d\ude80 Faster, Smoother, & Better Checkout Editor'}\n                                            action={{\n                                                content: 'Update Now',\n                                                loading: updateVersionLoading,\n                                                onAction: () => {\n                                                    updateCheckoutVersion('V2');\n                                                },\n                                            }}\n                                        >\n                                            <Text variant=\"bodyLg\" as=\"p\">\n                                                Explore our upgraded checkout editor. Discover new triggers, AI upsells,\n                                                multiple widget configurations, split testing and other customization\n                                                features. Upgrading is fully reversible and will automatically transfer\n                                                your current setup.\n                                            </Text>\n                                        </Banner>\n                                    )}\n                                    {currentSplitTestTab === 'A' || !currentSplitTestTab\n                                        ? widgetsVersionA\n                                        : widgetsVersionB}\n                                </VerticalStack>\n                            )}\n                        </div>\n                        <div className={styles.preview}>\n                            <div>\n                                <Preview widget={selectedWidgetData} widgetType={previewSelection?.type} />\n                                {selectedTab === 'rewardsWidget' && (\n                                    <div style={{ marginTop: '20px' }}>\n                                        <Banner title=\"\" status=\"info\">\n                                            The rewards bar widget is intended to be used with one or more upsell\n                                            widgets. If a customer sees that they're $10 away from free shipping, they\n                                            might want to accept one of your upsell products to get there!\n                                        </Banner>\n                                        <Banner\n                                            title=\"Create discount\"\n                                            action={{\n                                                content: 'Create discount',",
                "filename": "web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx",
                "start_index": 10154,
                "end_index": 12821,
                "start_line": 236,
                "end_line": 274,
                "max_line": 306,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "export const UpsellsContent = z.object({\n    upsellType: z.enum(['multi', 'single', 'checkmark']),\n    offerTitle: TextSettings,\n    bordered: z.boolean(), //isShowBorder\n    buttonStyle: z.enum(['primary', 'secondary']), //alternative useOutlinedButton\n\n    skipDiscountIfOtherDiscountsAlreadyApplied: z.boolean(), //if it has hasDiscountedOffer\n    offers: z.array(UpsellOffer),\n\n    //single\n    fullWidthButton: z.boolean(), // instead isUpsellPositionOption: z.boolean(),\n\n    //multi\n    direction: z.enum(['horizontal', 'vertical']), // instead isUpsellPositionOption: z.boolean(),\n    customizeNumberOfOffers: z.boolean(),\n    numberOfOffersToShow: z.number().int().positive(),\n\n    //single & multi\n    continuouslyLoadOffers: z.boolean(),\n\n    //checkmark\n    acceptedDefault: z.boolean(),\n});\n\nconst Testimonial = z.object({\n    id: z.string().uuid(),\n    reviewerName: z.string(),\n    reviewerText: z.string(),\n});\n\nconst TestimonialsContent = z.object({\n    // title: TextSettings,\n    testimonials: z.array(Testimonial),\n});\n\nconst TextContent = z.object({\n    heading: TextSettings,\n    body: TextSettings,\n    statusLevel: z.enum(['info', 'success', 'warning', 'critical']),\n    type: z.enum(['banner', 'plain']),\n    spacing: z.nativeEnum(SpacingSize).optional(),\n});\n\nconst RewardsContent = z.object({\n    textBeforeAchieving: TextSettings,\n    textAfterAchieving: TextSettings,\n    barBackgroundColor: z.string(),\n    barForegroundColor: z.string(),\n    rewardBasis: z.enum(['item_count', 'cart_total']),\n    minimumAmount: z.number(),\n    itemCount: z.number(),\n});\n\nexport const Badge = z.object({\n    id: z.string().uuid(),\n    title: TextSettings,\n    description: TextSettings,\n    icon: z.string(),\n    appearance: z.string(),\n    customImage: z.string().nullable(),\n});\n\nconst TrustBadgesContent = z.object({\n    layout: z.enum(['vertical', 'horizontal']),\n    badges: z.array(Badge),\n});\n\nexport const Note = z.object({\n    id: z.string().uuid(),\n    text: TextSettings,\n    checked: z.boolean(),\n    showTextBox: z.boolean(),\n    textBoxPlaceholder: z.string(),\n});\n\nconst NotesContent = z.object({\n    notes: z.array(Note),\n});\n\nconst ImagesContent = z.object({\n    imageUrl: z.string(),\n    size: z.number(),\n});\n\nconst UpsellsConfiguration = z.discriminatedUnion('splitTestEnabled', [\n    RegularConfiguration.extend({ content: UpsellsContent }),\n    SplitTestConfiguration.extend({ contentA: UpsellsContent, contentB: z.union([UpsellsContent, z.literal(null)]) }),\n]);\nconst TestimonialsConfiguration = z.discriminatedUnion('splitTestEnabled', [\n    RegularConfiguration.extend({ content: TestimonialsContent }),\n    SplitTestConfiguration.extend({\n        contentA: TestimonialsContent,\n        contentB: z.union([TestimonialsContent, z.literal(null)]),\n    }),\n]);",
                "filename": "web/server/src/modules/checkout-v2/checkout-v2.dtos.ts",
                "start_index": 5222,
                "end_index": 8020,
                "start_line": 166,
                "end_line": 332,
                "max_line": 428,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "config: {\n                        productPerRow: 'onePerRow',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                        showBreakdown: false,\n                        declineButtonStyle: 'link',\n                        productList: [\n                            {\n                                productId: aiRecId5,\n                                sortOrder: 1,\n                                purchaseOption: 'BOTH',\n                                quantitySelection: false,\n                                hideIfInOriginalOrder: false,\n                                isProductReviewEnabled: true,\n                                discount: {\n                                    type: 'percentage',\n                                    value: discountAmount,\n                                    compareAtPrice: true,\n                                },\n                                shipping: {\n                                    type: 'free',\n                                    value: 0,\n                                    perUnit: false,\n                                },\n                                switcher: {\n                                    enabled: false,\n                                    showAll: false,\n                                },\n                                showAllOutOfStockVariants: false,\n                                variantPreselection: 'bestMatchFromInitialPurchase',\n                                imageSize: 200,\n                                mainImageBorder: false,\n                            },\n                            {\n                                productId: aiRecId6,\n                                sortOrder: 1,\n                                purchaseOption: 'BOTH',\n                                quantitySelection: false,\n                                hideIfInOriginalOrder: false,\n                                isProductReviewEnabled: true,\n                                discount: {\n                                    type: 'percentage',\n                                    value: discountAmount,\n                                    compareAtPrice: true,\n                                },\n                                shipping: {\n                                    type: 'free',\n                                    value: 0,\n                                    perUnit: false,\n                                },\n                                switcher: {\n                                    enabled: false,\n                                    showAll: false,\n                                },\n                                showAllOutOfStockVariants: false,\n                                variantPreselection: 'bestMatchFromInitialPurchase',\n                                imageSize: 200,\n                                mainImageBorder: false,\n                            },\n                        ],\n                    },\n                }",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 43470,
                "end_index": 46447,
                "start_line": 113,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n            /**\n             * Insert containers in thankyou page\n             */\n            const createContainer = (id) => `<div id=\"${id}\" class=\"aftersell-wrap\" data-id=\"${id}\"></div>`;\n            as$('body').addClass('aftersell-page');\n            as$(as$(ORDER_CONFIRMED_ID)[0]).addClass('aftersell-order-confirm');\n            const leftSections = as$(CUSTOMER_INFO_ID);\n            if (leftSections && leftSections.length) {\n                as$(leftSections[leftSections.length - 1]).addClass('aftersell-customer-info');\n            }\n            as$(HEADER_SECTION_ID).addClass('aftersell-header-section');\n            as$(ORDER_SUMMARY_ID).addClass('aftersell-order-summary');\n            as$('.aftersell-header-section')\n                .before(createContainer(AS_BEFORE_HEADER))\n                .after(createContainer(AS_AFTER_HEADER));\n            as$('.aftersell-order-confirm')\n                .before(createContainer(AS_BEFORE_ORDER_CONFIRMED))\n                .after(createContainer(AS_AFTER_ORDER_CONFIRMED));\n            as$('.aftersell-customer-info').after(createContainer(AS_AFTER_CUSTOMER_INFO));\n            as$('.aftersell-order-summary')\n                .before(createContainer(AS_BEFORE_ORDER_SUMMARY))\n                .after(createContainer(AS_AFTER_ORDER_SUMMARY));\n\n            /**\n             * Revenue Tracking globally\n             */\n            const checkoutFromAftersell = store.get('as_goto_checkout_initiated');\n\n            /**\n             * For product recommendation widget we have to make sure that the accepted variant is checkout\n             */\n            const shopifyCheckout = (window.Shopify || {}).checkout || {};\n            const orderId = shopifyCheckout.order_id;\n            const checkoutVariantFromAftersell = +(store.get('as_goto_checkout_variant') || 0);\n            const currentWidgetName = store.get('as_current_widget_name');\n            const IS_PRODUCT_RECOMMENDATION_WIDGET = currentWidgetName === 'productRecommendation';\n            const IS_POPUPTIMER_WIDGET = currentWidgetName === 'popupTimer';\n            const purchasedItemVariants = (shopifyCheckout.line_items || []).map((item) => +item.variant_id) || [];\n            const orderContainsAcceptedVariant = purchasedItemVariants.includes(checkoutVariantFromAftersell);\n            //total_price in liquid object by default is in the local (presentment) currency\n            const orderAmount = ((shopifyCheckout.total_price_set || {}).shop_money || {}).amount;\n            const subtotalPrice = shopifyCheckout.subtotal_price;\n            const discount =\n                window.Shopify && Shopify.checkout && Shopify.checkout.discount && Shopify.checkout.discount.code;\n            const discountCode =\n                store.get(POPUP_TIMER_SAVED_DATA_SESSION_KEY) &&\n                store.get(POPUP_TIMER_SAVED_DATA_SESSION_KEY).discountCode;\n            const lineItems = shopifyCheckout.line_items;",
                "filename": "web/widgets/src/apps/widgets/index.ts",
                "start_index": 3348,
                "end_index": 6282,
                "start_line": 5,
                "end_line": 146,
                "max_line": 354,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n    const aiRecId1 = uuidv4();\n    const aiRecId2 = uuidv4();\n    const aiRecId3 = uuidv4();\n    const aiRecId4 = uuidv4();\n\n    const textStringUpsellDefault =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more! Grab another for </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;\n\n    const textStringDownsell =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another...Get an additional </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 2487,
                "end_index": 4357,
                "start_line": 1,
                "end_line": 75,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\"space-between\">\n                    <CheckboxTriggerName\n                        label=\"Enable customer order history trigger?\"\n                        disabled={disabled}\n                        {...fields.checked}\n                    />\n                </HorizontalStack>\n                {fields.checked.value && (\n                    <VerticalStack gap=\"4\">\n                        <HorizontalStack gap=\"2\">\n                            <Select\n                                label=\"\"\n                                disabled={settingsDisabled}\n                                options={[\n                                    { label: 'Customer previously ordered', value: 'include' as IncludeOrExclude },\n                                    {\n                                        label: 'Customer has not previously ordered',\n                                        value: 'exclude' as IncludeOrExclude,\n                                    },\n                                ]}\n                                value={fields.includeOrExclude.value}\n                                onChange={(val: IncludeOrExclude) => fields.includeOrExclude.onChange(val)}\n                            />\n                            <Button disabled={settingsDisabled} onClick={() => setOpen(true)}>\n                                {selectionCount ? `Edit selection (${selectionCount})` : 'Select'}\n                            </Button>\n                            <ProductSelectModal\n                                isOpen={open}\n                                onClose={() => setOpen(false)}\n                                onSave={(arg) => {\n                                    fields.products.onChange(getProductIdsFromGQLEntity(arg.products || [], true));\n                                    fields.collections.onChange(getCollectionsIdsFromGQLEntity(arg.collections || []));\n                                    setOpen(false);\n                                }}\n                                productLevel={SelectionLevelEnum.MULTIPLE}\n                                collectionLevel={SelectionLevelEnum.MULTIPLE}\n                                preSelectedProducts={(fields.products.value || []).map(formatProductToGQLProduct)}\n                                preSelectedCollections={(fields.collections.value || []).map(\n                                    formatCollectionToGQLCollection\n                                )}\n                            />\n                        </HorizontalStack>\n\n                        <Text variant=\"bodyMd\" as=\"p\" color=\"subdued\">\n                            This only checks previous orders placed by the customer. It does not include the current\n                            order that the customer is about to place. You can use the product/collection or exclusion\n                            triggers to add conditions based on the current order.\n                        </Text>\n\n                        {hasAllRequiredScopes || !additionalOauthScopes ?",
                "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                "start_index": 52348,
                "end_index": 55340,
                "start_line": 770,
                "end_line": 1282,
                "max_line": 2225,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<RangeSlider\n                            onChange={(val: number) => {\n                                onChangeConfig({\n                                    imageSize: val,\n                                });\n                            }}\n                            output\n                            step={50}\n                            value={config.imageSize!}\n                            label=\"Image size\"\n                            min={150}\n                            max={450}\n                            prefix={<p>150</p>}\n                            suffix={<p>450</p>}\n                        />\n                    )}\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Heading\n                    </Text>\n                    <RichTextEditor\n                        isMultiProduct={isMultiProduct}\n                        editorState={fields.heading.value}\n                        offerVersion={offerVersion}\n                        onChange={getHandleChangeRichTextEditor('heading')}\n                        isPostPurchase\n                    />\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Body text\n                    </Text>\n                    <RichTextEditor\n                        isMultiProduct={isMultiProduct}\n                        editorState={fields.text.value}\n                        offerVersion={offerVersion}\n                        onChange={getHandleChangeRichTextEditor('text')}\n                        isPostPurchase\n                    />\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Image\n                    </Text>\n                    <ImageUploader\n                        onUpload={(result: { file: string }) => {\n                            onChangeConfig({\n                                file: result,\n                            });\n                        }}\n                        onDelete={() => {\n                            onChangeConfig({\n                                file: undefined,\n                            });\n                        }}\n                        file={config.file ? config.file : null}\n                    />\n                    {offerVersion === 'v2' && (\n                        <>\n                            <RangeSlider\n                                onChange={(val: number) => {\n                                    onChangeConfig({ topPadding: val });\n                                }}\n                                output\n                                step={2}\n                                value={config.topPadding ?? 0}\n                                label=\"Top padding\"\n                                min={0}\n                                max={10}\n                                prefix={<p>0</p>}\n                                suffix={<p>10</p>}\n                            />",
                "filename": "web/client/src/pages/funnels/components/text-and-image-widget-settings.tsx",
                "start_index": 9751,
                "end_index": 12619,
                "start_line": 119,
                "end_line": 198,
                "max_line": 217,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "[\n                {\n                    appId: 'addTextWidget',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 0,\n                    config: {\n                        heading: {\n                            value: `<p style=\"text-align:center;\"><span style=\"font-size: 24px;\"><strong>Don't miss out on these </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>! </strong></span></p>`,\n                        },\n                        text: {\n                            value: '',\n                        },\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },\n                {\n                    appId: 'timer',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 1,\n                    config: {\n                        minutes: '5',\n                        heading: `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;\">Add any 1 of the following 4 products! <strong>Limited time offer:</strong></span><strong> </strong><a href=\"https://c9da132488ea.ngrok.io/funnels/single/62f46c743e93b55e47cce44d/editor/undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><strong> </strong></p>`,\n                        text: '',\n                        textColor: 'Black',\n                        backgroundColor: 'Blue',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 10259,
                "end_index": 12117,
                "start_line": 29,
                "end_line": 965,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": ") => {\n    const yesButtonMarkup = (\n        <button\n            className=\"rokt-button\"\n            style={{\n                backgroundColor: config.primaryButtonBackgroundColor,\n                color: config.primaryButtonFontColor,\n                borderColor: config.primaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            Yes please\n        </button>\n    );\n    const noButtonMarkup = (\n        <button\n            className=\"rokt-button\"\n            style={{\n                backgroundColor: config.secondaryButtonBackgroundColor,\n                color: config.secondaryButtonFontColor,\n                borderColor: config.secondaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            No thanks\n        </button>\n    );\n\n    return (\n        <div className=\"rokt-content preview\">\n            <div className=\"wrapper\" style={{ fontFamily: config.textFontFamily }}>\n                <div className=\"flex column gap-2\" style={{ color: config.paragraphFontColor }}>\n                    <p className=\"text-bold\">Hi, thank you for your purchase:</p>\n                    <div className=\"flex column full-width gap-3\">\n                        <div className=\"flex column full-width\">\n                            <p className=\"text-regular\">",
                "filename": "web/client/src/pages/rokt/rokt.page.tsx",
                "start_index": 59509,
                "end_index": 61086,
                "start_line": 52,
                "end_line": 1292,
                "max_line": 1493,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "solution_task": {
            "structured_resp": "Clarify:\nThe issue involves preventing text wrapping within tables, specifically in the context of displaying testimonials or other content in a structured manner within a complex web application.\n\nHypothesize:\nThe issue may be related to CSS styling applied to table elements or cells where testimonials or trigger conditions are displayed. Possible causes include:\n- Insufficient width allocated to table cells or columns.\n- CSS properties like `white-space`, `overflow`, or `text-overflow` not set appropriately.\n- Table layout not being responsive or not adapting well to different screen sizes.\n\nExperiment:\n- Review the provided code snippets and documentation to identify any CSS or styling related to tables where testimonials or trigger conditions are displayed.\n- Look for any inline styles or CSS classes that might be affecting text wrapping within table cells.\n- Check if there are any responsive design guidelines or practices mentioned in the external Shopify documentation that are not being followed.\n\nAnalyze:\nBased on the provided information, there is no direct reference to CSS or styling for tables within the code snippets. The issue may not be directly related to the TypeScript DTOs or the Shopify UX guidelines provided. The HTML snippets from the `thankyoupage` component could potentially contain the table structure where the issue is present, but specific CSS or inline styles are not included in the snippets.\n\nResolve:\nTo address the issue of preventing text wrapping within tables for testimonials or trigger conditions, the following steps should be taken:\n\n- Identify the CSS file or inline styles that apply to the tables displaying testimonials or trigger conditions.\n- Apply the following CSS properties to the table cells (`td` or `th`) where text wrapping should be prevented:\n  ```css\n  .no-wrap-cell {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  ```\n- Ensure that the table layout is responsive and adapts to different screen sizes. This may involve using media queries to adjust table and cell widths based on the viewport size.\n- If the table is part of a React component, ensure that the component receives the appropriate className or style prop to apply the non-wrapping behavior.\n- Test the changes across different browsers and devices to ensure that the text wrapping issue is resolved without introducing new layout issues.\n\nIf the issue persists or if there are additional constraints not covered by the provided information, further investigation into the specific HTML and CSS code for the tables in question would be necessary.",
            "response": "To ensure that testimonials and other content within tables in a web application are displayed correctly without text wrapping, it's essential to apply specific CSS styling to the table elements. This will prevent the text from wrapping and ensure a clean, structured presentation of the content, which is particularly important for maintaining the readability and aesthetic of testimonials.\n\n- Locate the CSS file or inline styles associated with the tables where the testimonials or trigger conditions are displayed.\n- Implement the following CSS rules to the relevant table cells to stop text from wrapping:\n  ```css\n  .no-wrap-cell {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  ```\n- Modify the table design to be responsive, allowing it to adjust to various screen sizes, possibly by using media queries to alter table and cell dimensions based on the viewport.\n- In the case of a React component, confirm that the component is passed the correct `className` or `style` prop to enforce the non-wrapping behavior.\n- Conduct thorough testing on different browsers and devices to ensure the solution is effective and does not cause other layout issues."
        },
        "snippet_processor_task": {
            "extensions/post-purchase/src/__samples__/textFormattingSample.ts": [
                {
                    "chunk": {
                        "score": 7,
                        "takeaways": "Provides detailed guidelines for implementing discounts in user interfaces, including discount information display, navigation, discount page structure, error validation, and responsive layouts.",
                        "snippet": {
                            "code": "Deployment\n Distribution\n Billing\n App Store\n UX guidelines for discounts\n A great buyer-facing user experience (UX) for discounts is important to the success of app users. This guide explains important considerations for implementing discounts in user interfaces (UIs).\n User interface guidelines\n Apps should consider how discounted products appear in multiple places on the online store, such as product pages, collection pages, search results, featured product sections on the home page, and quick view modals on product cards. Surfacing potential savings in these areas can further encourage customers to purchase.\n Discounts information is displayed in the following components of the online store:\n Product forms\n Cart items\n Order details\n When building your discount types, first decide if your discount will apply to specific products in an order, to the order as a whole, or to the shipping for the order. If your discount could belong to multiple categories, then you should create separate discount types for each.\n Note\n The class of the discount type that you create is set as a static value in a .toml file when your discount script is uploaded. The class can\u2019t be changed later.\n Whether a discount is a product, order, or shipping discount determines what options users have for allowing it to combine with other discounts at checkout.\n Navigation\n The discount details page has a breadcrumb button (the arrow \u2190 next to the page title). The breadcrumb button must always go back to the page that the user came from. For example, when the details page is reached using the Discounts page of the Shopify admin, the breadcrumb button must return the user to the Discounts page.\n If you choose to link to your discount details page from somewhere else, such as a page in your app, then the breadcrumb button should return the user to that page.\n Discount page\n Use the provided template and React component library to build the details page (create/edit page) for your discount type.\n The discount details page has a number of standard cards:\n Method\n Minimum purchase requirements\n Customer eligibility\n Maximum uses\n Combinations\n Active dates\n Best practices\n Implement everything in the provided template, only removing elements when they don\u2019t make logical sense for your discount type. For example, it doesn\u2019t make sense for a Buy X Get Y discount to have the minimum purchase requirements card, because \u201cbuy x\u201d already defines the minimums. You still need to submit data for any required fields in the Shopify API, so submit a value that makes sense for your discount.\n The card immediately below the Method card typically contains the fields that will differ between discount types. Often this card\u2019s title is Value, which refers to the discount amount that the customer will get. You can also choose a title that makes sense for your discount type.\n As described in Shopify functions, store any custom data used by your discount type using metafields.\n Always provide validations for your discount type\u2019s custom fields that are stored as metafields. If users enter invalid data, then they\u2019ll get helpful feedback.\n Error validation\n You'll get errors back from bad data passed to API calls, but validating the data client-side before firing off a network request makes for a faster UI experience.\n If you choose to validate on the client, then take extra care with free-form entry, such as text fields. Run your validation check only after focus moves away from the field and there's at least one character in the field. This helps avoid marking the field with an error before users have committed a value.\n You might choose not to validate client-side in some cases, such as when validation on a given field takes longer than 1000 ms and validation performance can\u2019t be improved.\n If you get any validation errors, then display them on the specific fields that contain the invalid data, including a message explaining what went wrong and how to fix it. Polaris form components have an error property that you can use for this purpose.\n If there are multiple invalid fields, then provide an error banner at the top of the page, and focus the banner on submit. The banner should include a list of the fields with problems. Link each item in the banner to the corresponding field on the page, enabling the user to jump to that field.\n If there is only a single field with an error, then move focus to that field instead.\n Learn more about form validation.\n Responsive layouts\n Make any custom layout responsive, whether it\u2019s the fields in the Value card, or any other custom UI.\n Ensure that the layout is fluid down to 320 px wide.\n Ensure that key functionality remains available on a touchscreen device. Avoid conveying essential information using tooltips or hover states.\n Avoid truncating text whenever possible.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n User interface guidelines\n Navigation\n Discount page\n Error validation\n Responsive layouts\n Updates & News",
                            "filename": "docs/apps/selling-strategies/discounts/experience/ux-guidelines/content.txt",
                            "start_index": 0,
                            "end_index": 4995,
                            "start_line": 1,
                            "end_line": 55,
                            "max_line": 55,
                            "git_instance": "github",
                            "repo_name": "shopify_documentation",
                            "sha": ""
                        },
                        "section": "external_shopify"
                    },
                    "reason_for_reviewing": "The snippet is a starting point for investigating text formatting issues within the post-purchase section, which is directly related to the issue of wrapping in tables for testimonials and trigger conditions."
                },
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet related to displaying different offers (upsell, downsell) based on user actions in a web application.",
                        "snippet": {
                            "code": "variant=\"bodyLg\" as=\"span\">\n                            Upsell #1\n                        </Text>\n                    </VerticalStack>\n                    <OfferCardOrAddPlaceholder\n                        funnelId={funnelId}\n                        funnelNameForm={funnelNameForm}\n                        funnelOffersForm={funnelOffersForm}\n                        splitTestsForm={splitTestsForm}\n                        offerType=\"upsell_default\"\n                        saveIfDirty={saveIfDirty}\n                        analytics={upsell1Analytics}\n                        splitTestAnalytics={upsell1SplitTestAnalytics}\n                        analyticsLoading={queryResult.isLoading}\n                    />\n                </VerticalStack>\n            </Box>\n            <HorizontalStack gap=\"10\">\n                <Box width=\"45%\">\n                    <VerticalStack gap=\"3\">\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingLg\" as=\"h5\">\n                                If accepted\n                            </Text>\n                            <Text variant=\"bodyLg\" as=\"span\">\n                                Upsell #2\n                            </Text>\n                        </VerticalStack>\n                        <OfferCardOrAddPlaceholder\n                            funnelId={funnelId}\n                            funnelNameForm={funnelNameForm}\n                            funnelOffersForm={funnelOffersForm}\n                            splitTestsForm={splitTestsForm}\n                            offerType=\"upsell_additional\"\n                            saveIfDirty={saveIfDirty}\n                            analytics={upsell2Analytics}\n                            splitTestAnalytics={upsell2SplitTestAnalytics}\n                            analyticsLoading={queryResult.isLoading}\n                        />\n                    </VerticalStack>\n                </Box>\n                <Box width=\"45%\">\n                    <VerticalStack gap=\"3\">\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingLg\" as=\"h5\">\n                                If declined\n                            </Text>\n                            <Text variant=\"bodyLg\" as=\"span\">\n                                Downsell\n                            </Text>\n                        </VerticalStack>\n                        <OfferCardOrAddPlaceholder\n                            funnelId={funnelId}\n                            funnelNameForm={funnelNameForm}\n                            funnelOffersForm={funnelOffersForm}\n                            splitTestsForm={splitTestsForm}\n                            offerType=\"downsell\"\n                            saveIfDirty={saveIfDirty}\n                            analytics={downsellAnalytics}\n                            splitTestAnalytics={downsellSplitTestAnalytics}\n                            analyticsLoading={queryResult.isLoading}",
                            "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                            "start_index": 25424,
                            "end_index": 28396,
                            "start_line": 361,
                            "end_line": 710,
                            "max_line": 2225,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Provides sample code for text formatting capabilities on the post-purchase page, which is relevant to solving the text wrapping issue in tables for testimonials."
                }
            ],
            "web/client/src/pages/funnels/funnels-create.page.tsx": [
                {
                    "chunk": {
                        "score": 7,
                        "takeaways": "Provides detailed UX guidelines for creating pre-purchase product offers in a checkout UI extension, including component recommendations, layout instructions, and design best practices.",
                        "snippet": {
                            "code": "Delivery and shipping\n Product offers\n Overview\n Pre-purchase\n Overview\n Build a pre-purchase offer\n UX guidelines\n Post-purchase\n Payments\n Thank you and Order status\n App Store\n UX guidelines for pre-purchase product offers\n Shopify Plus\n Checkout UI extensions that render on the information and shipping and payment steps in checkout are available only to stores on a Shopify Plus plan.\n This guide introduces UX guidelines for adding pre-purchase product offers to checkout.\n Placement\n Choosing the right target is key to providing a good experience.\n Before you start building, decide whether you want your product offer to render at a static target, a dynamic target, or whether you'll support both. To learn more about target types, refer to the target API reference.\n This product offer example uses the Checkout::Dynamic::Render[OrderSummary4] target for the following reasons:\n The target keeps the line items, discounts, and money lines together, which makes it easy for customers to scan their order summary.\n A product offer is considered secondary content, and should therefore be placed outside of the order summary.\n Note\n On mobile, the order summary area is collapsed by default. The UI won't display the product offer until the customer expands the order summary.\n Components\n The components to create a product offer depends on the extension's possible states.\n The product offer use case can have the following states:\n Loading\n Loaded (default)\n Adding\n Added\n Note\n Added doesn't need a success banner. The addition of the item to the order summary is confirmation that the item was successfully added to the order.\n You can use the following components to create the states:\n Components list for the product offer use case\n Component Preview Tips\n Divider Because the product offer will likely display in a core checkout feature such as contact information or order summary line items, include divider lines to help separate the product offer from the order summary.\n SkeletonText To keep placement from shifting when the content loads, try to reflect the actual content\u2019s dimensions.\n SkeletonImage\n Image Keep the thumbnail size the same as the thumbnail in the order summary to keep the layout consistent.\n Heading If possible, allow merchants to customize the heading content.\n Text\n Text\n Button Use secondary buttons here, reserving the primary button for the main call to actions like Pay now and Next step.\n Banner Use banners to communicate error states.\n Layout\n When you use a nested layout, you'll need only the following structural components:\n Components list for the product offer use case\n Component Preview Tips\n BlockStack You can nest BlockStack components either with themselves or with other components.\n InlineLayout You can nest Inline components with themselves or with other components.\n BlockStack\n Use the BlockStack component to stack elements on top of each other vertically.\n Nesting BlockStack\n Note\n BlockStack and BlockLayout components are similar to each other. BlockLayout enables you to specify different row sizes. With BlockStack, you don't need to do that.\n Set spacing between the divider and the content to loose, for consistency with the rest of checkout\u2019s spacing. Set the spacing between the heading and the line item content to base.\n To address different spacing values, you can nest a BlockStack inside of another BlockStack component.\n InlineLayout\n To display products horizontally, use InlineLayout, and set the spacing between elements to base.\n UX guidelines\n Adhere to the following guidelines when you're designing a product offer checkout UI extension, so that you can help merchants gain customer trust and provide a great checkout experience:\n Only show two product offers at a time\n Adding more than two offers can overwhelm customers, making it difficult for them to choose a product.\n Let merchants personalize product offers\n Customers are more likely to respond positively to offers that relate to their shopping journey or to the items in their cart.\n Only show necessary information\n Make it easy for customers to process offer information by only showing what's most relevant. For example, if supporting information like a product description is required, then progressively reveal it to customers at strategic moments.\n Next steps\n Learn how to offer customers additional products at checkout that they can add to their order.\n Explore UX guidelines for the entire checkout experience.\n For general best practices for developing apps, refer to Best practices for building Shopify apps.\n For practical guidance on how to design a user interface for the Shopify admin, refer to Shopify's App Design Guidelines.\n Get familiar with Polaris accessibility and content guidelines.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Placement\n Components\n Layout\n UX guidelines",
                            "filename": "docs/apps/checkout/product-offers/pre-purchase/ux-guidelines/content.txt",
                            "start_index": 0,
                            "end_index": 4860,
                            "start_line": 1,
                            "end_line": 80,
                            "max_line": 80,
                            "git_instance": "github",
                            "repo_name": "shopify_documentation",
                            "sha": ""
                        },
                        "section": "external_shopify"
                    },
                    "reason_for_reviewing": "This snippet is potentially relevant to the issue of preventing text wrapping within tables for testimonials, as it provides details about discount offers and thank you page extensibility."
                }
            ],
            "web/client/src/pages/funnels-ty-page/components/product-recommendation-widget.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Defines configurations for specific components in the web application related to upsellMachinePresets.",
                        "snippet": {
                            "code": "[\n                {\n                    appId: 'addTextWidget',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 0,\n                    config: {\n                        heading: {\n                            value: `<p style=\"text-align:center;\"><span style=\"font-size: 24px;\"><strong>Don't miss out on these </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>! </strong></span></p>`,\n                        },\n                        text: {\n                            value: '',\n                        },\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },\n                {\n                    appId: 'timer',\n                    uuId: uuidv4(),\n                    active: true,\n                    sortOrder: 1,\n                    config: {\n                        minutes: '5',\n                        heading: `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;\">Add any 1 of the following 4 products! <strong>Limited time offer:</strong></span><strong> </strong><a href=\"https://c9da132488ea.ngrok.io/funnels/single/62f46c743e93b55e47cce44d/editor/undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><strong> </strong></p>`,\n                        text: '',\n                        textColor: 'Black',\n                        backgroundColor: 'Blue',\n                        topPadding: 4,\n                        bottomPadding: 0,\n                    },\n                },",
                            "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                            "start_index": 10259,
                            "end_index": 12117,
                            "start_line": 29,
                            "end_line": 965,
                            "max_line": 970,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet provides settings related to UI customization, including layout choices, which can be relevant for understanding and solving the UI layout and styling issues."
                }
            ],
            "web/client/src/pages/funnels/components/product-information-widget-settings.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Sample code for text formatting capabilities on the post-purchase page using Shopify post-purchase UI extensions.",
                        "snippet": {
                            "code": "/*\n * --- DO NOT IMPORT THIS FILE! ---\n *\n * This is NOT meant to be part of the production bundle. It is only\n * a sample to show the text formatting capabilities on the post-purchase\n * page.\n *\n * To see this example, serve this file as index.js with `shopify extension serve`\n */\n\nimport {\n    extend,\n    render,\n    Link,\n    Text,\n    Layout,\n    TextContainer,\n    TextBlock,\n    Heading,\n    BlockStack,\n    Separator,\n    InlineStack,\n} from '@shopify/post-purchase-ui-extensions-react';\n\nextend('Checkout::PostPurchase::ShouldRender', async () => ({ render: true }));",
                            "filename": "extensions/post-purchase/src/__samples__/textFormattingSample.ts",
                            "start_index": 0,
                            "end_index": 578,
                            "start_line": 1,
                            "end_line": 25,
                            "max_line": 327,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Involves RichTextEditor components for different sections, which could be relevant for addressing text content display and editing issues within the web application."
                }
            ]
        },
        "bouncer_response": {
            "score": 4,
            "criteria": "The RESPONSE must provide actionable, relevant guidance to more parts of the PROMPT's described issue to score higher.",
            "supporting_evidence": "The RESPONSE provides a general approach to preventing text wrapping in tables by suggesting CSS rules to apply to the table elements. It also suggests modifying the table design to be responsive and conducting thorough testing, which are relevant and actionable steps. However, the RESPONSE does not address the specific context of the PROMPT, which involves a web application with testimonials and trigger conditions. The provided code snippets are not directly related to the PROMPT, as they point to a generic GitHub repository structure rather than the specific codebase mentioned in the PROMPT. The RESPONSE fails to provide specific guidance on how to apply the CSS rules to the actual elements in question, as described in the glossary, and does not address the GitHub pull request provided in the PROMPT.",
            "clarification_questions": "NONE"
        },
        "end_time": 1714342246.6590028,
        "result": "Doesn't seem like we have fully grasped all the specifics of this ticket \ud83d\ude10.                   But we've outlined some ideas that might help you get started:\n\nTo ensure that testimonials and other content within tables in a web application are displayed correctly without text wrapping, it's essential to apply specific CSS styling to the table elements. This will prevent the text from wrapping and ensure a clean, structured presentation of the content, which is particularly important for maintaining the readability and aesthetic of testimonials.\n\n- Locate the CSS file or inline styles associated with the tables where the testimonials or trigger conditions are displayed.\n- Implement the following CSS rules to the relevant table cells to stop text from wrapping:\n  ```css\n  .no-wrap-cell {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  ```\n- Modify the table design to be responsive, allowing it to adjust to various screen sizes, possibly by using media queries to alter table and cell dimensions based on the viewport.\n- In the case of a React component, confirm that the component is passed the correct `className` or `style` prop to enforce the non-wrapping behavior.\n- Conduct thorough testing on different browsers and devices to ensure the solution is effective and does not cause other layout issues.\n\n### Code snippets to check\n\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [funnels](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels) \u2192 [utils](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/utils)- [Lines 29 - 965](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/utils/upsellMachinePresets.ts#L29-L965)\n\n This snippet provides settings related to UI customization, including layout choices, which can be relevant for understanding and solving the UI layout and styling issues.\n-  \u2192 [extensions](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/extensions) \u2192 [post-purchase](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/extensions/post-purchase) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/extensions/post-purchase/src) \u2192 [__samples__](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/extensions/post-purchase/src/__samples__)- [Lines 1 - 25](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/extensions/post-purchase/src/__samples__/textFormattingSample.ts#L1-L25)\n\n Involves RichTextEditor components for different sections, which could be relevant for addressing text content display and editing issues within the web application."
    }
}