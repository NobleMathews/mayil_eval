{
    "id": "BEAM-3113",
    "repo_name": "testbed/aftersell",
    "title": "Improve version upgrade banner styling",
    "body": "\n[IMG_1]\n\n* The font size of the body text is larger than all other banners in the app. It should be a smaller font size to match the body font of the rest of the app\n* Rewording:\n  * Title: \"Update checkout version\"\n  * Body: \"A new checkout version is available. Update to access new triggers, improved split testing, automatic upsells, and more.\"\n  * Button: \"Update checkout\"\n  * Notes:\n    * Casing of title and button should match the rest of the app (first word capitalized)\n    * Reduce amount of content to convey message more clearly\n* The spacing between the banner and the next card is smaller than the spacing between the two cards below. These should be equal.\n---\nGlossary:\nimage_2: The image displays a user interface of a \"Checkout editor\" with a prominent upgrade banner at the top. The banner has a yellow-orange background with a red border at the top. Inside the banner, there is an icon on the left that appears to be a warning or alert symbol (a triangle with an exclamation mark) followed by a rocket emoji. The title text next to the icon reads \"Faster, Smoother, & Better Checkout Editor\" in bold and is larger than the body text. The body text underneath the title says \"Explore our upgraded checkout editor. Discover new triggers, AI upsells, multiple widget configurations, split testing and other customization features. Upgrading is fully reversible and will automatically transfer your current setup.\" Below the body text, there is a button labeled \"Update Now.\"\n\nTo the right of the banner, within the same view, there are two cards. The first card, labeled \"Upsell widget 1 active,\" is directly adjacent to the upgrade banner with a very narrow gap between them. The second card, further to the right, is labeled \"Upsell widget 1 preview\" and shows a preview of products with an \"Add\" button next to each product. The gap between these two cards is visibly larger than the gap between the upgrade banner and the first card.\n\nThe rest of the interface to the left of the banner shows a vertical navigation menu with various options such as \"Upsell widgets,\" \"Content widgets,\" and others, each with corresponding icons and toggle switches. The menu items are not directly adjacent to the upgrade banner, leaving a whitespace margin between them.\ngithub_pr_1: https://github.com/beam-commerce/aftersell/pull/1108\n\n",
    "classification": "feature request",
    "state": "closed",
    "repo_link": "https://github.com/testbed/aftersell.git",
    "requested_commit": null,
    "issue_tracker_identifier": "",
    "ai_cost": {
        "issue_classifier": 0.00041299999999999996,
        "issue_summarizer": 0.01637,
        "search_embedding": 6.708e-05,
        "documentation_agent": 0.00818,
        "repo_summary": 0.09723049999999998,
        "issue_star_solver": 0.1084595,
        "snippet_processor": 0.027290000000000002,
        "bouncer": 0.04986
    },
    "attachments": [
        {
            "title": "BEAM-3113-improve-version-upgrade-banner-styling",
            "url": "https://github.com/beam-commerce/aftersell/pull/1108",
            "content": "",
            "placeholder_tag": "github_pr_1",
            "content_type": "ExternalAssetsType.GITHUB_PR"
        }
    ],
    "inline_assets": [
        {
            "title": "",
            "url": "https://uploads.linear.app/a4f50fbf-738c-4ae7-b7ca-dc198278934f/51afc9c1-a851-46ff-b9e4-ef5fabac516a/3aa18ab6-9b8c-4aba-ba4f-bc6d9a0763ea",
            "content": "",
            "placeholder_tag": "image_2",
            "content_type": "ExternalAssetsType.IMAGE"
        }
    ],
    "linked_issue_ids": [],
    "comments": [],
    "issue_summary": "Error Messages: None provided.\n\nFunction and Variable Names:\n- Font size of body text in the banner\n- Title text: \"Update checkout version\"\n- Body text: \"A new checkout version is available. Update to access new triggers, improved split testing, automatic upsells, and more.\"\n- Button text: \"Update checkout\"\n- Spacing between the banner and the next card\n- Spacing between two cards (\"Upsell widget 1 active\" and \"Upsell widget 1 preview\")\n\nTechnical Descriptions:\n- Font size of the body text in the upgrade banner should match the body font size of the rest of the app.\n- Rewording of the title, body, and button text with specific content and casing instructions.\n- Spacing consistency issue between the upgrade banner and the next card, and between two cards below.\n\nOutput Format:\n- Adjust font size of banner body text to match app's body font size.\n- Update title to \"Update checkout version\" with first word capitalized.\n- Update body text to \"A new checkout version is available. Update to access new triggers, improved split testing, automatic upsells, and more.\"\n- Update button text to \"Update checkout\" with first word capitalized.\n- Ensure spacing between the banner and the next card is equal to the spacing between the two cards below.\n\nAdditional Context:\n- Image (IMG_1) description provided.\n- GitHub PR: https://github.com/beam-commerce/aftersell/pull/1108",
    "repo_summary": "The project is a complex web application with multiple directories and components. It includes a checkout editor, post-purchase extensions, and various widgets. The project uses TypeScript, React, and Shopify CLI for development. The codebase follows a modular structure with different packages for common functionalities, server-side logic, and client-side components. The project also integrates with various third-party services like Shopify, Mixpanel, and Facebook Pixel for analytics and tracking.\n\nThe ticket raised is to improve the styling of a version upgrade banner in the checkout editor. The changes include adjusting font sizes, rewording the banner content, and ensuring consistent spacing between UI elements. The banner should have a smaller font size, updated wording, and equal spacing with adjacent cards. Additionally, the casing of the title and button text should match the app's standards, and the content should be concise for better clarity.",
    "mayil_collected_data": {
        "status": "completed",
        "start_time": 1714338320.631352,
        "classification": "feature request",
        "initial_code_snippets": [
            {
                "code": "<Banner\n                                            status=\"warning\"\n                                            title={'\ud83d\ude80 Faster, Smoother, & Better Checkout Editor'}\n                                            action={{\n                                                content: 'Update Now',\n                                                loading: updateVersionLoading,\n                                                onAction: () => {\n                                                    updateCheckoutVersion('V2');\n                                                },\n                                            }}\n                                        >\n                                            <Text variant=\"bodyLg\" as=\"p\">\n                                                Explore our upgraded checkout editor. Discover new triggers, AI upsells,\n                                                multiple widget configurations, split testing and other customization\n                                                features. Upgrading is fully reversible and will automatically transfer\n                                                your current setup.\n                                            </Text>\n                                        </Banner>\n                                    )}\n                                    {currentSplitTestTab === 'A' || !currentSplitTestTab\n                                        ? widgetsVersionA\n                                        : widgetsVersionB}\n                                </VerticalStack>\n                            )}\n                        </div>\n                        <div className={styles.preview}>\n                            <div>\n                                <Preview widget={selectedWidgetData} widgetType={previewSelection?.type} />\n                                {selectedTab === 'rewardsWidget' && (\n                                    <div style={{ marginTop: '20px' }}>\n                                        <Banner title=\"\" status=\"info\">\n                                            The rewards bar widget is intended to be used with one or more upsell\n                                            widgets. If a customer sees that they're $10 away from free shipping, they\n                                            might want to accept one of your upsell products to get there!\n                                        </Banner>\n                                        <Banner\n                                            title=\"Create discount\"\n                                            action={{\n                                                content: 'Create discount',",
                "filename": "web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx",
                "start_index": 10154,
                "end_index": 12821,
                "start_line": 236,
                "end_line": 274,
                "max_line": 306,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Banner\n                                title=\"Claim your 7-day free trial\"\n                                action={{\n                                    content: 'Claim free trial',\n                                    external: true,\n                                    url: 'https://apps.shopify.com/upcart-cart-builder?source=aftersell-app-upcart-landing-page',\n                                    onAction: () => {\n                                        setShowBanner(false);\n                                    },\n                                }}\n                                onDismiss={() => setShowBanner(false)}\n                            >\n                                Get started with UpCart right away at zero risk.\n                            </Banner>\n                        </Card>\n                    )}\n                </Layout.Section>\n                <Layout.Section fullWidth>\n                    <CustomMediaCard imgSrc={BannerImage}>\n                        <VerticalStack gap=\"2\" inlineAlign=\"start\">\n                            <HorizontalStack gap=\"2\" blockAlign=\"center\">\n                                <img style={{ width: '64px', height: '100%', borderRadius: '6px' }} src={IconImage} />\n                                <VerticalStack>\n                                    <Text as=\"h4\" variant=\"headingMd\">\n                                        UpCart \u2014 Cart Drawer & Upsell\n                                    </Text>\n                                    <Text as=\"span\" variant=\"bodyMd\" color=\"subdued\">\n                                        by AfterSell\n                                    </Text>\n                                </VerticalStack>\n                            </HorizontalStack>\n                            <VerticalStack>\n                                <Reviews title={''} />\n                                <Text as=\"span\" variant=\"bodyMd\" color=\"subdued\">\n                                    5.0 (400+ Reviews)\n                                </Text>\n                            </VerticalStack>\n                            <Text as=\"p\" variant=\"bodyMd\">\n                                UpCart is a great addition to AfterSell. Create an on-brand slide cart that boosts AOV\n                                pre-purchase.\n                            </Text>\n                            <Button\n                                external\n                                url=\"h",
                "filename": "web/client/src/pages/upcart-ad/upcart-ad.page.tsx",
                "start_index": 3655,
                "end_index": 6090,
                "start_line": 103,
                "end_line": 146,
                "max_line": 194,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{maxDiscount / 2}% off\n                            </Text>\n                            .\n                        </List.Item>\n                        <List.Item>\n                            Upsell #2: If the customer accepts the first offer, we will automatically recommend a\n                            multi-product offer of 4 products where they can accept 1 at{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount}% off\n                            </Text>{' '}\n                            (this uses Shopify's product recommendation API).\n                        </List.Item>\n                        <List.Item>\n                            Downsell: If the customer declines the first offer, we will give them one more chance to\n                            accept the same product except this time at a higher discount of{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount}% off\n                            </Text>\n                            .\n                        </List.Item>\n                    </List>\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        After the 1-click offers, customers are redirected to the thank you page. This is an opportunity\n                        to further generate conversions:\n                    </Text>\n                    <List spacing=\"loose\">\n                        <List.Item>\n                            Storewide Popup Discount: Offer{' '}\n                            <Text variant=\"headingSm\" as=\"span\">\n                                {maxDiscount / 2}% off\n                            </Text>{' '}\n                            your entire store's catalog for only 20 minutes.\n                        </List.Item>\n                    </List>\n                    {hasTyPageExtensibilityAccess && (\n                        <Banner title=\"Thank you page extensibility\" status=\"warning\">\n                            <Text as=\"p\">\n                                Your store is eligible to use Shopify UI extensions on the thank you page. The Storewide\n                                Popup Discount is only supported using AfterSell's script tags and will not be shown to\n                                customers if you{' '}\n                                <Link\n                                    url={`https://${myshopify_domain}/admin/settings/checkout#upgradestatus`}\n                                    target=\"_blank\"\n                                >\n                                    have thank you page extensibility enabled\n                                </Link>\n                                .\n                            </Text>\n                        </Banner>\n                    )}\n                </VerticalStack>\n            </Modal.Section>\n            <Modal.Section>\n                <HorizontalStack align=\"end\" blockAlign=\"center\" gap=\"4\">",
                "filename": "web/client/src/pages/funnels/funnels-create.page.tsx",
                "start_index": 11579,
                "end_index": 14544,
                "start_line": 255,
                "end_line": 308,
                "max_line": 345,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{replacementUpsellDetailsAreOpen && (\n                                    <VerticalStack gap=\"4\">\n                                        <Card padding=\"0\">\n                                            <Banner title=\"This feature is currently in beta\" status=\"warning\">\n                                                We appreciate your feedback.\n                                            </Banner>\n                                        </Card>\n                                        <VerticalStack gap=\"2\">\n                                            <Text variant=\"bodySm\" as=\"p\">\n                                                You can use this feature to:\n                                            </Text>\n                                            <List>\n                                                <List.Item>upgrade a one-time purchase to a subscription</List.Item>\n                                                <List.Item>upgrade a single item to a bundle or set</List.Item>\n                                                <List.Item>\n                                                    upgrade a less expensive variant to a more expensive variant\n                                                </List.Item>\n                                            </List>\n                                            {offerVersion === 'v2' && !config.replacementUpsell &&",
                "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                "start_index": 20583,
                "end_index": 21963,
                "start_line": 462,
                "end_line": 480,
                "max_line": 1401,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { AfterSellPaidFeature } from '#aftersell/common/billing';\nimport { Banner, Text } from '@shopify/polaris';\nimport { useCurrentUser } from 'src/providers/UserProvider';\nimport { getMixpanel } from 'src/tracking/mixpnl';\n\nexport const ActionNeededBanner = () => {\n    const {\n        currentUser: user,\n        isPostPurchaseAppInUse,\n        isLoading: userInformationLoading,\n        refetch: refetchUserInformation,\n        plan,\n    } = useCurrentUser();\n    const { myshopify_domain } = user;\n\n    const hasPostPurchaseAccess = plan.planDetails.features.includes(AfterSellPaidFeature.POST_PURCHASE);\n\n    if (isPostPurchaseAppInUse || !hasPostPurchaseAccess) return null;\n    return (\n        <Banner\n            title=\"Action needed\"\n            status=\"warning\"\n            action={{\n                content: 'Enable setting',\n                // id of the section we're referring to is #additionalscripts\n                url: `https://${myshopify_domain}/admin/settings/checkout#additionalscripts`,\n                external: true,\n                onAction: () => {\n                    getMixpanel().track('Selected App Enable');\n                },\n                loading: userInformationLoading,\n            }}\n            secondaryAction={\n                userInformationLoading\n                    ? undefined\n                    : {\n                        content: 'Refresh',\n                        onAction: () => {\n                            getMixpanel().track('Selected App Check');\n                            refetchUserInformation();\n                        },\n                    }\n            }\n        >\n            <Text variant=\"bodyMd\" as=\"p\">\n                Make sure to select \"AfterSell\" in the Shopify checkout settings under the \"Post-purchase page\" section.\n                This is required to show AfterSell offers to your customers.\n            </Text>\n        </Banner>\n    );\n};",
                "filename": "web/client/src/shared-components/action-needed-banner.tsx",
                "start_index": 0,
                "end_index": 1922,
                "start_line": 1,
                "end_line": 51,
                "max_line": 51,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Layout>\n                            <Layout.Section fullWidth>\n                                <AdditionalScopesBanner\n                                    requiredAdditionalScopes={['write_checkout_branding_settings']}\n                                />\n                            </Layout.Section>\n                            <StickyLayoutSection oneThird>\n                                <Card padding=\"1\">\n                                    <VerticalStack>\n                                        <Box\n                                            paddingInlineStart=\"4\"\n                                            paddingInlineEnd=\"4\"\n                                            paddingBlockStart=\"3\"\n                                            paddingBlockEnd=\"3\"\n                                        >\n                                            <VerticalStack gap=\"2\" align=\"start\" inlineAlign=\"start\">\n                                                <HorizontalStack blockAlign=\"center\" align=\"space-between\">\n                                                    <Text variant=\"headingMd\" as=\"h6\">\n                                                        Edit branding\n                                                    </Text>\n                                                </HorizontalStack>\n                                                <HorizontalStack gap=\"2\" blockAlign=\"center\">\n                                                    {currentCheckoutProfile?.isPublished ? (\n                                                        <Badge status=\"success\" progress=\"complete\" size=\"small\">\n                                                            Live\n                                                        </Badge>\n                                                    ) : (\n                                                        <Badge status=\"info\" progress=\"complete\" size=\"small\">\n                                                            Draft\n                                                        </Badge>\n                                                    )}\n                                                    <ButtonSelect\n                                                        plain\n                                                        value={currentCheckoutProfile?.id}\n                                                        onChange={(value) => {\n                                                            setCurrentCheckoutProfile(\n                                                                checkoutProfiles.find(\n                                                                    (profile) => profile?.id === value\n                                                                )\n                                                            );\n                                                        }",
                "filename": "web/client/src/pages/checkout/checkout-branding.page.tsx",
                "start_index": 6634,
                "end_index": 9487,
                "start_line": 176,
                "end_line": 299,
                "max_line": 320,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { formatCheckoutDiscountRuleName } from '#aftersell/common/checkout-discount-rules';\nimport { Banner, InlineCode, Link, List, Text, VerticalStack } from '@shopify/polaris';\nimport React, { useMemo } from 'react';\nimport { useCheckoutDiscountCodesAllActiveAutomatic } from '../../../../hooks/useCheckoutDiscountCodesAllActiveAutomatic';\nimport { useCheckoutDiscountRules } from '../../../../hooks/useCheckoutDiscountRules';\nimport { useCreateCheckoutDiscountCode } from '../../../../hooks/useCreateCheckoutDiscountCode';\nimport { useDeleteCheckoutDiscountRule } from '../../../../hooks/useDeleteCheckoutDiscountRule';\n//import { openIntercomWithPrefilledMessage } from '../../../../components/expertReview/controller';\n\n/**\n * Technically we could create the discount for the merchant. The reason that we don't is so that we can show all\n * of the information in the banner and allow the merchant to decide if they want to create an automatic discount\n * code or not. We do not want to create a bunch of automatic discount codes in the background without the merchant\n * realizing. The limit of 5 active Function discounts per app and 25 total automatic discount codes per store is\n * fairly low. We would have to limit the number of unique discounts anyways, so I found this UX to be the most clear.\n * It also provides a way to remove the discount from all offers in case they don't want the automatic discount code\n * to be created.\n *\n * This is a Plus-only feature so the merchants are generally more technically skilled and willing to put in more\n * effort to set  up the app. I think that it is important to make the merchant aware of what is happening in this case.\n *\n * Once we can support multiple discounts with a single automatic discount code, we can create the discount for the\n * merchant and don't need this banner. We would need to figure out some way to ensure that the one automatic discount\n * code is not deleted by the merchantthough.\n */",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/discount-code-required-banner.tsx",
                "start_index": 0,
                "end_index": 1967,
                "start_line": 1,
                "end_line": 25,
                "max_line": 139,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "}\n                        </VerticalStack>\n                        <Banner\n                            title=\"Enable AfterSell UTM Triggers in theme\"\n                            action={{ content: 'View theme settings' }}\n                            secondaryAction={{ content: 'Re-check if enabled' }}\n                            status=\"warning\"\n                        >\n                            <p>\n                                Before using UTM parameter triggers, you must enable the AfterSell UTM Triggers app\n                                embed block in your theme settings. Click the button below to go to your theme settings\n                                page. <strong>Make sure to click \"Save\" on the settings page.</strong>\n                            </p>\n                        </Banner>\n                    </VerticalStack>\n                )",
                "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                "start_index": 63646,
                "end_index": 64512,
                "start_line": 23,
                "end_line": 1780,
                "max_line": 2225,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Banner\n                                        title={'Transfer Your Settings!'}\n                                        action={{\n                                            content: 'Transfer Now',\n                                            onAction() {\n                                                transferSettings();\n                                            },\n                                            loading: transferring,\n                                        }}\n                                        status=\"info\"\n                                        hideIcon={true}\n                                        onDismiss={() => {\n                                            setShowTransferBanner(false);\n                                        }}\n                                    >\n                                        <Text as=\"p\" variant=\"bodyMd\">\n                                            Transfer your settings from the old editor to the new editor with the click\n                                            of \"Transfer Now\" button.\n                                        </Text>\n                                        <Text as=\"p\" variant=\"bodyMd\">\n                                            \u26a0\ufe0f Important: If you have any current widget customizations, they will be\n                                            rewritten.\n                                        </Text>\n                                    </Banner>\n                                )}\n\n                                <WidgetEditorWithConfigurations\n                                    widgetType={focusedWidget.tab}\n                                    dynamicList={configurationDynamicLists[focusedWidget.tab]}\n                                    focusedWidget={focusedWidget}\n                                    setFocusedWidget={setFocusedWidget}\n                                    fullProducts={fullProducts}\n                                    setFullProducts={setFullProducts}\n                                />\n                            </VerticalStack>\n                        )}\n                    </div>\n                    <div className={styles.preview}>\n                        <Preview\n                            widget={\n                                configurationDynamicLists?.[focusedWidget.tab]?.value?.[focusedWidget.configuration]\n                                    ?.configurations?.[focusedWidget.index ?? 0]\n                            }\n                            widgetType={focusedWidget.tab}\n                            fullProducts={fullProducts}\n                            splitTestVersion={focusedWidget.splitTestVersion}\n                        />\n                        <div className={styles.previewBanner}>\n                            <Card>\n                                <VerticalStack gap=\"2\">",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2.page.tsx",
                "start_index": 13200,
                "end_index": 16046,
                "start_line": 310,
                "end_line": 364,
                "max_line": 612,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "variant=\"bodyLg\" as=\"span\">\n                            Upsell #1\n                        </Text>\n                    </VerticalStack>\n                    <OfferCardOrAddPlaceholder\n                        funnelId={funnelId}\n                        funnelNameForm={funnelNameForm}\n                        funnelOffersForm={funnelOffersForm}\n                        splitTestsForm={splitTestsForm}\n                        offerType=\"upsell_default\"\n                        saveIfDirty={saveIfDirty}\n                        analytics={upsell1Analytics}\n                        splitTestAnalytics={upsell1SplitTestAnalytics}\n                        analyticsLoading={queryResult.isLoading}\n                    />\n                </VerticalStack>\n            </Box>\n            <HorizontalStack gap=\"10\">\n                <Box width=\"45%\">\n                    <VerticalStack gap=\"3\">\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingLg\" as=\"h5\">\n                                If accepted\n                            </Text>\n                            <Text variant=\"bodyLg\" as=\"span\">\n                                Upsell #2\n                            </Text>\n                        </VerticalStack>\n                        <OfferCardOrAddPlaceholder\n                            funnelId={funnelId}\n                            funnelNameForm={funnelNameForm}\n                            funnelOffersForm={funnelOffersForm}\n                            splitTestsForm={splitTestsForm}\n                            offerType=\"upsell_additional\"\n                            saveIfDirty={saveIfDirty}\n                            analytics={upsell2Analytics}\n                            splitTestAnalytics={upsell2SplitTestAnalytics}\n                            analyticsLoading={queryResult.isLoading}\n                        />\n                    </VerticalStack>\n                </Box>\n                <Box width=\"45%\">\n                    <VerticalStack gap=\"3\">\n                        <VerticalStack gap=\"2\">\n                            <Text variant=\"headingLg\" as=\"h5\">\n                                If declined\n                            </Text>\n                            <Text variant=\"bodyLg\" as=\"span\">\n                                Downsell\n                            </Text>\n                        </VerticalStack>\n                        <OfferCardOrAddPlaceholder\n                            funnelId={funnelId}\n                            funnelNameForm={funnelNameForm}\n                            funnelOffersForm={funnelOffersForm}\n                            splitTestsForm={splitTestsForm}\n                            offerType=\"downsell\"\n                            saveIfDirty={saveIfDirty}\n                            analytics={downsellAnalytics}\n                            splitTestAnalytics={downsellSplitTestAnalytics}\n                            analyticsLoading={queryResult.isLoading}",
                "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                "start_index": 25424,
                "end_index": 28396,
                "start_line": 361,
                "end_line": 710,
                "max_line": 2225,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "if (isTextImageWidget(template)) {\n                    const config = template.config;\n                    const heading = config.heading;\n                    config.heading = {\n                        config: {\n                            fontSize: heading?.config?.fontSize ?? UPSELL_TEXT_SIZES[4].value,\n                            appearance: heading?.config?.appearance ?? COLOR_OPTIONS[0].value,\n                        },\n                        value: heading?.value ?? '',\n                    };\n\n                    const text = config.text;\n                    config.text = {\n                        config: {\n                            fontSize: text?.config?.fontSize ?? UPSELL_TEXT_SIZES[2].value,\n                            appearance: text?.config?.appearance ?? COLOR_OPTIONS[0].value,\n                        },\n                        value: text?.value ?? '',\n                    };\n\n                    config.position = config.position || ('left' as Alignment);\n                    config.verticalAlignment = config.verticalAlignment || ('leading' as VerticalAlignment);\n                    config.imageSize = setDefaultNumberValue(config.imageSize, 350);\n                    config.topPadding = setDefaultNumberValue(config.topPadding, 2);\n                    config.bottomPadding = setDefaultNumberValue(config.bottomPadding, 2);\n                }\n\n                if (isTimerWidget(template)) {\n                    const config = template.config;\n                    config.topPadding = setDefaultNumberValue(config.topPadding, 2);\n                    config.bottomPadding = setDefaultNumberValue(config.bottomPadding, 2);\n                    config.minutes = config.minutes ?? 10;\n                    config.heading =\n                        config.heading ??\n                        `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\", sans-serif;\">Your order is confirmed but you can still add the following for a limited time</span><span style=\"font-size: 18px;\"> </span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span></p>`;\n                    config.text = config.text ?? '';\n                    config.textColor = config.textColor ?? UPSELL_COLOR_NAMES.BLACK;\n                    config.backgroundColor = config.backgroundColor ?? UPSELL_COLOR_NAMES.RED;\n                    config.hideBanner = config.hideBanner ?? false;\n                }\n\n                return template;\n            }",
                "filename": "web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts",
                "start_index": 12701,
                "end_index": 15540,
                "start_line": 225,
                "end_line": 267,
                "max_line": 270,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "'}\n                            <Text as=\"span\" fontWeight=\"semibold\">\n                                (most common)\n                            </Text>\n                        </List.Item>\n                        <List.Item>AI recommended product did not have a recommendation</List.Item>\n                    </List>\n                    <Text as=\"p\">\n                        If you did not intend to skip offers that are in the original order, we suggest turning the\n                        setting off.\n                    </Text>\n                </VerticalStack>\n            </Banner>\n        );\n    }\n\n    if (order.aftersell_post_purchase.status === 'skipped') {\n        if (order.aftersell_post_purchase.no_show_reasons.some((reason) => reason === 'other')) {\n            banners.push",
                "filename": "web/client/src/pages/order-browser/components/timeline-one-click/timeline-one-click.tsx",
                "start_index": 4638,
                "end_index": 5427,
                "start_line": 101,
                "end_line": 150,
                "max_line": 277,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n    const aiRecId1 = uuidv4();\n    const aiRecId2 = uuidv4();\n    const aiRecId3 = uuidv4();\n    const aiRecId4 = uuidv4();\n\n    const textStringUpsellDefault =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more! Grab another for </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;\n\n    const textStringDownsell =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another...Get an additional </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 2487,
                "end_index": 4357,
                "start_line": 1,
                "end_line": 75,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": ">\n                    <Modal\n                        open={versionSwitcherModal}\n                        title={'Revert to previous checkout editor?'}\n                        sectioned\n                        onClose={() => setVersionSwitcherModal(false)}\n                        primaryAction={{\n                            content: 'Revert version',\n                            loading: updateVersionLoading,\n                            onAction: () => {\n                                updateCheckoutVersion('V1');\n                            },\n                        }}\n                        secondaryActions={[\n                            {\n                                content: 'Cancel',\n                                loading: updateVersionLoading,\n                                onAction: () => setVersionSwitcherModal(false),\n                            },\n                        ]}\n                    >\n                        <Text as=\"p\" variant=\"bodyMd\">\n                            Are you sure you want to revert to the previous checkout editor? Any unsaved changes will be\n                            discarded and your previous configuration will be restored.\n                        </Text>\n                    </Modal>\n                </FullscreenBar>\n            }\n        >\n            {/*<Form onSubmit={submit} preventDefault>*/}\n            <Page fullWidth>\n                <HorizontalStack gap=\"3\" align={'space-between'}>\n                    <Box minWidth={'200px'}>\n                        <VerticalStack gap=\"2\">\n                            <WidgetMenuList\n                                focusedWidget={focusedWidget}\n                                setFocusedWidget={setFocusedWidget}\n                                activeWidgetDynamicList={configurationDynamicLists[focusedWidget.tab]}\n                                configurationDynamicLists={configurationDynamicLists}\n                            />\n                        </VerticalStack>\n                    </Box>\n                    <div style={{ flex: '1 0 35%', minWidth: '400px' }}>\n                        {isLoading ? (\n                            <Loader />\n                        ) : (\n                            <VerticalStack gap=\"3\">\n                                {submitErrors.length > 0 && (\n                                    <Banner status=\"critical\" title=\"Error saving changes\">\n                                        <p>Please try again or contact support if the issue persists.</p>\n                                    </Banner>\n                                )}\n                                {showTransferBanner && (",
                "filename": "web/client/src/pages/checkout/checkout-editor-v2.page.tsx",
                "start_index": 10519,
                "end_index": 13163,
                "start_line": 67,
                "end_line": 314,
                "max_line": 612,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "\"2\">\n                    <Banner\n                        title={'AfterSell Branding'}\n                        status=\"info\"\n                        onDismiss={() => setShow(false)}\n                        action={{\n                            content: 'Remove branding',\n                            onAction: () =>\n                                openChatWithPrefilledMessage(\n                                    'Hi, I want to remove AfterSell branding from my 1-Click Upsells!'\n                                ),\n                        }}\n                    >\n                        If you'd like to remove the \"Powered by AfterSell\" text, let us know by clicking the button\n                        below and we can remove it for you!\n                    </Banner>\n                </Box>\n            )}\n        </>\n    );\n};\n\nconst EmptyCollectionBanner: FC<{ products: ProductToShow[] }> = ({ products }) => {\n    const [show, setShow] = useState(true);\n    const isEmptyCollection = useMemo(() => products.every(({ product }) => !product.collectionId), [products]);\n\n    if (!show || !isEmptyCollection) return null;\n\n    return (\n        <Box padding=\"2\">\n            <Banner title={'Empty collection'} status=\"warning\" onDismiss={() => setShow(false)}>\n                Selected collection is empty. The products are not visible in the preview or on the real one-click page.\n            </Banner>\n        </Box>\n    );\n};\n\nconst PartialCollectionBanner: FC<{ products: ProductToShow[]; unpreparedProducts: ExtendedUnpreparedProduct[] }> = ({\n    products,\n    unpreparedProducts,\n}) => {\n    const [show, setShow] = useState(true);\n\n    const nReplacedProducts = useMemo(\n        () => products.filter(({ product }) => product.productType === OFFER_PRODUCT_TYPES.SPECIFIC).length,\n        [products]\n    );\n    const nProductsSelected = unpreparedProducts.length;\n    // to check that collection is not empty\n    const hasReplacedProducts = nReplacedProducts > 0;\n    const collectionHasEnoughProducts = nReplacedProducts >= nProductsSelected;\n\n    if (!show || !hasReplacedProducts || collectionHasEnoughProducts) return null;\n\n    return (\n        <Box padding=\"2\">\n            <Banner title={'Small Collection'} status=\"info\" onDismiss={() => setShow(false)}>\n                {'The selected number of products for this offer is {nProductsSelected}, but the current collection only has {nReplacedProducts}. Only the available number of products from the collection will be visible in the preview and on the real one-",
                "filename": "web/client/src/pages/funnels/components/funnel-editor-banners.tsx",
                "start_index": 3540,
                "end_index": 6066,
                "start_line": 51,
                "end_line": 137,
                "max_line": 332,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n        case 'not_triggered':\n            return (\n                <Banner title=\"Order did not match funnel triggers\" status=\"warning\">\n                    <Text as=\"p\">\n                        None of the{' '}\n                        <Text as=\"span\" fontWeight=\"semibold\">\n                            active\n                        </Text>{' '}\n                        funnels had triggers that matched this order. We recommend having one active \"show for all\"\n                        funnel at lowest priority to cover cases like this order.\n                    </Text>\n                </Banner>\n            );\n        case 'not_loaded':\n            return (\n                <Banner title=\"TY page widgets were not loaded\" status=\"warning\">\n                    <Text as=\"p\">\n                        The most probable cause for this issue is that the page was either promptly closed or not opened\n                        at all.\n                    </Text>\n                </Banner>\n            );\n        default:\n            return null;\n    }\n};\n\nconst MaybeEventBanner = ({ event, order }: { event: AfterSellVisibilityEvent; order: Order }) => {\n    const acceptedDiscountCodesNote = (order.note_attributes || []).find(\n        (note) => note.name === 'AfterSell-accepted-discounts'\n    ) || { value: '' };\n    const acceptedDiscountCodes = acceptedDiscountCodesNote.value.split(';');\n    const isAcceptedDiscount = acceptedDiscountCodes.includes(event.payload?.discountCode);\n\n    switch (event.type) {\n        case 'tyPage.page.upsellTimeEnd':\n            return <Banner status=\"info\">The upsell timer expired \u231b</Banner>;\n        case 'tyPage.page.acceptDiscount':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">Congrats! The popup discount was accepted \ud83c\udf89</Banner>\n            ) : (\n                <Banner status=\"info\">The popup discount was accepted, but not used</Banner>\n            );\n        case 'tyPage.page.declineDiscount':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">\n                    Congrats! The popup discount was declined, but manually accepted afterwards \ud83c\udf89\n                </Banner>\n            ) : null;\n        case 'tyPage.page.acceptUpsell':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">Congrats! Your upsell offer was accepted \ud83c\udf89</Banner>\n            ) : (\n                <Banner status=\"info\">\n                    The customer clicked accept on the upsell offer, but did not complete the second checkout\n                </Banner>\n            );\n        case 'tyPage.page.error':\n            return (\n                <Banner status=\"critical\" title=\"Unexpected error occurred\">\n                    We've been notified of this error and are actively investigating. If you'd like more information,\n                    please reach out to customer support.\n                </Banner>\n            );\n        default:\n            return null;\n    }\n};\n\nfuncti",
                "filename": "web/client/src/pages/order-browser/components/timeline-ty-page/timeline-ty-page.tsx",
                "start_index": 1170,
                "end_index": 4172,
                "start_line": 1,
                "end_line": 97,
                "max_line": 162,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "return hasTyPageExtensibilityAccess ? (\n        <VerticalStack gap=\"2\">\n            <Banner title=\"Thank you page extensibility\">\n                <p>\n                    Your store is eligible to use Shopify UI extensions on the thank you and order status pages.\n                    Extensions will eventually replace script tags to provide a more unified experience for customers.\n                    AfterSell supports both script tags and extensions during the transition period. Your Shopify\n                    checkout settings will determine whether script tags or extensions are used. AfterSell currently\n                    supports more features for stores using scripts.\n                </p>\n            </Banner>\n            <Card>\n                <HorizontalStack align=\"space-between\">\n                    <VerticalStack gap=\"2\">\n                        <Text variant=\"headingMd\" as=\"h6\">\n                            Customize thank you page\n                        </Text>\n                        <Text variant=\"bodyLg\" as=\"p\">\n                            Drag and drop widgets to create a beautiful thank you page that converts.\n                        </Text>\n                    </VerticalStack>\n                    <VerticalStack align=\"center\" gap=\"2\">\n                        <Button onClick={handleEditScriptTagTyPage}>Edit scripts page</Button>\n                        <Button plain onClick={handleEditExtensionTyPage}>\n                            Edit extensions\n                        </Button>\n                    </VerticalStack>\n                </HorizontalStack>\n            </Card>\n            <RoktFunnelSettingsCard funnelId={funnelId} />\n        </VerticalStack>\n    ) : (\n        <VerticalStack gap=\"2\">\n            <Card>\n                <HorizontalStack align=\"space-between\">\n                    <VerticalStack gap=\"2\">\n                        <Text variant=\"headingMd\" as=\"h6\">\n                            Customize thank you page\n                        </Text>\n                        <Text variant=\"bodyLg\" as=\"p\">\n                            Drag and drop widgets to create a beautiful thank you page that converts.\n                        </Text>\n                    </VerticalStack>\n                    <VerticalStack align=\"center\">\n                        <Button onClick={handleEditScriptTagTyPage}>Edit page</Button>\n                    </VerticalStack>\n                </HorizontalStack>\n            </Card>\n            <RoktFunnelSettingsCard funnelId={funnelId} />\n        </VerticalStack>\n    );\n}",
                "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                "start_index": 29617,
                "end_index": 32167,
                "start_line": 758,
                "end_line": 2221,
                "max_line": 2225,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Text as=\"h4\" fontWeight=\"semibold\">\n                                                Start from scratch\n                                            </Text>\n                                        }\n                                        helpText=\"Use our simple editor to create a customized experience.\"\n                                        checked={startFrom === 'scratch'}\n                                        id=\"scratch\"\n                                        name=\"startFrom\"\n                                        onChange={handleFunnelChoice}\n                                    />\n                                </Card>\n                            </VerticalStack>\n                        </VerticalStack>\n                    </Card>\n                    <HorizontalStack align=\"end\">\n                        <Button\n                            primary\n                            onClick={() => {\n                                onSaveAndNext();\n                            }}\n                            loading={loading}\n                        >\n                            {buttonText}\n                        </Button>\n                    </HorizontalStack>\n                </VerticalStack>\n            </Page>\n        </>\n    );\n};\n\nconst UpsellMachineDetails = ({\n    open,\n    onClose,\n    maxDiscount,\n    setMaxDiscount,\n    onSave,\n}: Pick<ModalProps, 'open' | 'onClose'> & {\n    maxDiscount: number;\n    setMaxDiscount: Dispatch<SetStateAction<number>>;\n    onSave: () => void;\n}) => {\n    const {\n        currentUser: { myshopify_domain },\n        hasTyPageExtensibilityAccess,\n    } = useCurrentUser();\n\n    return (\n        <Modal title=\"Maximize AOV with the Upsell Machine\" open={open} onClose={onClose}>\n            <Modal.Section>\n                <VerticalStack gap=\"3\">\n                    <Banner status=\"info\">\n                        This template can be further customized even after this option is selected.\n                    </Banner>\n                    <Text variant=\"headingSm\" as=\"p\">\n                        The Upsell Machine funnel was made to maximize AOV for your post purchase offers and thank you\n                        page.\n                    </Text>\n\n                    <Text variant=\"bodyMd\" as=\"p\">\n                        Right after the customer completes their purchase, they will be shown a 1-click offer. This\n                        offer does not require the customer to re-enter their payment info and is added to their order\n                        with one click. In total, customers will see two 1-click offers per order:\n                    </Text>\n                    <List spacing=\"loose\">\n                        <List.Item>\n                            Upsell #1: Customers will be offered one more of the item they just bought (most expensive\n                            item in their cart) at{' '}\n                            <Text variant=\"headingSm\" as=\"span\">",
                "filename": "web/client/src/pages/funnels/funnels-create.page.tsx",
                "start_index": 8601,
                "end_index": 11546,
                "start_line": 168,
                "end_line": 283,
                "max_line": 345,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Box paddingInlineStart=\"3\" paddingInlineEnd=\"3\">\n                            <HorizontalStack align=\"space-between\" gap=\"4\">\n                                <Filter\n                                    offerType=\"version_a\"\n                                    tooltip=\"This is for upsell widget version A in checkout.\"\n                                    localFilters={localFilters}\n                                    setLocalFilters={() =>\n                                        setLocalFilters((prevValue) => {\n                                            const isChecked = prevValue?.checkoutWidgetIds?.includes(versionAId);\n                                            const checkoutWidgetIds = isChecked\n                                                ? [versionBId]\n                                                : [versionAId, versionBId];\n                                            const offerTypes = isChecked ? ['version_b'] : ['version_a', 'version_b'];\n                                            return { checkoutWidgetIds, offerTypes, pageTypes: [] };\n                                        })\n                                    }\n                                />\n                                <Filter\n                                    offerType=\"version_b\"\n                                    tooltip=\"This is for upsell widget version A in checkout.\"\n                                    localFilters={localFilters}\n                                    setLocalFilters={() =>\n                                        setLocalFilters((prevValue) => {\n                                            const isChecked = prevValue?.checkoutWidgetIds?.includes(versionBId);\n                                            const checkoutWidgetIds = isChecked\n                                                ? [versionAId]\n                                                : [versionAId, versionBId];\n                                            const offerTypes = isChecked ? ['version_a'] : ['version_a', 'version_b'];\n                                            return { checkoutWidgetIds, offerTypes, pageTypes: [] };\n                                        })\n                                    }\n                                />\n                            </HorizontalStack>\n                        </Box>\n                    )}\n                </HorizontalStack>\n            }\n        >\n            <Modal.Section>\n                <Layout>\n                    <LineChartCard\n                        title=\"Revenue\"\n                        tooltip=\"This is the total revenue generated by AfterSell.\"\n                        data={data.revenue}\n                        loading={queryResult.isLoading}\n                        formatter={formatCurrency}\n                    />\n                    <LineChartCard\n                        title=\"Impressions\"\n                        tooltip=\"An impressions is a view of an AfterSell page.\"\n                        data",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/upsell-analytics.tsx",
                "start_index": 2824,
                "end_index": 5800,
                "start_line": 74,
                "end_line": 146,
                "max_line": 156,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": ") => {\n    const yesButtonMarkup = (\n        <button\n            className=\"rokt-button\"\n            style={{\n                backgroundColor: config.primaryButtonBackgroundColor,\n                color: config.primaryButtonFontColor,\n                borderColor: config.primaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            Yes please\n        </button>\n    );\n    const noButtonMarkup = (\n        <button\n            className=\"rokt-button\"\n            style={{\n                backgroundColor: config.secondaryButtonBackgroundColor,\n                color: config.secondaryButtonFontColor,\n                borderColor: config.secondaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            No thanks\n        </button>\n    );\n\n    return (\n        <div className=\"rokt-content preview\">\n            <div className=\"wrapper\" style={{ fontFamily: config.textFontFamily }}>\n                <div className=\"flex column gap-2\" style={{ color: config.paragraphFontColor }}>\n                    <p className=\"text-bold\">Hi, thank you for your purchase:</p>\n                    <div className=\"flex column full-width gap-3\">\n                        <div className=\"flex column full-width\">\n                            <p className=\"text-regular\">",
                "filename": "web/client/src/pages/rokt/rokt.page.tsx",
                "start_index": 59509,
                "end_index": 61086,
                "start_line": 52,
                "end_line": 1292,
                "max_line": 1493,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "initial_doc_snippets": [
            {
                "code": "<body class=\"aftersell-preview\">\n        <a href=\"#main-header\" class=\"skip-to-content\"> Skip to content </a>\n\n        <header class=\"banner\" data-header=\"\" role=\"banner\">\n            <div class=\"wrap\">\n                <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n            </div>\n        </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241387,
                "end_index": 241804,
                "start_line": 6077,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script src=\"https://cdn.shopify.com/shopifycloud/app-bridge.js\"></script>\n        <!-- Shopify App Bridge [END] -->\n\n        <!-- User Pre-fetching [START] -->\n        <script>\n            window.indexHtmlPrefetchedUserPromise = fetch('/api/v1/user').then((res) => res.json());\n        </script>\n        <!-- User Pre-fetching [END] -->\n\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" id=\"aftersell-viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" type=\"image/png\" href=\"/favicon.svg\" />\n        <meta name=\"description\" content=\"AfterSell App\" />\n        <script>\n            const global = globalThis;\n        </script>\n        <script>\n            (function () {\n                const w = window;\n                const ic = w.Intercom;\n                if (typeof ic === 'function') {\n                    ic('reattach_activator');\n                    ic('update', w.intercomSettings);\n                } else {\n                    const d = document;\n                    var i = function () {\n                        i.c(arguments);\n                    };\n                    i.q = [];\n                    i.c = function (args) {\n                        i.q.push(args);\n                    };\n                    w.Intercom = i;\n                    const l = function () {\n                        const s = d.createElement('script');\n                        s.type = 'text/javascript';\n                        s.async = true;\n                        s.src = 'https://widget.intercom.io/widget/l7yr8zsg';\n                        const x = d.getElementsByTagName('script')[0];\n                        x.parentNode.insertBefore(s, x);\n                    };\n                    if (w.attachEvent) {\n                        w.attachEvent('onload', l);\n                    } else {\n                        w.addEventListener('load', l, false);\n                    }\n                }\n            })();\n        </script>\n\n        <!-- FirstPromoter [START] -->\n        <script>\n            (function (w) {\n                w.fpr =\n                    w.fpr ||\n                    function () {\n                        w.fpr.q = w.fpr.q || [];\n                        w.fpr.q[arguments[0] == 'set' ? 'unshift' : 'push'](arguments);\n                    };\n            })(window);\n            fpr('init', { cid: '1z5h5vjx' });\n            fpr('click');\n        </script>\n        <!-- NOTE this FirstPromoter script is our own copy of the source file with some modifications. Original: https://cdn.firstpromoter.com/fpr.js -->\n        <script type=\"module\" src=\"/src/libs/fpr/fpr.ts\" defer></script>\n        <!-- FirstPromoter [END] -->\n\n        <!-- Facebook Pixel Code -->",
                "filename": "web/client/index.html",
                "start_index": 3507,
                "end_index": 6223,
                "start_line": 51,
                "end_line": 118,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"hidden\">\n                            <span class=\"visually-hidden\" id=\"forwarding-external-new-window-message\">\n                                Opens external website in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-new-window-message\">\n                                Opens in a new window.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"forwarding-external-message\">\n                                Opens external website.\n                            </span>\n\n                            <span class=\"visually-hidden\" id=\"checkout-context-step-one\">\n                                Customer information - Checkout\n                            </span>\n                        </div>\n                    </main>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 322226,
                "end_index": 323078,
                "start_line": 6265,
                "end_line": 6282,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"step__sections\">\n                                <div class=\"section\">\n                                    <div class=\"section__header os-header\">\n                                        <svg\n                                            width=\"56\"\n                                            height=\"56\"\n                                            viewBox=\"0 0 56 56\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <circle cx=\"28\" cy=\"28\" r=\"26\" stroke=\"#E5E5E5\" stroke-width=\"2.29412\" />\n                                            <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M22.4811 37.3603L16.3636 31.3947C15.5663 30.6172 15.5663 29.3605 16.3636 28.583C17.1609 27.8055 18.4497 27.8055 19.247 28.583L23.8066 33.0293L36.6493 18.7538C37.3834 17.9186 38.6701 17.8231 39.5225 18.537C40.379 19.2529 40.4789 20.5056 39.7448 21.3388L25.4706 37.2469C25.1015 37.6685 24.5672 37.9191 24.0003 37.9409C23.3825 37.9429 22.8625 37.7341 22.4811 37.3603Z\"\n                                                fill=\"#008060\"\n                                                stroke=\"#E5E5E5\"\n                                                stroke-width=\"0.764706\"\n                                            />\n                                        </svg>\n                                        <div class=\"os-header__heading\">\n                                            <span class=\"os-order-number\"> Order #1001 </span>\n                                            <h2 class=\"os-header__title\" id=\"main-header\" tabindex=\"-1\">\n                                                Thank you {{Customer Name}}!\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245858,
                "end_index": 247957,
                "start_line": 6161,
                "end_line": 6451,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"main\">\n                    <header class=\"main__header\" role=\"banner\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </header>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 245397,
                "end_index": 245703,
                "start_line": 6153,
                "end_line": 6158,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<span class=\"order-summary-toggle__inner\">\n                        <span class=\"order-summary-toggle__icon-wrapper\">\n                            <svg\n                                width=\"20\"\n                                height=\"19\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__icon\"\n                            >\n                                <path\n                                    d=\"M17.178 13.088H5.453c-.454 0-.91-.364-.91-.818L3.727 1.818H0V0h4.544c.455 0 .91.364.91.818l.09 1.272h13.45c.274 0 .547.09.73.364.18.182.27.454.18.727l-1.817 9.18c-.09.455-.455.728-.91.728zM6.27 11.27h10.09l1.454-7.362H5.634l.637 7.362zm.092 7.715c1.004 0 1.818-.813 1.818-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817zm9.18 0c1.004 0 1.817-.813 1.817-1.817s-.814-1.818-1.818-1.818-1.818.814-1.818 1.818.814 1.817 1.818 1.817z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--show\">\n                            <span>Show order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"6\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M.504 1.813l4.358 3.845.496.438.496-.438 4.642-4.096L9.504.438 4.862 4.534h.992L1.496.69.504 1.812z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span class=\"order-summary-toggle__text order-summary-toggle__text--hide\">\n                            <span>Hide order summary</span>\n                            <svg\n                                width=\"11\"\n                                height=\"7\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                class=\"order-summary-toggle__dropdown\"\n                                fill=\"#000\"\n                            >\n                                <path\n                                    d=\"M6.138.876L5.642.438l-.496.438L.504 4.972l.992 1.124L6.138 2l-.496.436 3.862 3.408.992-1.122L6.138.876z\"\n                                ></path>\n                            </svg>\n                        </span>\n                        <span\n                            class=\"order-summary-toggle__total-recap total-recap\"\n                            data-order-summary-section=\"toggle-total-recap\"\n                        >\n                            <span class=\"total-recap__final-price\" data-checkout-payment-due-target=\"5073\">$50.73</span>\n                        </span>\n                    </span>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 242214,
                "end_index": 245205,
                "start_line": 6097,
                "end_line": 6446,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<html\n    lang=\"en\"\n    dir=\"ltr\"\n    class=\"js desktop page--no-banner page--logo-main page--show page--show card-fields cors svg opacity placeholder no-touchevents displaytable display-table generatedcontent cssanimations flexbox no-flexboxtweener anyflexbox shopemoji floating-labels\"\n>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 0,
                "end_index": 289,
                "start_line": 1,
                "end_line": 6518,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<aside class=\"sidebar\" role=\"complementary\">\n                    <div class=\"sidebar__header\">\n                        <a class=\"logo logo--left\"><span class=\"logo__text heading-1\">Shop Name</span></a>\n\n                        <h1 class=\"visually-hidden\">Thank you for your purchase!</h1>\n                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 323196,
                "end_index": 323511,
                "start_line": 6285,
                "end_line": 6493,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<head>\n        <meta charset=\"utf-8\" />\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n        <meta\n            id=\"thankyoupage_viewport_meta\"\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0\"\n        />\n        <meta name=\"referrer\" content=\"origin\" />\n\n        <title>Thank you! - Checkout</title>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 294,
                "end_index": 717,
                "start_line": 6,
                "end_line": 16,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Checkout Upsell Discounts\n\n## Overview\n\nThis document describes the data flow and security reasoning for our implementation of checkout upsell discounts.\n\nIt is difficult to understand the overall process for checkout upsell discounts by just looking at the code. This is because the code is fragmented across different areas and data is indirectly passed across some boundaries. This convoluted system is necessary for security reasons described below, but it makes the code harder to trace.\n\nThis document can hopefully be used to better understand the checkout upsell discount system as a whole, to allow us to debug or make changes in the future.\n\n## Implementation\n\n### Checkout\n\n> Part 1. Generate a `TamperProofCartAttribute` (Checkout Extension and Server)\n\n1. **Checkout Extension:** Request a `TamperProofCartAttribute` from the server for the offer being added.\n    - **Action:** The checkout extension sends a request to the server with the current `CheckoutData` and the ID of the offer.\n2. **Server:** Decide if a discount should be applied.\n    - **Action:** The server decides if a discount should be applied based on the provided `CheckoutData`. The server must **ONLY** use the provided `CheckoutData`, along with active offers from the database, when determining whether or not to apply a discount. The server must **NOT** use any other information regarding the current checkout.\n    - **Security:**\n        - The `CheckoutData` from the checkout extension is **NOT** secure since it is being sent to an insecure endpoint. Note that even with checkout session tokens, the `CheckoutData` is not secure because a customer could inspect the network requests to find the session token and then make arbitrary requests.\n        - The server does not need to verify the `CheckoutData`. It only needs to decide whether or not a discount should be applied _if the provided `CheckoutData` turns out to be verified_. The server can assume that the discount will only be applied for the given `CheckoutData`. If the checkout data is not actually what was provided, the discount will not be applied. Verification of the `CheckoutData` occurs in the Function.\n        - The server must not use any data other than the provided `CheckoutData` when determining whether or not a discount should be applied. This is because the Function is only provided the trusted `CheckoutData` by Shopify. The Function would not be able to invalidate a discount when a necessary factor changed, if that factor was not part of the `CheckoutData`.\n3. **Server:** Create a `TamperProofCartAttribute` using an HMAC signature of the `UnverifiedState` and `DiscountToApplyIfStateIsVerified`.\n    - **Action:** The server creates an HMAC signature from the combination of the `UnverifiedState` and the `DiscountToApplyIfStateIsVerified`. The `UnverifiedState` is composed of the `CheckoutData` and the `ActiveOfferVersion`.\n        - Creating an HMAC signature involves first stringifying the relevant data and then signing the string with the shared secret between the Function and the server.\n    - **Security:**\n        - This HMAC signature will be used by the Function to verify that the `TamperProofCartAttribute` has not been tampered with. If the HMAC signature matches in the Function, this means that _if the `State` is X_, then the discount should be applied. The HMAC does not provide any indication of whether or not the `State` is verified.\n        - The `ActiveOfferVersion` is included in the `State` to ensure that the discount can be invalidated in the future. For example, the merchant might offer a lower discount amount after BFCM is finished, in which case the old discounts should no longer be valid. The merchant may also change the triggers for an offer such that the offer is only valid over $100, in which case any old discounts should no longer be valid.\n4. **Server:** Respond to the Checkout Extension with a `TamperProofCartAttribute`.\n    - **Action:** The server responds to the checkout extension's request with the newly generated `TamperProofCartAttribute`.\n5. **Checkout Extension:** Add the `TamperProofCartAttribute` to the cart.\n\n> Part 2. Apply a Discount from a `TamperProofCartAttribute` (Function)\n\n6. **Function:** Read the `TamperProofCartAttribute` and `TrustedState` from GraphQL input.\n    - **Security:**\n        - The `TrustedState` is composed of:\n            - `CheckoutData` from the GraphQL input. This is trusted because it is provided directly to the Function by Shopify's servers.\n            - A map of `ActiveOfferVersion`s from a discount private metafield. This is trusted because it can only be set from our server using the Admin API.\n7. **Function:** Verify that the `TamperProofCartAttribute` has not been tampered with.\n    - **Action:** The Function creates an HMAC signature from the data string of the `TamperProofCartAttribute` and the shared secret. The Function compares the HMAC that it generated against the HMAC from the `TamperProofCartAttribute`. If these are not equal, then the discount should **NOT** be applied.\n    - **Security:**\n        - This ensures that the attribute was generated by our server, and has not been modified (e.g., by the customer).\n        - This does **NOT** provide any indication of whether or not the state contained in the data of the `TamperProofCartAttribute` matches reality. The state must still be verified against the trusted state.\n        - This tells us that the _relationship_ between the `UnverifiedState` and the `DiscountToApplyIfStateIsVerified` is true. That is, if the `UnverifiedState` is true then our server says that the discount should be applied.\n8. **Function:** Verify the `UnverifiedState` using the `TrustedState`.\n    - **Action:** The Function compares the `UnverifiedState` from the `TamperProofCartAttribute` to the `TrustedState` from its GraphQL input. If these are not equal, then the discount should **NOT** be applied.\n    - **Security:**\n        - If the `TrustedState` matches the `UnverifiedState`, then it is safe to apply the `DiscountToApplyIfStateIsVerified`.\n        - If the states are not equal, then one of the following may have happened:\n            1. The request to the server was forged and sent with a `CheckoutData` that did not match reality, or\n            2. The `CheckoutData` has changed since the `TamperProofCartAttribute` was created, or\n            3. The `ActiveOfferVersion` has changed since the `TamperProofCartAttribute` (e.g., due to the merchant editing the offer)\n9. **Function:** Apply the `DiscountToApplyIfStateIsVerified` from the `TamperProofCartAttribute`, if all previous checks pass.\n\n### Editor\n\n**Discount Metafields**\n\n-   `$app:upsell-offer-discount-function.private-state`:\n    -   `activeOfferVersions`: A key-value map of offer ID to active version number. This is used by the Function as part of the `TrustedState`.\n-   `$app:upsell-offer-discount-function.private-shared-secret-key`: This is the shared secret between the server and the Function used to generate HMAC signatures. This value should be _unique_ for each discount code to limit the damage if a key is compromised.\n\n**Updating Offers**\n\nWhen a discounted offer is changed, the active version number must be incremented. The combination of the offer ID and the active version number are used to create a `ActiveOfferVersion`. When the version number is incremented, then any `ActiveOfferVersion` that uses the old version number becomes invalid. This ensures that discounts from previous offer versions cannot be applied.\n\n## Type Definitions\n\n```typescript\n/**\n * A cart attribute that is used to transfer non-secret trusted data from our Server to the Function.\n * This is created on our server and verified in the Function.\n */\ninterface TamperProofCartAttribute {\n    /**\n     * A string containing the non-secret trusted data to be transfered.  In the case of checkout\n     * upsell discounts, this is the JSON stringification of a `TamperProofCartAttributeData` object.\n     */\n    data: string;\n    /**\n     *  A SHA-256 hash of the `data`, generating using a shared secret key between the Server and\n     * Function. This can be verified to ensure the integrity of the `data`.\n     */\n    hmac: string;\n}\n\n/**\n * The data contained in a `TamperProofCartAttribute` for checkout upsell discounts.\n */\ninterface TamperProofCartAttributeData {\n    unverifiedState: UnverifiedState;\n    discountToApplyIfStateIsVerified: DiscountToApplyIfStateIsVerified;\n}\n\n/**\n * All of the relevant information about the contents of a checkout that are necessary to determine\n * whether or not the checkout is eligible for a given discount.\n */\ninterface CheckoutData {\n    lineItems: GenericLineItem[];\n}\n\ninterface GenericLineItem {\n    quantity: number; // u64\n    /**\n     * The numeric ID of the variant. This is `null` if the line item is not a product on the\n     * store (e.g., custom line items in draft orders).\n     *\n     * Also known as the legacy ID.\n     *\n     * @example 123456789\n     */\n    variantId: number | null; // u128\n}\n\n/**\n * This is the same as the `GenericLineItem`, except the `variantId` is non-null.\n */\ninterface VariantLineItem {\n    quantity: number;\n    variantId: number;\n}\n\n/**\n * The discount which should be applied by the function if the `UnverifiedState` is verified.\n */\ninterface DiscountToApplyIfStateIsVerified {\n    targetLineItem: VariantLineItem;\n    value:\n        | {\n              discountType: 'percentage';\n              percentageOutOf100: number; // f64\n          }\n        | {\n              discountType: 'fixedAmount';\n              amountInShopCurrency: number; // f64\n          };\n}\n\n/**\n * A general concept including the ID of an offer and the most recent version number. Version\n * numbers should be incremented whenever a change happens to the offer that would affect\n * the discount. For example, changing the triggers for the offer or changing the discount\n * amount.\n */\ninterface ActiveOfferVersion {}\n\n/**\n * All information required to determine whether or not a discount should be applied to a checkout.\n * See `UnverifiedState` and `TrustedState` for specific usages.\n */\ninterface State {}\n\n/**\n * A `State` that may or may not be match reality. The `UnverifiedState` may be outright incorrect,\n * or reality may have changed since the `UnverifiedState` was created. This is used to determine\n * the `DiscountToApplyIfStateIsVerified`.\n */\ninterface UnverifiedState {\n    checkoutData: CheckoutData;\n    activeOfferVersion: {\n        offerId: string;\n        offerVersion: number; // u32\n    };\n}\n\n/**\n * The \"real\" `State`, strictly composed of trusted information. This can be used to verify the\n * `UnverifiedState`.\n */\ninterface TrustedState {\n    checkoutData: CheckoutData;\n    /**\n     * A key-value map containing all active offer IDs (keys) and their corresponding version numbers (values).\n     */\n    activeOfferVersions: Record<string, number>;\n}\n```",
                "filename": "docs/checkout-upsell-discounts.md",
                "start_index": 0,
                "end_index": 10969,
                "start_line": 1,
                "end_line": 181,
                "max_line": 181,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script defer src=\"./thankyoupage_bundle.js?v2\"></script>\n        <script defer src=\"/apps/aftersell_sdk.bundle.min.js?v2\"></script>\n    </head>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241237,
                "end_index": 241381,
                "start_line": 6073,
                "end_line": 6075,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "# Post-purchase checkout extension\n\n## Dev Setup\n\n1. Ensure that you have an `.env` file in the `/server` directory. The extension will use the `HOST` variable from this file\n\n2. Run `yarn dev` to start serving the post-purchase extension code. This will print:\n\n```\n\ud83d\udd2d > Your extension is available at http://localhost:{{PORT}}/assets/extension.js\n```\n\n3. Download the [Shopify post-purchase Chrome extension](https://chrome.google.com/webstore/detail/shopify-post-purchase-dev/nenmcifhoegealiiblnpihbnjenleong)\n\n4. Enable the Chrome extension\n   ![](docs/images/chrome-extension-activate.png)\n\n5. Open the post-purchase Chrome extension setup page\n   ![](docs/images/chrome-extension-details.png)\n   ![](docs/images/chrome-extension-options-link.png)\n\n6. Past the `http://localhost:{{PORT}}/assets/extension.js` URL into the setup page\n7. Copy the API key from your app setup page and paste into the setup page\n   ![](docs/images/chrome-extension-script-url.png)\n   ![](docs/images/app-api-key.png)",
                "filename": "extensions/post-purchase/README.md",
                "start_index": 0,
                "end_index": 999,
                "start_line": 1,
                "end_line": 25,
                "max_line": 25,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"content-box__row text-container\">\n                                                <h2 class=\"heading-2 os-step__title\" id=\"main-header\" tabindex=\"-1\">\n                                                    Your order is confirmed\n                                                </h2>\n                                                <p class=\"os-step__description\">\n                                                    You\u2019ll receive an email when your order is ready.\n                                                </p>\n                                            </div>\n                                        </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 317828,
                "end_index": 318454,
                "start_line": 6200,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<script>\n            !(function (f, b, e, v, n, t, s) {\n                if (f.fbq) return;\n                n = f.fbq = function () {\n                    n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments);\n                };\n                if (!f._fbq) f._fbq = n;\n                n.push = n;\n                n.loaded = !0;\n                n.version = '2.0';\n                n.queue = [];\n                t = b.createElement(e);\n                t.async = !0;\n                t.src = v;\n                s = b.getElementsByTagName(e)[0];\n                s.parentNode.insertBefore(t, s);\n            })(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');\n            fbq('init', '895262111044943');\n            fbq('track', 'PageView');\n        </script>\n        <!-- End Facebook Pixel Code -->\n        <!-- Reddit Pixel -->\n        <script>\n            !(function (w, d) {\n                if (!w.rdt) {\n                    var p = (w.rdt = function () {\n                        p.sendEvent ? p.sendEvent.apply(p, arguments) : p.callQueue.push(arguments);\n                    });\n                    p.callQueue = [];\n                    var t = d.createElement('script');\n                    (t.src = 'https://www.redditstatic.com/ads/pixel.js'), (t.async = !0);\n                    var s = d.getElementsByTagName('script')[0];\n                    s.parentNode.insertBefore(t, s);\n                }\n            })(window, document);\n            rdt('init', 't2_dp3wj8bg');\n            rdt('track', 'PageVisit');\n        </script>\n        <!-- End Reddit Pixel -->\n\n        <!-- Dev HMR [START] -->\n        <script type=\"module\">\n            if (!import.meta.env || !import.meta.env.PROD) {\n                // For embedded development, the iframe loads an HTML file from the server. Normally for\n                // development, the HTML file is served by the dev server, which injects the HMR script.\n                // This script adds the HMR script to the iframe to allow HMR in embedded development.\n                const script = document.createElement('script');\n                script.setAttribute('type', 'module');\n                script.setAttribute('src', './src/dev-hmr.ts');\n                document.getElementsByTagName('head')[0].append(script);\n            }\n        </script>\n        <!-- Dev HMR [END] -->\n\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com/\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com/\" crossorigin=\"anonymous\" />\n        <link\n            href=\"https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap\"\n        />\n    </head>",
                "filename": "web/client/index.html",
                "start_index": 6232,
                "end_index": 8924,
                "start_line": 7,
                "end_line": 178,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<button\n                class=\"order-summary-toggle order-summary-toggle--show shown-if-js\"\n                data-trekkie-id=\"order_summary_toggle\"\n                aria-expanded=\"false\"\n                aria-controls=\"order-summary\"\n                data-drawer-toggle=\"[data-order-summary]\"\n            >",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 241855,
                "end_index": 242157,
                "start_line": 6089,
                "end_line": 6488,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<div class=\"section__content\">\n                                                    <div\n                                                        class=\"section__content__column section__content__column--half\"\n                                                    >\n                                                        <div class=\"text-container\">\n                                                            <h3 class=\"heading-3\">Contact information</h3>\n\n                                                            <p class=\"as-dummy-line\"></p>\n\n                                                            <h3 class=\"heading-3\">Shipping address</h3>\n                                                            <address class=\"address\">\n                                                                <p class=\"as-dummy-line\"></p>\n                                                                <p class=\"as-dummy-line as-w80\"></p>\n                                                                <p class=\"as-dummy-line as-w40\"></p>\n                                                            </address>\n\n                                                            <h3 class=\"heading-3\">Shipping method</h3>\n                                                            <p class=\"as-dummy-line as-w40\"></p>\n                                                        </div>\n                                                    </div>\n\n                                                    <div\n                                                        class=\"section__content__column section__content__column--half\"\n                                                    >\n                                                        <div class=\"text-container\">\n                                                            <h3 class=\"heading-3\">Payment method</h3>\n                                                            <ul class=\"payment-method-list\">\n                                                                <li class=\"payment-method-list__item\">\n                                                                    <p class=\"as-dummy-line as-w80\"></p>\n                                                                </li>\n                                                            </ul>\n\n                                                            <h3 class=\"heading-3\">Billing address</h3>\n                                                            <address class=\"address\">\n                                                                <p class=\"as-dummy-line\"></p>\n                                                                <p class=\"as-dummy-line as-w80\"></p>\n                                                                <p class=\"as-dummy-line as-w40\"></p>\n                                                            </address>\n                                                        </div>\n                                                    </div>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 318877,
                "end_index": 321837,
                "start_line": 6191,
                "end_line": 6361,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<th class=\"product__description\" scope=\"row\">\n                                                        <span class=\"product__description__name order-summary__emphasis\"\n                                                            >Product Name</span\n                                                        >\n                                                        <span\n                                                            class=\"product__description__variant order-summary__small-text\"\n                                                            >Variant Name</span\n                                                        >\n                                                    </th>\n                                                    <td class=\"product__quantity visually-hidden\">1</td>\n                                                    <td class=\"product__price\">\n                                                        <span class=\"order-summary__emphasis\">$42.99</span>\n                                                    </td>\n                                                </tr>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 331038,
                "end_index": 332129,
                "start_line": 6363,
                "end_line": 6376,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<head>\n        <!-- Shopify App Bridge [START] -->\n        <meta name=\"shopify-api-key\" content=\"%SHOPIFY_API_KEY%\" />",
                "filename": "web/client/index.html",
                "start_index": 38,
                "end_index": 156,
                "start_line": 4,
                "end_line": 6,
                "max_line": 183,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<td class=\"product__image\">",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 325850,
                "end_index": 325877,
                "start_line": 6322,
                "end_line": 6322,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<tbody class=\"total-line-table__tbody\">\n                                            <tr class=\"total-line total-line--subtotal\">\n                                                <th class=\"total-line__name\" scope=\"row\">Subtotal</th>\n                                                <td class=\"total-line__price\">\n                                                    <span\n                                                        class=\"order-summary__emphasis\"\n                                                        data-checkout-subtotal-price-target=\"4299\"\n                                                    >\n                                                        $42.99\n                                                    </span>\n                                                </td>\n                                            </tr>\n\n                                            <tr class=\"total-line total-line--shipping\">\n                                                <th class=\"total-line__name\" scope=\"row\">\n                                                    <span> Shipping </span>\n                                                </th>\n                                                <td class=\"total-line__price\">\n                                                    <span\n                                                        class=\"order-summary__emphasis\"\n                                                        data-checkout-total-shipping-target=\"0\"\n                                                    >\n                                                        Free\n                                                    </span>\n                                                </td>\n                                            </tr>\n\n                                            <tr class=\"total-line total-line--taxes\" data-checkout-taxes=\"\">\n                                                <th class=\"total-line__name\" scope=\"row\">Taxes</th>\n                                                <td class=\"total-line__price\">\n                                                    <span\n                                                        class=\"order-summary__emphasis\"\n                                                        data-checkout-total-taxes-target=\"774\"\n                                                        >$7.74</span\n                                                    >\n                                                </td>\n                                            </tr>\n                                        </tbody>",
                "filename": "web/widgets/src/components/thankyoupage/public/index.html",
                "start_index": 333285,
                "end_index": 335837,
                "start_line": 6396,
                "end_line": 6433,
                "max_line": 6518,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "intial_documentation_sources": {
            "shopify": {
                "collection": "shopify_documentation",
                "reason_for_relevance": "The issue involves updating UI elements such as font size, text content, and spacing in a Shopify app, which may require reference to Shopify's templating tools and API documentation."
            }
        },
        "external_documentation_snippets": {
            "external_shopify": [
                {
                    "code": "Overview\n Banners\n Overview\n Add a banner\n Fields\n Add a banner to checkout\n A custom banner is a notice that you can display to customers. For example, you might want to show a banner that indicates that items are final sale and can't be returned or exchanged.\n In this tutorial, you'll use checkout UI extensions to add a customizable banner.\n Follow along with this tutorial to build a sample app, or clone the completed sample app.\n Shopify Plus\n Checkout UI extensions are available only to Shopify Plus merchants.\n What you'll learn\n In this tutorial, you'll learn how to do the following:\n Generate a checkout UI extension that appears in the checkout flow using Shopify CLI.\n Set up a banner to display to customers.\n Configure settings that enable app users to control the banner content.\n Support multiple targets that enable app users to choose where to render the banner.\n Deploy your extension code to Shopify.\n Requirements\n Create a Partner account\n Create a development store\n The development store must use the Checkout and Customer Accounts Extensibility developer preview, and should be pre-populated with test data.\n Create an app\n Create an app that uses Shopify CLI. This tutorial is compatible with the extension-only template.\n Project\n Extension:\n React\n JavaScript\n React\n View on GitHub\n Create a Checkout UI extension\n To create a checkout UI extension, use Shopify CLI, which generates starter code for building your extension.\n Create the extension\n Navigate to your app directory.\n Run one of the following commands to create a new extension:\n npm\n Yarn\n pnpm\n >\n npm run shopify app generate extension\n Select Checkout UI as the extension type, and then provide a name for your extension.\n Select a language for your extension. The example code in this tutorial uses JavaScript React.\n You now have a new directory for your app under <app-name> > extensions. The extension directory includes the extension script at src > Checkout.jsx.\n Set up a target for your extension\n Set up a target for your checkout UI extension. Targets control where your extension renders in the checkout flow.\n Export the targets from your script file\n In your Checkout.jsx file, set the entrypoints for the checkout extension, and then export them so they can be referenced in your configuration.\n For each target that you want to use, create a reactExtension function that references your target, and export it using a named export.\n purchase.checkout.block.render\n purchase.checkout.delivery-address.render-before\n Reference the targets in your configuration file\n In your checkout UI extension's configuration file, for each of your targets, create an [[extensions.targeting]] section with the following information:\n target - An identifier that specifies where you're injecting code into Shopify. This needs to match the target that you exported from your Checkout.jsx file.\n module - The path to the file that contains the extension code.\n export - The name of the exported function that contains the extension code.\n shopify.extension.toml is the configuration file for your extension. It contains basic information and settings.\n Whenever you edit your extension configuration file, you need to restart your server for the changes to take effect.\n You can define more than one target so that app users can add the extension to multiple locations in the checkout. You can do this by adding multiple [[extensions.targeting]] sections.\n Configure the settings\n The settings for a checkout UI extension define fields that the app user can set from the checkout editor.\n You can use validation options to apply additional constraints to the data that the setting can store, such as a minimum or maximum value.\n Define the required properties for the settings\n Define the settings that you want to expose to app users in shopify.extension.toml. For each setting, define the required properties: key, type, and name.\n The key property defines a string that's used to access the setting values from your extension code.\n The type property determines the type of information that the setting can store. Each setting types has built-in validation on the setting input.\n The name property defines the name for the setting that's displayed to the app user in the checkout editor.\n Define the optional properties for the settings\n For each setting, define the optional properties: description and validations.\n The description property is displayed to the app user in the checkout editor.\n The validations property defines constraints on the setting input that Shopify validates.\n Use the configured settings in the UI extension\n Use the values that have been configured by the app user in the checkout UI extension.\n Access app user settings\n Retrieve the settings values within your extension. Set default settings so the app can be previewed without being deployed.\n In React, the useSettings hook re-renders your extension with the latest values.\n When an extension is being installed in the checkout editor, the settings are empty until an app user sets a value. This object is updated in real time as the app user fills in the settings.\n useSettings\n Render the banner\n Render the Checkout UI extension Banner component with the content from the settings that you configured.\n Add the Banner component\n Using the Banner component, create the custom banner.\n Banner\n Preview the extension\n Preview your extension to make sure that it works as expected.\n Start your server\n Run the Shopify CLI dev command to build your app and preview it on your development store.\n In a terminal, navigate to your app directory.\n Either start or restart your server to build and preview your app:\n npm\n Yarn\n pnpm\n >\n npm run dev\n Make sure that you select a development store that has the Checkout and Customer Accounts Extensibility developer preview enabled.\n Press p to open the developer console.\n In the developer console page, click on the preview link for the custom banner extension.\n The checkout opens.\n View the banner on the checkout with the default settings.\n Troubleshooting\n Deploy the extension\n When you're ready, you can deploy your extension to Shopify.\n Deploy and release your extension\n To release your changes to users, create and release an app version. You can have up to 50 checkout UI extensions in an app version.\n Navigate to your app directory.\n Run one of the following commands.\n Optionally, you can provide a name or message for the version using the --version and --message flags.\n npm\n Yarn\n pnpm\n >\n npm run deploy\n An app version created using Shopify CLI contains the following:\n The app configuration from the local configuration file. If the include_config_on_deploy flag is omittted or false, the configuration from the active app version is used instead.\n The local version of the app's CLI-managed extensions. If you have an extension in your deployed app, but the extension code doesn't exist locally, then the extension isn't included in your app version.\n The latest drafts of dashboard-managed extensions.\n Releasing an app version replaces the current active version that's served to stores with your app installed. It might take several minutes for app users to be upgraded to the new version.\n Tip\n If you want to create a version, but want to avoid releasing it to users, then run the deploy command with a --no-release flag.\n You can release the unreleased app version using the CLI release command, or through the Partner Dashboard.\n Test the banner settings\n After the extension has been deployed, app users can edit the banner settings in the checkout editor. Test the banner settings so that you can see how they appear to app users.\n Test the the banner settings in the checkout editor\n In the development store where your app is installed, open the checkout editor: in the Shopify admin for the development store, navigate to Settings > Checkout > Customize.\n In the checkout editor, select Add an app block, and then select your extension.\n In the App block settings section, update the banner title, description, and status.\n To preview your changes, do the following:\n From your development store's storefront, add products to your cart.\n Click Check out.\n View the banner on the first page of the checkout. The banner reflects the settings that you set in the checkout editor.\n Was this page helpful?\n YesNo\n 1\n \n Tutorial complete!\n Nice work - what you just built could be used by Shopify merchants around the world! Keep the momentum going with these related tutorials and resources.\n Next steps\n Localize your extension\n Learn how to localize the text and number formats in your extension.\n Explore the checkout UI extension component reference\n Learn about all of the components that you can use in your checkout UI extension.\n Explore the checkout UI extension targets API reference\n Learn about the extension targets offered in the checkout.\n Updates & News\n Developer changelog\n Partner blog",
                    "filename": "docs/apps/checkout/custom/banners/add/content.txt",
                    "start_index": 0,
                    "end_index": 8957,
                    "start_line": 1,
                    "end_line": 145,
                    "max_line": 145,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Overview\n Getting started\n Create a subscription\n UX guidelines\n Overview\n Upsell\n Subscriptions\n Payments\n Thank you and Order status\n Localized UI extensions\n UX guidelines for post-purchase upsells\n Beta\n Post-purchase checkout extensions are in beta and can be used without restrictions in a development store. To use post-purchase extensions on a live store, you need to request access.\n When you design a post-purchase upsell, a great customer-facing user experience (UX) and merchant experience are important to the success of our merchants. The post-purchase upsell page should represent the merchant well and protect their brand\u2019s trust.\n User experience\n To provide a great post-purchase experience and to help the merchant gain trust from customers, implement the following UX principles in your post-purchase checkout extension:\n Be transparent about all the costs involved in a purchase.\n Present clear options to accept or refuse upsell offers without pressuring customers.\n Display a maximum of two consecutive upsell offers.\n Present relevant products by tailoring upsell offers to the shopping behaviors and preferences of customers.\n Provide default copy that addresses customers directly using a voice that's appropriate for any store, regardless of brand personality.\n Header and footer\n The styling of the header and footer is consistent across every post-purchase page:\n Header: Confirms the payment of the initial purchase of the order. Customers can also directly access their full order confirmation (and bypass the upsell offer pages) using the View order confirmation button.\n Footer: Contains links to the privacy policy, terms of service, and refund policy.\n Note\n You can't adjust the header and footer components.\n Required components\n App Bridge Checkout provides many powerful UI components that a rendering extension can use to build an interface. The App Bridge Checkout UI components are rendered natively by Shopify, so you can depend on them to be performant, accessible, and functional in all of the checkout\u2019s supported browsers.\n Before you integrate your post-purchase app into checkout, familiarize yourself with the UI guidelines and best practices for the following required components:\n Callout banner\n Product title and price\n Product image\n Price breakdown\n Call to action buttons\n Callout banner\n A callout banner encourages customers to take action on a post-purchase upsell. Use the App Bridge Checkout CalloutBanner to implement this component:\n Place a callout banner near the top of the page to let the customer know what the upsell offer is. Provide strong default copy in your app to encourage merchants to be explicit about the upsell offer.\n Do Don't\n Lead with clear text that explains what a customer can add to the order they've placed. For example: It\u2019s not too late to add to your order.\n Include the product name and the discount associated with it.\n Use exclamation points. For example: \"Wait! Before time runs out!\n Use misleading language that makes the upsell offer feel compulsory or introduces doubt about the status of the order.\n Product title and price\n The product must have the same title and price that it has on the merchant\u2019s store. Keep this consistent to maintain a customer\u2019s trust if they compare. Place the price of the product directly below the product title.\n If the post-purchase product is an upsell offer at a discounted price, then do the following:\n Strike out the original price of the product.\n Display the discounted price next to the original price so that the relationship is clear.\n Product image\n The product image represents the product being offered to the customer in the post-purchase upsell offer. Use the App Bridge Checkout Image component to add an image:\n ADDING MULTIPLE IMAGES\n If the upsell offer includes multiple images, then the images need to be easy to navigate and provide additional context to the customer. Images can be presented using different angles or sizes.\n Note\n There isn't an App Bridge Checkout component available for a carousel feature.\n Do Don't\n Use 48px previous and next arrow buttons.\n Give customers options to swipe between images, navigate using the keyboard, or click on a thumbnail to navigate to the next image.\n Make additional images responsive across screen sizes.\n Implement auto-scrolling through the images, as this might overwhelm customers.\n Price breakdown\n The post-purchase price breakdown shows the total cost of the upsell offer that the customer is accepting. The breakdown needs to be placed under the variant and quantity pickers. The breakdown also needs to dynamically update to reflect price changes if the customer adjusts the product's quantity or variants.\n STRUCTURE OF THE PRICE BREAKDOWN\n The price breakdown needs to include the following:\n Money line: An individual breakdown of costs.\n Subtotal: The total before shipping and taxes have been included.\n Shipping: The total shipping cost for the item(s).\n Taxes: The added cost of goods or services.\n Money summary: The combined total of the subtotal, shipping, and taxes.\n If your product description is long enough that a customer can't see the price breakdown without scrolling, then you need to include a copy of the price breakdown at the end of your product description.\n Call to action buttons\n A call to action button allows a customer to accept or decline an upsell offer. Use the App Bridge Checkout Button component to implement call to action buttons.\n ACCEPT BUTTON\n The accept button is the primary action on the post-purchase upsell page.\n Use the following text for the accept button:\n [Pay now \u2022 Product total price]\n If the product you are offering is free, then use the following text:\n [Add now \u2022 Free] or [Add now \u2022 $0]\n Note\n Don't give merchants the option to change the button text. However, you can translate the button text to any language that you want to support.\n CONFIRMING ACCEPTED UPSELL OFFERS\n Use the App Bridge Checkout Banner component to display a confirmation message when a customer accepts an upsell offer. For example: [Your order has been updated].\n Customers might not expect the accept button to generate a payment immediately because the convention is for \"buy now\" actions to trigger an additional confirmation step. To clarify that there is no additional confirmation step, do the following:\n Add a summary modal to confirm whether the customer wants to proceed.\n Add additional help text directly under the accept button informing the customer that they'll be charged immediately.\n DECLINE BUTTON\n The decline button needs to be placed under the accept button and should be less visually prominent than the accept button. However, despite being less visually prominent, the decline button should still be easy to see so that the merchant can easily decline the upsell offer. The decline button must contain the text [Decline upsell offer].\n Optional components\n In addition to the required components, you can add the following optional components to the post-purchase page:\n Product description\n Variant picker\n Quantity picker\n Product description\n The product description provides a summary of the key features of the product being displayed in the product image (or images).\n Use the TextBlock, TextContainer and Text App Bridge Checkout components to implement a product description.\n All upsell offers should have a product description that accurately summarizes the product features. Encourage merchants using your app to keep the product description as short as possible.\n LENGTHY PRODUCT DESCRIPTIONS\n If the product description is so long that it pushes the rest of the components down (variant picker, quantity picker, price breakdown, and buttons, then divide it into the following two parts:\n A summary description that reveals all other components without scrolling\n A longer, more detailed description below the other components\n Variant picker\n If the product has several variants (for example, size or color), then the page needs to include a variant picker under the product description. Use the App Bridge Checkout Select component to implement a variant picker.\n Label the picker with the name of the variant and the variant values. For example, Size: S, M, L, XL. If your product has several sizes, then consider linking to a size chart.\n Quantity picker\n The quantity picker should be placed below the product description to allow customers to adjust the quantity of a product.\n The quantity picker needs to be a number stepper that's set to 1 as a default. Use the label [Quantity].\n Post-purchase app selector\n Merchants need to enable their post-purchase app in the Shopify admin checkout settings. If there are multiple post-purchase apps installed, then they can also use the checkout settings to select which post-purchase app they want to enable on the post-purchase page.\n We recommend that you let merchants know that they might need to manually select your app to be active in the checkout settings. You could explain this in installation instructions or in your help pages.\n Your can check whether or not it is currently selected, using the following GraphQL Query:\n 1 {\n 2\n    app  {\n 3\n        isPostPurchaseAppInUse\n 4\n    }\n 5 }\n Suggested merchant-facing content for your app:\n You could use the following copy as the basis for a merchant-facing message about multiple post-purchase extensions:\n \"If you already have a post-purchase app installed, you must manually select to make [app-name] active. You can do this in the Shopify admin checkout settings. This option only shows if you already have a post-purchase app installed.\"\n Performance consideration\n To guarantee a good experience for both merchants and customers, we strongly recommend that you prioritize performance when building your extensions. You can depend on App Bridge Checkout UI components to be performant, accessible, and functional in all of the checkout's supported browsers. Keep the following guidelines in mind when building your app:\n Network calls must complete in two seconds or less.\n Network calls that occur before an interface presents to the customer must happen in the ShouldRender handler.\n Render must not require a network call before an interface presents to the customer. Ensure the extension caches required data beforehand using the storage API from ShouldRender.\n Next steps\n Learn how to create a post-purchase upsell.\n Explore UX guidelines for the entire checkout experience.\n For general best practices for developing apps, refer to Best practices for building Shopify apps.\n For practical guidance on how to design a user interface for the Shopify admin, refer to Shopify's App Design Guidelines.\n Get familiar with Polaris accessibility and content guidelines.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n User experience\n Post-purchase app selector\n Performance consideration\n Next steps\n Updates & News\n Developer changelog",
                    "filename": "docs/apps/checkout/product-offers/post-purchase/ux-guidelines/upsell/content.txt",
                    "start_index": 0,
                    "end_index": 10936,
                    "start_line": 1,
                    "end_line": 140,
                    "max_line": 140,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Product subscription app extensions\n Banner\n A Banner is used to give feedback and is typically displayed at the top of a page or section.\n Example\n JS\n React\n 1 import {extend, Banner} from '@shopify/post-purchase-ui-extensions';\n 2\n 3 extend('Checkout::PostPurchase::Render', (root) => {\n 4\n    const banner = root.createComponent(Banner, {\n 5\n      status: 'critical',\n 6\n      title: 'This is an error message',\n 7\n    });\n 8\n 9\n    root.appendChild(banner);\n 10 });\n Props\n optional = ?\n Name Type Description\n title? string Banners have an optional title. Use a title to grab the buyers attention with a short, concise message.\n status? \"info\" | \"success\" | \"warning\" | \"critical\" Sets the status of the banner. @default 'info'\n collapsible? boolean Makes the content collapsible\n iconHidden? boolean Hides the status icon\n Best practices\n Use banners thoughtfully and sparingly for only the most important information. Too many banners distracts customers from completing checkout.\n Banners are typically displayed at the top of a page, or section if they relate to specific content. Place banners below the relevant page or section header.\n Include a Button with next steps when possible.\n Banners should be dismissible unless they contain critical information or an important step customers need to take.\n Use the information banner to update customers about a change or give them advice.\n Use the warning banner to display information that needs attention or that customers need to take action on. Seeing these banners can be stressful for customers so be cautious about using them.\n Use the critical banner to communicate problems that have to be resolved immediately for customers to complete checkout.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Props\n Best practices\n Updates & News\n Developer changelog\n Partner blog\n Engineering blog",
                    "filename": "docs/api/checkout-extensions/post-purchase/components/banner/content.txt",
                    "start_index": 0,
                    "end_index": 1854,
                    "start_line": 1,
                    "end_line": 45,
                    "max_line": 45,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Product recommendations reference\n Web pixel app extensions\n Marketing activities app extensions\n Product subscription app extensions\n Banner\n A banner informs merchants about important changes or persistent conditions. Use if you need to communicate to merchants in a prominent way, without blocking other actions.\n Example\n JavaScript\n React\n 1 import { extend, Banner, Screen, ScrollView, Tile } from \"@shopify/retail-ui-extensions\";\n 2\n 3 extend('pos.home.tile.render', (root, api) => {\n 4\n    const tileProps = {\n 5\n      title: 'My app',\n 6\n      enabled: true,\n 7\n      onPress: () => {\n 8\n        api.smartGrid.presentModal();\n 9\n      },\n 10\n    };\n 11\n 12\n    const tile = root.createComponent(Tile, tileProps);\n 13\n 14\n    root.appendChild(tile);\n 15\n    root.mount();\n 16 });\n 17\n 18 extend('pos.home.modal.render', (root) => {\n 19\n    const screen = root.createComponent(Screen, {title: 'title', name: 'default'});\n 20\n    const scrollView = root.createComponent(ScrollView);\n 21\n 22\n    scrollView.appendChild(root.createComponent(\n 23\n      Banner,\n 24\n      {title: 'Information Banner', variant: 'information', action: 'Ok', visible: true}\n 25\n    ));\n 26\n 27\n    scrollView.appendChild(root.createComponent(\n 28\n      Banner,\n 29\n      {title: 'Confirmation Banner', variant: 'confirmation', visible: true}\n 30\n    ));\n 31\n 32\n    scrollView.appendChild(root.createComponent(\n 33\n      Banner,\n 34\n      {title: 'Alert Banner', variant: 'alert', visible: true}\n 35\n    ));\n 36\n 37\n    scrollView.appendChild(root.createComponent(\n 38\n      Banner,\n 39\n      {title: 'Error Banner', variant: 'error', visible: true}\n 40\n    ));\n 41\n 42\n    screen.appendChild(scrollView);\n 43\n    root.appendChild(screen);\n 44\n    root.mount();\n 45 });\n Props\n Name Type Description Options\n title string The text displayed inside the banner.\n variant BannerVariant? Determines the banner's appearance. information: Use to provide information.\n \n confirmation: Use to indicate success.\n \n alert: Use to indicate a warning.\n \n error: Use to indicate an error.\n action string? Overwrite the action text. Defaults to \"Dismiss\".\n onPress () => void? Overwrite the default onPress. Defaults to dismissing the banner.\n visible boolean Determines the banner's visibility.\n Guidelines\n Use when needing to communicate to merchants in a way that is persistent but non-interruptive.\n Only one banner should be visible at a time.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Example",
                    "filename": "docs/api/pos-extensions/ui-extensions-reference/components/banner/content.txt",
                    "start_index": 0,
                    "end_index": 2475,
                    "start_line": 1,
                    "end_line": 105,
                    "max_line": 105,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Product subscription app extensions\n CalloutBanner\n CalloutBanner is used to inform buyers about the details of a limited time offer. They differ from Banner which is used to report status.\n Example\n JS\n React\n 1 import {extend, CalloutBanner, Text} from '@shopify/post-purchase-ui-extensions';\n 2\n 3 extend('Checkout::PostPurchase::Render', (root) => {\n 4\n    const calloutBanner = root.createComponent(\n 5\n      CalloutBanner,\n 6\n      {title: 'Special offer today only'},\n 7\n      [\n 8\n        root.createComponent(\n 9\n          Text,\n 10\n          undefined,\n 11\n          'Add the Dinghy Skeleton Cruiser to your order and save 15%',\n 12\n        ),\n 13\n      ],\n 14\n    );\n 15\n 16\n    root.appendChild(calloutBanner);\n 17 });\n Props\n optional = ?\n Name Type Description\n title? string Callout banners have an optional title. Use a title to grab the buyers attention with a short, concise message.\n border? \"none\" | \"block\" Adds a top and bottom border to the callout banner @default 'block'\n background? \"secondary\" | \"transparent\" Sets the background color of the callout banner @default 'secondary'\n alignment? \"leading\" | \"center\" | \"trailing\" Sets the alignment of the title and children @default 'center'\n spacing? \"xtight\" | \"tight\" | \"loose\" | \"xloose\" Sets the spacing between the title and children @default 'tight'\n Guidelines\n Never display more than one CalloutBanner\n Place callout banners near the top of the page to bring the buyer's attention\n The text should be written as concisely as possible\n Be considerate and avoid anxiety provoking language:\n Avoid exclamation points \u2013 \u201cWait! Before time runs out!\u201d\n Give it a feeling of personalization",
                    "filename": "docs/api/checkout-extensions/post-purchase/components/calloutbanner/content.txt",
                    "start_index": 0,
                    "end_index": 1666,
                    "start_line": 1,
                    "end_line": 50,
                    "max_line": 50,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Billing\n App Store\n Alerts\n Alerts notify merchants of important system information, and provide feedback on merchant actions.\n Task alerts\n Task alerts are initiated in response to merchant actions during a specific task. Task alerts give merchants direct and immediate feedback.\n The following are examples of task alerts:\n A form is successfully submitted.\n There's problem uploading something.\n The information provided is incorrect or doesn\u2019t match the requested format.\n System alerts\n System alerts are initiated by the application or system, independent of merchant actions. System alerts provide updates on background system status or out-of-context events that have finished.\n The following are examples of system alerts:\n Lost network connection.\n A planned upgrade.\n The app subscription is expiring soon.\n Switch to desktop view\n Switch to mobile view\n Alert patterns\n Banner (system alert)\n Inline (task alert)\n Toast (task alert)\n The following are common patterns available for merchant alerts:\n Pattern Definition Duration and interaction Used to communicate\n Banner\n Page-level alerts, often system related\n or\n Contextual alerts that are specific to a card, section, or modal\n Banners persist until merchants dismiss them, and can include an action button or link.\n Information\n Success\n Warning\n Error\n Inline Provides merchants with feedback that\u2019s as close to the source as possible Inline alerts persist until merchants resolve the message.\n Warning\n Error\n Toast Short, temporary messages that slide in and out of a page and provide succinct information. Toast alerts without actions can disappear automatically or merchants can dismiss them. Success\n Information\n When you use alerts to communicate important information to merchants, you can choose from a few standard patterns.\n Informational banner\n Use an informational banner with the blue header when you want to convey general information or actions that aren\u2019t critical.\n Switch to desktop view\n Switch to mobile view\n Must Do\n Informational banners must have a blue header and contain only lower priority information that\u2019s always dismissible.\n Must Do\n Banners must be dismissible unless they contain critical information that merchants need to resolve to move forward. Dismissed banners shouldn't display again within the same user session.\n Success\n When you\u2019re communicating success, it\u2019s important to provide feedback. That means using patterns that inform merchants when a task has been completed successfully.\n Toast\n Toasts inform merchants of a process that the app has performed or will perform. Toasts display temporarily, at the bottom of the interface. Toasts don\u2019t require any merchant input to disappear, and they shouldn\u2019t interrupt the merchant experience.\n Switch to desktop view\n Switch to mobile view\n Must Do\n Display toasts in the bottom center of your app screen.\n Must Do\n Use toasts for only short messages that confirm an action.\n Must Do\n Make toast messages three words or fewer.\n Must Do\n Toasts are only for non-critical messages that are relevant at the moment.\n Do Not\n Don't use toasts for error messages, except for persistent errors such as connection errors. Refer to Polaris toast best practices for more information.\n Success banners\n Only use success banners when feedback is delayed, persistent, or has a call-to-action (CTA). Otherwise, use toasts.\n Switch to desktop view\n Switch to mobile view\n Must Do\n Make success banners green and include next steps, if applicable.\n Do Not\n Don\u2019t use banners to show success messages for actions that merchants have completed. For user-initiated feedback, use success toasts instead.\n Do Not\n Don\u2019t use success banners if there isn\u2019t a CTA.\n Warning\n When you\u2019re communicating warnings to merchants, you have different options based on what\u2019s causing the warning.\n Warning banners\n Use warning banners to display information that needs attention or that merchants need to take action on.\n Switch to desktop view\n Switch to mobile view\n Must Do\n Make warning banners yellow. Seeing these banners can be stressful for merchants, so use them intentionally.\n Inline warning in a list\n Indicate specific items in a list that you want to make merchants aware of. You can use the Polaris ExceptionList component for this.\n Must Do\n Use inline warnings to draw attention to exceptions in a list, and encourage action when possible.\n Do Not\n Don\u2019t use only color to convey a warning. Pair warning messages with a warning icon. This increases accessibility by providing additional identifiers.\n Error\n When you\u2019re communicating problems and errors, use recognizable patterns that inform merchants of the alert\u2019s significance. Put error messages as close to the problem as possible.\n Error messages are necessary when something isn\u2019t working as expected, or when merchants should be alerted to critical disruptions.\n When errors happen, they can be frustrating or even scary. Guide merchants to a solution clearly and quickly.\n Switch to desktop view\n Switch to mobile view\n Must Do\n Make error banners red. Always tell merchants what happened and offer a path forward.\n Do Not\n Don't use scary language, technical terms, and jargon.\n Do Not\n Don't use humor, idioms, or other words and phrases that might not translate correctly.\n Critical banners\n Use critical banners when you\u2019re communicating problems that need to be resolved immediately for merchants to complete a task.\n Must Do\n Make critical banners red and use them sparingly.\n Must Do\n Provide troubleshooting steps and a clear way to get support.\n Inline errors in forms\n When you\u2019re validating form fields like text fields, place the error message directly below the affected field.\n Use red for error message text, because it\u2019s a common convention outside of Shopify.\n Must Do\n Place error messages directly below the affected field.\n Do Not\n Don\u2019t show an error while merchants are typing, because it can cause confusion. Wait until the keyboard focus moves away from the field, and then display the error.\n Inline errors in lists\n Indicate specific items in a list that you want to make merchants aware of. You can use the Polaris ExceptionList component for this.\n Must Do\n Highlight an exceptional state that encourages merchants to click on a list item. Lead with what went wrong.\n Do Not\n Don\u2019t use only color to convey an error. Instead, pair the error message with an error icon. This increases accessibility by providing additional identifiers.\n Errors in cards, sections, or modals\n If an error applies to a specific card, section, or modal, then place it near the top of the affected element.\n Do Not\n Don\u2019t nest error messages too deeply within your app\u2019s hierarchy. If the error applies more broadly, then place it at the top of the affected element.\n Do Not\n Don\u2019t use modals to handle error messages. Only place an error message inside a modal if the modal itself is experiencing an error.\n Previous\n Navigation\n Next\n App home page\n Was this page helpful?\n YesNo",
                    "filename": "docs/apps/design-guidelines/user-experience/alerts/content.txt",
                    "start_index": 0,
                    "end_index": 6996,
                    "start_line": 1,
                    "end_line": 130,
                    "max_line": 130,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Deciding extension placement\n Localizing UI extensions\n Testing UI extensions\n UX guidelines\n Selling strategies\n App Store\n UX guidelines\n Customer accounts offer a secure and flexible way for customers to manage their information and orders. Accounts empower customers with greater control over post-purchase surfaces and create opportunities for merchants to drive more sales with features like offers, wishlists, product offers, and loyalty programs.\n All apps should follow the general guidance provided by the App Design Guidelines. This guide provides additional guidance for designing customer account UI extensions.\n Merchant-to-customer content\n When you write UI content for your customer account app, you\u2019re writing directly to a merchant\u2019s customers. The content that you write should represent the merchant, not your app, and should optimize the customer\u2019s online experience.\n Consult Polaris for more guidelines on voice, tone, and vocabulary to consider for merchant-to-customer content.\n Principles\n Enable self-service: Self-service options help customers resolve issues faster and reduce merchant support interactions.\n Design for consistency: Merchants can use different apps to enhance their customer account interface. Because your app operates alongside other apps, it's important to ensure a familiar user experience. Avoid introducing unfamiliar UX patterns, terms, or navigation paradigms that deviate from our guidelines. Aim to integrate your app seamlessly into the existing customer account experience.\n Personalize when possible: Customer account extensions benefit from authenticated access to customer data. Use this data to personalize the customer experience and create delightful moments. For example, offer complementary products, birthday discounts, or personalize content with the customer's name. Be creative, but respect privacy.\n Don't expose your brand to the customer: Enhance the merchant's brand subtly and effectively. At all times, aim to create a seamless and consistent experience that makes customers feel like they're interacting directly with the merchant.\n Build for scale: Design your app to support merchants of all sizes, from small startups to large enterprises. Ensure that your app effectively handles both low and high order volumes.\n Responsive design\n Design interfaces that adapt to different screen sizes. Your app should offer a good UX across mobile, tablet, and desktop devices. Test the extension on various screen sizes to ensure content adjusts appropriately for each device.\n Grid layouts\n Grid layouts enable responsive design for different screen sizes, and streamline development while enhancing the overall aesthetics of the customer experience. Grid layouts also ensure that elements are spaced, aligned, and positioned consistently.\n Customer account pages are made up of columns, gutters, and margins. The design is based on a 12-column grid.\n The following are the grid breakpoints per device type:\n Mobile: 375 dp breakpoint, six column grid, one column content\n Tablet: 750 dp breakpoint, six column grid, one column content\n Small laptop: 1000 dp breakpoint, six column grid, two column content\n When you design your page layout, you should generally space the content evenly across the grid columns. For example, in a three-column layout, each column of content would span four columns of the grid. However, to create a layout similar to the Order status page, the first column of content should span seven columns and the second should span five columns.\n Fulfillment statuses\n Conditional logic based on status\n Design your apps so that merchants have the flexibility to determine where an action displays.\n For example, for order actions that only become relevant once the customer has received the order, like requesting a return or writing a review, ideally customer's can\u2019t take action until the order is marked as delivered. However, when merchants don't provide a tracking number for a fulfilled order, it can be difficult for Shopify to know when the order has been delivered. In these instances, customer wouldn't have access to actions that depend on an order's delivered status. Be mindful of situations like this, and enable merchants to configure your app to suit their fulfillment processes.\n Content guidelines\n Status names\n Aim for one to three words.\n Use sentence case.\n Test different fulfillment scenarios\n We recommend testing your Order status page extensions across different fulfillment states. The following are some examples:\n Different delivery statuses, such as confirmed, on its way, and delivered.\n Partial fulfillments\n Multiple fulfillments\n Local pickup\n Gift cards\n Digital products\n Returns\n Payment statuses\n Depending on the payment status of an order, a payment card will display above the order summary. For example, when a customer has made a purchase with Net 90 payment terms, they have 90 days to submit payment. In this scenario, the payment card displays the amount due, the due date, and a Pay now button.\n Test different payment scenarios\n We recommend testing your Order status page extensions across different payment statuses. The following are some example statuses:\n Payment terms\n Partial payment\n Refund\n Paid\n User feedback and informational banners\n Error messages\n Error messages should help the customer understand what went wrong and how they can resolve the error.\n Create error messages using a Banner component with the alert or critical status prop.\n Don't use toasts for error messages. Since toasts disappear, customers lose access to the information that they need to move forward.\n Learn more about error handling.\n Informational banners\n Create informational banners using a Banner component with the info status prop.\n To build a more neutral banner, without the icons and colors that are associated with the different props, the following are some examples of components that you can use:\n Card: Customer account\n Heading: Heading 2\n Text: Default\n Button: Secondary\n These components adopt the merchant's branding by default, which helps your banner align with the overall look and feel of the merchant's shop.\n Next steps\n Figma UI kit\n Everything you need to start designing with customer account and checkout components.\n Figma: Account screens\n Explore all the customer account screens to design your extensions.\n Customer account components\n Learn about the components that you can use to build customer account UI extensions.\n Checkout components\n Learn about the checkout components that you can also use to build customer account UI extensions.\n Merchant-to-customer content guidelines\n Learn how to write UI content that represents merchants and optimizes the customer experience.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Merchant-to-customer content\n Principles\n Responsive design\n Grid layouts\n Fulfillment statuses\n Payment statuses\n User feedback and informational banners\n Next steps\n Updates & News",
                    "filename": "docs/apps/customer-accounts/best-practices/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 6978,
                    "start_line": 1,
                    "end_line": 90,
                    "max_line": 90,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Delivery and shipping\n Product offers\n Overview\n Pre-purchase\n Overview\n Build a pre-purchase offer\n UX guidelines\n Post-purchase\n Payments\n Thank you and Order status\n App Store\n UX guidelines for pre-purchase product offers\n Shopify Plus\n Checkout UI extensions that render on the information and shipping and payment steps in checkout are available only to stores on a Shopify Plus plan.\n This guide introduces UX guidelines for adding pre-purchase product offers to checkout.\n Placement\n Choosing the right target is key to providing a good experience.\n Before you start building, decide whether you want your product offer to render at a static target, a dynamic target, or whether you'll support both. To learn more about target types, refer to the target API reference.\n This product offer example uses the Checkout::Dynamic::Render[OrderSummary4] target for the following reasons:\n The target keeps the line items, discounts, and money lines together, which makes it easy for customers to scan their order summary.\n A product offer is considered secondary content, and should therefore be placed outside of the order summary.\n Note\n On mobile, the order summary area is collapsed by default. The UI won't display the product offer until the customer expands the order summary.\n Components\n The components to create a product offer depends on the extension's possible states.\n The product offer use case can have the following states:\n Loading\n Loaded (default)\n Adding\n Added\n Note\n Added doesn't need a success banner. The addition of the item to the order summary is confirmation that the item was successfully added to the order.\n You can use the following components to create the states:\n Components list for the product offer use case\n Component Preview Tips\n Divider Because the product offer will likely display in a core checkout feature such as contact information or order summary line items, include divider lines to help separate the product offer from the order summary.\n SkeletonText To keep placement from shifting when the content loads, try to reflect the actual content\u2019s dimensions.\n SkeletonImage\n Image Keep the thumbnail size the same as the thumbnail in the order summary to keep the layout consistent.\n Heading If possible, allow merchants to customize the heading content.\n Text\n Text\n Button Use secondary buttons here, reserving the primary button for the main call to actions like Pay now and Next step.\n Banner Use banners to communicate error states.\n Layout\n When you use a nested layout, you'll need only the following structural components:\n Components list for the product offer use case\n Component Preview Tips\n BlockStack You can nest BlockStack components either with themselves or with other components.\n InlineLayout You can nest Inline components with themselves or with other components.\n BlockStack\n Use the BlockStack component to stack elements on top of each other vertically.\n Nesting BlockStack\n Note\n BlockStack and BlockLayout components are similar to each other. BlockLayout enables you to specify different row sizes. With BlockStack, you don't need to do that.\n Set spacing between the divider and the content to loose, for consistency with the rest of checkout\u2019s spacing. Set the spacing between the heading and the line item content to base.\n To address different spacing values, you can nest a BlockStack inside of another BlockStack component.\n InlineLayout\n To display products horizontally, use InlineLayout, and set the spacing between elements to base.\n UX guidelines\n Adhere to the following guidelines when you're designing a product offer checkout UI extension, so that you can help merchants gain customer trust and provide a great checkout experience:\n Only show two product offers at a time\n Adding more than two offers can overwhelm customers, making it difficult for them to choose a product.\n Let merchants personalize product offers\n Customers are more likely to respond positively to offers that relate to their shopping journey or to the items in their cart.\n Only show necessary information\n Make it easy for customers to process offer information by only showing what's most relevant. For example, if supporting information like a product description is required, then progressively reveal it to customers at strategic moments.\n Next steps\n Learn how to offer customers additional products at checkout that they can add to their order.\n Explore UX guidelines for the entire checkout experience.\n For general best practices for developing apps, refer to Best practices for building Shopify apps.\n For practical guidance on how to design a user interface for the Shopify admin, refer to Shopify's App Design Guidelines.\n Get familiar with Polaris accessibility and content guidelines.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n Placement\n Components\n Layout\n UX guidelines",
                    "filename": "docs/apps/checkout/product-offers/pre-purchase/ux-guidelines/content.txt",
                    "start_index": 0,
                    "end_index": 4860,
                    "start_line": 1,
                    "end_line": 80,
                    "max_line": 80,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Layouts\n Overview\n checkout.liquid\n Overview\n Customize checkout.liquid\n Checkout CSS\n Templates\n Sections\n Blocks\n Section groups\n Config\n Locales\n Settings\n Developer tools\n Best practices\n Integrating apps\n Product merchandising\n Pricing and payments\n Delivery and fulfillment\n Customer engagement\n Troubleshooting\n Theme Store\n CSS styling in checkout.liquid\n Deprecated\n checkout.liquid is deprecated. It will be sunset for the Information, Shipping, and Payment checkout steps on August 13, 2024, and for the Thank you and Order status pages on August 28, 2025. Additional scripts and script tags will also be sunset for the Order status page on August 28, 2025.\n Stores that currently use checkout.liquid need to upgrade to Checkout Extensibility before these dates. Access to checkout.liquid won't be provided to new stores, with the exception of expansion stores. Shopify Scripts will continue to work alongside Checkout Extensibility until August 28, 2025.\n Learn how to build checkout extensions that extend the functionality of Shopify checkout.\n You can make style enhancements to your checkout pages by adding CSS to the checkout.liquid file of your theme. Consider the following best practices when adding CSS to your checkout.liquid file.\n Shopify Plus\n The checkout.liquid layout is available to Shopify Plus merchants only.\n Checkout pages\n When you're styling your checkout, remember to consider its component pages. Depending on checkout settings, there are at least four checkout pages, and at most six.\n BEM Syntax\n Checkout uses the BEM syntax to minimize nesting. You should avoid deep nesting of selectors, and use the simplest selector that meets your needs.\n For example, to style the name of the products inside the order summary:\n Use this Instead of this\n 1 .product__info__name {\n 2\n      color: green;\n 3\n    }\n 1 .order-summary .order-summary__section .product_list .product_info .product__info__name {\n 2\n      color: red;\n 3\n    }\n Avoid using !important\n Your checkout stylesheet is loaded after the base stylesheet, so you don't need to add !important to every property. Reserve the use of !important for cases where it's absolutely necessary.\n Button examples\n Consider designing buttons for all states: disabled, normal, and hover.\n Customize your classes to provide button styles that match your theme.\n Main breakpoints\n The default stylesheet has four breakpoints, which you can use in your stylesheet:\n Small: 0px and up \u2013 doesn't require a media query\n Medium: 750px and up\n Large: 1000px and up\n Large Desktop: 1300px and up.\n Custom webfonts and additional scripts\n You can load your self-hosted webfonts directly from the CSS style tags in the checkout.liquid using an @font-face declaration.\n External assets\n Checkout uses SSL encryption to ensure a safe buying experience for your customers. If you do load images or additional content, then these assets need to be served over https:// to be rendered on the page. When possible, you should use the Shopify CDN to host all your assets.\n Feature detection\n A few utility classes are included on the <html> element:\n Javascript: js/no-js lets you know whether the browser supports javascript or not.\n Browser and OS: For example, a user running Chrome on OS X would have the classes mac chrome.\n Modernizr: Modernizr is used to detect if the browser supports certain CSS properties like RGBA, multiple background images, box-shadows, pseudo-elements, and inline SVG.\n You can use these classes to provide an improved checkout experience on older browsers.\n Fields, modals, and notices\n Some other components you can customize in the CSS of the checkout.liquid are fields, modals, warnings, and error messages\n Field states and classes\n Use the classes in your tables to style the three field states to fit your theme.\n Field state CSS class\n Default No class required\n Focus field--focus\n Error field--error\n Modals\n Policies (refund, privacy, and terms of service) and processing/forwarding pages are presented in a full-screen modal.\n Warnings\n Use warnings to notify the user that the total cost of their order changed before they completed their purchase. For example, you might add a warning if inventory is automatically adjusted.\n Error messages\n Use clear error messages to communicate errors to the user.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n External assets\n Feature detection\n Updates & News\n Developer changelog\n Partner blog\n Engineering blog",
                    "filename": "docs/themes/architecture/layouts/checkout-liquid/checkout-css/content.txt",
                    "start_index": 0,
                    "end_index": 4464,
                    "start_line": 1,
                    "end_line": 90,
                    "max_line": 90,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                },
                {
                    "code": "Overview\n Banners\n Fields\n Delivery and shipping\n Product offers\n Distribution\n Billing\n App Store\n Custom banners and fields\n Shopify Plus\n Checkout UI extensions that render on the information and shipping and payment steps in checkout are available only to stores on a Shopify Plus plan.\n A custom banner is a notice that you can display to customers. A custom field is a property that allows users to enter text into a user interface. This guide introduces custom banners and fields, and describes the available resources that you can use to build them in Shopify checkout.\n How it works\n You can build functionality in your app that allows merchants to display and configure the following experiences:\n Custom banners in checkout\n Custom fields in checkout\n Custom banners\n You can use a checkout UI extension to build a custom banner. The following example shows how to display a banner that renders at the purchase.checkout.block.render target.\n You can support static targets so that extensions can be rendered using the checkout editor in one of the supported locations in checkout.\n Custom fields\n You can use a checkout UI extension to build a custom field. The following example shows a custom field that collects delivery instructions and renders at the purchase.checkout.shipping-option-list.render-after target:\n Getting started\n Follow tutorials to learn how to build custom banners and fields.\n Build a custom banner\n Learn how to add a custom banner to checkout.\n Build a custom checkout field\n Learn how to add custom fields to checkout that customers can use to add delivery instructions to their order.\n Developer tools and resources\n Explore the following developer tools and resources to get familiar with building custom banners and fields.\n Checkout UI extensions API reference\n Consult the API reference for checkout UI targets and their respective types.\n Components for checkout UI extensions\n Learn about the components that are available in checkout UI extensions.\n Checkout extension configuration\n Learn about the properties that you can configure in your checkout UI extension.\n UX guidelines for custom fields\n Explore UX guidelines that you can refer to when building custom fields.\n Was this section helpful?\n YesNo\n ON THIS PAGE\n How it works\n Getting started\n Developer tools and resources\n Updates & News\n Developer changelog",
                    "filename": "docs/apps/checkout/custom/content.txt",
                    "start_index": 0,
                    "end_index": 2364,
                    "start_line": 1,
                    "end_line": 45,
                    "max_line": 45,
                    "git_instance": "github",
                    "repo_name": "shopify_documentation",
                    "sha": ""
                }
            ]
        },
        "mmr_code_snippets_initial": [
            {
                "code": "<Banner\n                                            status=\"warning\"\n                                            title={'\ud83d\ude80 Faster, Smoother, & Better Checkout Editor'}\n                                            action={{\n                                                content: 'Update Now',\n                                                loading: updateVersionLoading,\n                                                onAction: () => {\n                                                    updateCheckoutVersion('V2');\n                                                },\n                                            }}\n                                        >\n                                            <Text variant=\"bodyLg\" as=\"p\">\n                                                Explore our upgraded checkout editor. Discover new triggers, AI upsells,\n                                                multiple widget configurations, split testing and other customization\n                                                features. Upgrading is fully reversible and will automatically transfer\n                                                your current setup.\n                                            </Text>\n                                        </Banner>\n                                    )}\n                                    {currentSplitTestTab === 'A' || !currentSplitTestTab\n                                        ? widgetsVersionA\n                                        : widgetsVersionB}\n                                </VerticalStack>\n                            )}\n                        </div>\n                        <div className={styles.preview}>\n                            <div>\n                                <Preview widget={selectedWidgetData} widgetType={previewSelection?.type} />\n                                {selectedTab === 'rewardsWidget' && (\n                                    <div style={{ marginTop: '20px' }}>\n                                        <Banner title=\"\" status=\"info\">\n                                            The rewards bar widget is intended to be used with one or more upsell\n                                            widgets. If a customer sees that they're $10 away from free shipping, they\n                                            might want to accept one of your upsell products to get there!\n                                        </Banner>\n                                        <Banner\n                                            title=\"Create discount\"\n                                            action={{\n                                                content: 'Create discount',",
                "filename": "web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx",
                "start_index": 10154,
                "end_index": 12821,
                "start_line": 236,
                "end_line": 274,
                "max_line": 306,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n    const aiRecId1 = uuidv4();\n    const aiRecId2 = uuidv4();\n    const aiRecId3 = uuidv4();\n    const aiRecId4 = uuidv4();\n\n    const textStringUpsellDefault =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, it's not too late to get more! Grab another for </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;\n\n    const textStringDownsell =\n        discountAmount === 0\n            ? `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another!</strong></span></p>`\n            : `<p style=\"text-align:center;\"><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"first-name}\"><span style=\"font-size: 24px;\"><strong>{first-name}</strong></span></a><span style=\"font-size: 24px;\"><strong>, last chance to grab another...Get an additional </strong></span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"discount}\"><span style=\"font-size: 24px;\"><strong>{discount}</strong></span></a><span style=\"font-size: 24px;\"><strong> OFF!</strong></span></p>`;",
                "filename": "web/client/src/pages/funnels/utils/upsellMachinePresets.ts",
                "start_index": 2487,
                "end_index": 4357,
                "start_line": 1,
                "end_line": 75,
                "max_line": 970,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { AfterSellPaidFeature } from '#aftersell/common/billing';\nimport { Banner, Text } from '@shopify/polaris';\nimport { useCurrentUser } from 'src/providers/UserProvider';\nimport { getMixpanel } from 'src/tracking/mixpnl';\n\nexport const ActionNeededBanner = () => {\n    const {\n        currentUser: user,\n        isPostPurchaseAppInUse,\n        isLoading: userInformationLoading,\n        refetch: refetchUserInformation,\n        plan,\n    } = useCurrentUser();\n    const { myshopify_domain } = user;\n\n    const hasPostPurchaseAccess = plan.planDetails.features.includes(AfterSellPaidFeature.POST_PURCHASE);\n\n    if (isPostPurchaseAppInUse || !hasPostPurchaseAccess) return null;\n    return (\n        <Banner\n            title=\"Action needed\"\n            status=\"warning\"\n            action={{\n                content: 'Enable setting',\n                // id of the section we're referring to is #additionalscripts\n                url: `https://${myshopify_domain}/admin/settings/checkout#additionalscripts`,\n                external: true,\n                onAction: () => {\n                    getMixpanel().track('Selected App Enable');\n                },\n                loading: userInformationLoading,\n            }}\n            secondaryAction={\n                userInformationLoading\n                    ? undefined\n                    : {\n                        content: 'Refresh',\n                        onAction: () => {\n                            getMixpanel().track('Selected App Check');\n                            refetchUserInformation();\n                        },\n                    }\n            }\n        >\n            <Text variant=\"bodyMd\" as=\"p\">\n                Make sure to select \"AfterSell\" in the Shopify checkout settings under the \"Post-purchase page\" section.\n                This is required to show AfterSell offers to your customers.\n            </Text>\n        </Banner>\n    );\n};",
                "filename": "web/client/src/shared-components/action-needed-banner.tsx",
                "start_index": 0,
                "end_index": 1922,
                "start_line": 1,
                "end_line": 51,
                "max_line": 51,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "if (isTextImageWidget(template)) {\n                    const config = template.config;\n                    const heading = config.heading;\n                    config.heading = {\n                        config: {\n                            fontSize: heading?.config?.fontSize ?? UPSELL_TEXT_SIZES[4].value,\n                            appearance: heading?.config?.appearance ?? COLOR_OPTIONS[0].value,\n                        },\n                        value: heading?.value ?? '',\n                    };\n\n                    const text = config.text;\n                    config.text = {\n                        config: {\n                            fontSize: text?.config?.fontSize ?? UPSELL_TEXT_SIZES[2].value,\n                            appearance: text?.config?.appearance ?? COLOR_OPTIONS[0].value,\n                        },\n                        value: text?.value ?? '',\n                    };\n\n                    config.position = config.position || ('left' as Alignment);\n                    config.verticalAlignment = config.verticalAlignment || ('leading' as VerticalAlignment);\n                    config.imageSize = setDefaultNumberValue(config.imageSize, 350);\n                    config.topPadding = setDefaultNumberValue(config.topPadding, 2);\n                    config.bottomPadding = setDefaultNumberValue(config.bottomPadding, 2);\n                }\n\n                if (isTimerWidget(template)) {\n                    const config = template.config;\n                    config.topPadding = setDefaultNumberValue(config.topPadding, 2);\n                    config.bottomPadding = setDefaultNumberValue(config.bottomPadding, 2);\n                    config.minutes = config.minutes ?? 10;\n                    config.heading =\n                        config.heading ??\n                        `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\", sans-serif;\">Your order is confirmed but you can still add the following for a limited time</span><span style=\"font-size: 18px;\"> </span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span></p>`;\n                    config.text = config.text ?? '';\n                    config.textColor = config.textColor ?? UPSELL_COLOR_NAMES.BLACK;\n                    config.backgroundColor = config.backgroundColor ?? UPSELL_COLOR_NAMES.RED;\n                    config.hideBanner = config.hideBanner ?? false;\n                }\n\n                return template;\n            }",
                "filename": "web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts",
                "start_index": 12701,
                "end_index": 15540,
                "start_line": 225,
                "end_line": 267,
                "max_line": 270,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Layout>\n                            <Layout.Section fullWidth>\n                                <AdditionalScopesBanner\n                                    requiredAdditionalScopes={['write_checkout_branding_settings']}\n                                />\n                            </Layout.Section>\n                            <StickyLayoutSection oneThird>\n                                <Card padding=\"1\">\n                                    <VerticalStack>\n                                        <Box\n                                            paddingInlineStart=\"4\"\n                                            paddingInlineEnd=\"4\"\n                                            paddingBlockStart=\"3\"\n                                            paddingBlockEnd=\"3\"\n                                        >\n                                            <VerticalStack gap=\"2\" align=\"start\" inlineAlign=\"start\">\n                                                <HorizontalStack blockAlign=\"center\" align=\"space-between\">\n                                                    <Text variant=\"headingMd\" as=\"h6\">\n                                                        Edit branding\n                                                    </Text>\n                                                </HorizontalStack>\n                                                <HorizontalStack gap=\"2\" blockAlign=\"center\">\n                                                    {currentCheckoutProfile?.isPublished ? (\n                                                        <Badge status=\"success\" progress=\"complete\" size=\"small\">\n                                                            Live\n                                                        </Badge>\n                                                    ) : (\n                                                        <Badge status=\"info\" progress=\"complete\" size=\"small\">\n                                                            Draft\n                                                        </Badge>\n                                                    )}\n                                                    <ButtonSelect\n                                                        plain\n                                                        value={currentCheckoutProfile?.id}\n                                                        onChange={(value) => {\n                                                            setCurrentCheckoutProfile(\n                                                                checkoutProfiles.find(\n                                                                    (profile) => profile?.id === value\n                                                                )\n                                                            );\n                                                        }",
                "filename": "web/client/src/pages/checkout/checkout-branding.page.tsx",
                "start_index": 6634,
                "end_index": 9487,
                "start_line": 176,
                "end_line": 299,
                "max_line": 320,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": ") => {\n    const yesButtonMarkup = (\n        <button\n            className=\"rokt-button\"\n            style={{\n                backgroundColor: config.primaryButtonBackgroundColor,\n                color: config.primaryButtonFontColor,\n                borderColor: config.primaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            Yes please\n        </button>\n    );\n    const noButtonMarkup = (\n        <button\n            className=\"rokt-button\"\n            style={{\n                backgroundColor: config.secondaryButtonBackgroundColor,\n                color: config.secondaryButtonFontColor,\n                borderColor: config.secondaryButtonBorderColor,\n                borderRadius: config.buttonBorderRadius,\n                borderWidth: config.buttonBorderWidth,\n                fontFamily: config.buttonFontFamily,\n            }}\n        >\n            No thanks\n        </button>\n    );\n\n    return (\n        <div className=\"rokt-content preview\">\n            <div className=\"wrapper\" style={{ fontFamily: config.textFontFamily }}>\n                <div className=\"flex column gap-2\" style={{ color: config.paragraphFontColor }}>\n                    <p className=\"text-bold\">Hi, thank you for your purchase:</p>\n                    <div className=\"flex column full-width gap-3\">\n                        <div className=\"flex column full-width\">\n                            <p className=\"text-regular\">",
                "filename": "web/client/src/pages/rokt/rokt.page.tsx",
                "start_index": 59509,
                "end_index": 61086,
                "start_line": 52,
                "end_line": 1292,
                "max_line": 1493,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "<Banner\n                                title=\"Claim your 7-day free trial\"\n                                action={{\n                                    content: 'Claim free trial',\n                                    external: true,\n                                    url: 'https://apps.shopify.com/upcart-cart-builder?source=aftersell-app-upcart-landing-page',\n                                    onAction: () => {\n                                        setShowBanner(false);\n                                    },\n                                }}\n                                onDismiss={() => setShowBanner(false)}\n                            >\n                                Get started with UpCart right away at zero risk.\n                            </Banner>\n                        </Card>\n                    )}\n                </Layout.Section>\n                <Layout.Section fullWidth>\n                    <CustomMediaCard imgSrc={BannerImage}>\n                        <VerticalStack gap=\"2\" inlineAlign=\"start\">\n                            <HorizontalStack gap=\"2\" blockAlign=\"center\">\n                                <img style={{ width: '64px', height: '100%', borderRadius: '6px' }} src={IconImage} />\n                                <VerticalStack>\n                                    <Text as=\"h4\" variant=\"headingMd\">\n                                        UpCart \u2014 Cart Drawer & Upsell\n                                    </Text>\n                                    <Text as=\"span\" variant=\"bodyMd\" color=\"subdued\">\n                                        by AfterSell\n                                    </Text>\n                                </VerticalStack>\n                            </HorizontalStack>\n                            <VerticalStack>\n                                <Reviews title={''} />\n                                <Text as=\"span\" variant=\"bodyMd\" color=\"subdued\">\n                                    5.0 (400+ Reviews)\n                                </Text>\n                            </VerticalStack>\n                            <Text as=\"p\" variant=\"bodyMd\">\n                                UpCart is a great addition to AfterSell. Create an on-brand slide cart that boosts AOV\n                                pre-purchase.\n                            </Text>\n                            <Button\n                                external\n                                url=\"h",
                "filename": "web/client/src/pages/upcart-ad/upcart-ad.page.tsx",
                "start_index": 3655,
                "end_index": 6090,
                "start_line": 103,
                "end_line": 146,
                "max_line": 194,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{replacementUpsellDetailsAreOpen && (\n                                    <VerticalStack gap=\"4\">\n                                        <Card padding=\"0\">\n                                            <Banner title=\"This feature is currently in beta\" status=\"warning\">\n                                                We appreciate your feedback.\n                                            </Banner>\n                                        </Card>\n                                        <VerticalStack gap=\"2\">\n                                            <Text variant=\"bodySm\" as=\"p\">\n                                                You can use this feature to:\n                                            </Text>\n                                            <List>\n                                                <List.Item>upgrade a one-time purchase to a subscription</List.Item>\n                                                <List.Item>upgrade a single item to a bundle or set</List.Item>\n                                                <List.Item>\n                                                    upgrade a less expensive variant to a more expensive variant\n                                                </List.Item>\n                                            </List>\n                                            {offerVersion === 'v2' && !config.replacementUpsell &&",
                "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                "start_index": 20583,
                "end_index": 21963,
                "start_line": 462,
                "end_line": 480,
                "max_line": 1401,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "import { formatCheckoutDiscountRuleName } from '#aftersell/common/checkout-discount-rules';\nimport { Banner, InlineCode, Link, List, Text, VerticalStack } from '@shopify/polaris';\nimport React, { useMemo } from 'react';\nimport { useCheckoutDiscountCodesAllActiveAutomatic } from '../../../../hooks/useCheckoutDiscountCodesAllActiveAutomatic';\nimport { useCheckoutDiscountRules } from '../../../../hooks/useCheckoutDiscountRules';\nimport { useCreateCheckoutDiscountCode } from '../../../../hooks/useCreateCheckoutDiscountCode';\nimport { useDeleteCheckoutDiscountRule } from '../../../../hooks/useDeleteCheckoutDiscountRule';\n//import { openIntercomWithPrefilledMessage } from '../../../../components/expertReview/controller';\n\n/**\n * Technically we could create the discount for the merchant. The reason that we don't is so that we can show all\n * of the information in the banner and allow the merchant to decide if they want to create an automatic discount\n * code or not. We do not want to create a bunch of automatic discount codes in the background without the merchant\n * realizing. The limit of 5 active Function discounts per app and 25 total automatic discount codes per store is\n * fairly low. We would have to limit the number of unique discounts anyways, so I found this UX to be the most clear.\n * It also provides a way to remove the discount from all offers in case they don't want the automatic discount code\n * to be created.\n *\n * This is a Plus-only feature so the merchants are generally more technically skilled and willing to put in more\n * effort to set  up the app. I think that it is important to make the merchant aware of what is happening in this case.\n *\n * Once we can support multiple discounts with a single automatic discount code, we can create the discount for the\n * merchant and don't need this banner. We would need to figure out some way to ensure that the one automatic discount\n * code is not deleted by the merchantthough.\n */",
                "filename": "web/client/src/pages/checkout/checkout-editor/components/widget-list/components/discount-code-required-banner.tsx",
                "start_index": 0,
                "end_index": 1967,
                "start_line": 1,
                "end_line": 25,
                "max_line": 139,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            },
            {
                "code": "{\n        case 'not_triggered':\n            return (\n                <Banner title=\"Order did not match funnel triggers\" status=\"warning\">\n                    <Text as=\"p\">\n                        None of the{' '}\n                        <Text as=\"span\" fontWeight=\"semibold\">\n                            active\n                        </Text>{' '}\n                        funnels had triggers that matched this order. We recommend having one active \"show for all\"\n                        funnel at lowest priority to cover cases like this order.\n                    </Text>\n                </Banner>\n            );\n        case 'not_loaded':\n            return (\n                <Banner title=\"TY page widgets were not loaded\" status=\"warning\">\n                    <Text as=\"p\">\n                        The most probable cause for this issue is that the page was either promptly closed or not opened\n                        at all.\n                    </Text>\n                </Banner>\n            );\n        default:\n            return null;\n    }\n};\n\nconst MaybeEventBanner = ({ event, order }: { event: AfterSellVisibilityEvent; order: Order }) => {\n    const acceptedDiscountCodesNote = (order.note_attributes || []).find(\n        (note) => note.name === 'AfterSell-accepted-discounts'\n    ) || { value: '' };\n    const acceptedDiscountCodes = acceptedDiscountCodesNote.value.split(';');\n    const isAcceptedDiscount = acceptedDiscountCodes.includes(event.payload?.discountCode);\n\n    switch (event.type) {\n        case 'tyPage.page.upsellTimeEnd':\n            return <Banner status=\"info\">The upsell timer expired \u231b</Banner>;\n        case 'tyPage.page.acceptDiscount':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">Congrats! The popup discount was accepted \ud83c\udf89</Banner>\n            ) : (\n                <Banner status=\"info\">The popup discount was accepted, but not used</Banner>\n            );\n        case 'tyPage.page.declineDiscount':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">\n                    Congrats! The popup discount was declined, but manually accepted afterwards \ud83c\udf89\n                </Banner>\n            ) : null;\n        case 'tyPage.page.acceptUpsell':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">Congrats! Your upsell offer was accepted \ud83c\udf89</Banner>\n            ) : (\n                <Banner status=\"info\">\n                    The customer clicked accept on the upsell offer, but did not complete the second checkout\n                </Banner>\n            );\n        case 'tyPage.page.error':\n            return (\n                <Banner status=\"critical\" title=\"Unexpected error occurred\">\n                    We've been notified of this error and are actively investigating. If you'd like more information,\n                    please reach out to customer support.\n                </Banner>\n            );\n        default:\n            return null;\n    }\n};\n\nfuncti",
                "filename": "web/client/src/pages/order-browser/components/timeline-ty-page/timeline-ty-page.tsx",
                "start_index": 1170,
                "end_index": 4172,
                "start_line": 1,
                "end_line": 97,
                "max_line": 162,
                "git_instance": "github",
                "repo_name": "testbed/aftersell",
                "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
            }
        ],
        "solution_task": {
            "structured_resp": "Understand:\n- The feature request involves updating the styling of a version upgrade banner within the checkout editor of a web application.\n- Specific changes include adjusting font sizes, updating text content, and ensuring consistent spacing between UI elements.\n\nPlan:\n- Locate the relevant component file for the version upgrade banner.\n- Update the font size to match the app's body font size.\n- Modify the text content for the title, body, and button as specified.\n- Adjust the spacing to ensure consistency with adjacent UI elements.\n\nIdentify Tools:\n- TypeScript and React for modifying the component.\n- CSS or styled-components for styling adjustments.\n- Shopify CLI for testing the changes in a Shopify environment.\n\nImplement:\n- Locate the Banner component within the checkout editor (likely in `checkout-editor.tsx` or a similar file).\n- Update the Banner component as follows:\n\n```tsx\n// Assuming the Banner component is similar to the ActionNeededBanner component\nimport { Banner } from '@shopify/polaris';\n\nconst VersionUpgradeBanner = () => {\n  const bodyFontSize = 'appBodyFontSize'; // Replace with actual font size variable\n\n  return (\n    <Banner\n      title=\"Update checkout version\"\n      action={{ content: \"Update checkout\" }}\n      status=\"info\"\n    >\n      <p style={{ fontSize: bodyFontSize }}>\n        A new checkout version is available. Update to access new triggers, improved split testing, automatic upsells, and more.\n      </p>\n    </Banner>\n  );\n};\n\n// Adjust CSS for spacing if necessary\n// Assuming there is a CSS or styled-components file associated with the component\n.bannerSpacing {\n  margin-bottom: spacingValue; // Replace with actual spacing variable consistent with the rest of the app\n}\n\n// Apply the class to the Banner component\n<Banner className=\"bannerSpacing\" ... />\n```\n\n- Ensure that the font size variable (`appBodyFontSize`) and spacing value (`spacingValue`) match the rest of the application.\n- Test the changes locally and then in a Shopify environment using Shopify CLI.\n- Create a pull request with the changes for review, referencing the ticket and including before/after screenshots if possible.",
            "response": "To enhance the user experience within the checkout editor of a web application, specific updates to the version upgrade banner's styling are required. These updates aim to improve readability and visual consistency by adjusting font sizes, updating text content, and standardizing spacing between user interface elements. The following steps outline the necessary actions to implement these improvements:\n\n- Identify and open the Banner component file within the checkout editor, which is likely named `checkout-editor.tsx` or similarly.\n- Modify the Banner component to reflect the new design specifications:\n  - Set the font size to align with the application's body font size.\n  - Update the banner's title to \"Update checkout version.\"\n  - Change the banner's body text to \"A new checkout version is available. Update to access new triggers, improved split testing, automatic upsells, and more.\"\n  - Adjust the call-to-action button text to \"Update checkout.\"\n- Apply consistent spacing by adding a CSS class for margin adjustments:\n  ```css\n  .bannerSpacing {\n    margin-bottom: spacingValue; /* Replace with the actual spacing variable */\n  }\n  ```\n- Incorporate the new CSS class into the Banner component to ensure the spacing is consistent with adjacent UI elements.\n- Test the updated banner locally to verify the changes, and then proceed to test in a Shopify environment using the Shopify CLI.\n- Once testing is successful, prepare a pull request for the changes, ensuring to include references to the feature request and visual documentation such as before-and-after screenshots for a clear comparison."
        },
        "snippet_processor_task": {
            "web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The provided snippet includes a Banner component with text content that may need to be updated for the version upgrade banner. It also shows the structure of the checkout editor page where the banner is located.",
                        "snippet": {
                            "code": "<Banner\n                                            status=\"warning\"\n                                            title={'\ud83d\ude80 Faster, Smoother, & Better Checkout Editor'}\n                                            action={{\n                                                content: 'Update Now',\n                                                loading: updateVersionLoading,\n                                                onAction: () => {\n                                                    updateCheckoutVersion('V2');\n                                                },\n                                            }}\n                                        >\n                                            <Text variant=\"bodyLg\" as=\"p\">\n                                                Explore our upgraded checkout editor. Discover new triggers, AI upsells,\n                                                multiple widget configurations, split testing and other customization\n                                                features. Upgrading is fully reversible and will automatically transfer\n                                                your current setup.\n                                            </Text>\n                                        </Banner>\n                                    )}\n                                    {currentSplitTestTab === 'A' || !currentSplitTestTab\n                                        ? widgetsVersionA\n                                        : widgetsVersionB}\n                                </VerticalStack>\n                            )}\n                        </div>\n                        <div className={styles.preview}>\n                            <div>\n                                <Preview widget={selectedWidgetData} widgetType={previewSelection?.type} />\n                                {selectedTab === 'rewardsWidget' && (\n                                    <div style={{ marginTop: '20px' }}>\n                                        <Banner title=\"\" status=\"info\">\n                                            The rewards bar widget is intended to be used with one or more upsell\n                                            widgets. If a customer sees that they're $10 away from free shipping, they\n                                            might want to accept one of your upsell products to get there!\n                                        </Banner>\n                                        <Banner\n                                            title=\"Create discount\"\n                                            action={{\n                                                content: 'Create discount',",
                            "filename": "web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx",
                            "start_index": 10154,
                            "end_index": 12821,
                            "start_line": 236,
                            "end_line": 274,
                            "max_line": 306,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "The snippet includes a Banner component which may need text content updates for the version upgrade banner, relevant to the rewording task."
                }
            ],
            "web/client/src/pages/funnels/components/product-information-widget-settings.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippet shows a part of the UI structure involving a banner component, which can be relevant for understanding how to modify the styling and spacing for the version upgrade banner in the checkout editor.",
                        "snippet": {
                            "code": "{replacementUpsellDetailsAreOpen && (\n                                    <VerticalStack gap=\"4\">\n                                        <Card padding=\"0\">\n                                            <Banner title=\"This feature is currently in beta\" status=\"warning\">\n                                                We appreciate your feedback.\n                                            </Banner>\n                                        </Card>\n                                        <VerticalStack gap=\"2\">\n                                            <Text variant=\"bodySm\" as=\"p\">\n                                                You can use this feature to:\n                                            </Text>\n                                            <List>\n                                                <List.Item>upgrade a one-time purchase to a subscription</List.Item>\n                                                <List.Item>upgrade a single item to a bundle or set</List.Item>\n                                                <List.Item>\n                                                    upgrade a less expensive variant to a more expensive variant\n                                                </List.Item>\n                                            </List>\n                                            {offerVersion === 'v2' && !config.replacementUpsell &&",
                            "filename": "web/client/src/pages/funnels/components/product-information-widget-settings.tsx",
                            "start_index": 20583,
                            "end_index": 21963,
                            "start_line": 462,
                            "end_line": 480,
                            "max_line": 1401,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "This snippet shows the UI structure involving a banner component, which is relevant for modifying the styling and spacing for the version upgrade banner."
                }
            ],
            "web/client/src/shared-components/action-needed-banner.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The provided snippet is a React component that renders an 'ActionNeededBanner' with specific content and actions based on user and plan details.",
                        "snippet": {
                            "code": "import { AfterSellPaidFeature } from '#aftersell/common/billing';\nimport { Banner, Text } from '@shopify/polaris';\nimport { useCurrentUser } from 'src/providers/UserProvider';\nimport { getMixpanel } from 'src/tracking/mixpnl';\n\nexport const ActionNeededBanner = () => {\n    const {\n        currentUser: user,\n        isPostPurchaseAppInUse,\n        isLoading: userInformationLoading,\n        refetch: refetchUserInformation,\n        plan,\n    } = useCurrentUser();\n    const { myshopify_domain } = user;\n\n    const hasPostPurchaseAccess = plan.planDetails.features.includes(AfterSellPaidFeature.POST_PURCHASE);\n\n    if (isPostPurchaseAppInUse || !hasPostPurchaseAccess) return null;\n    return (\n        <Banner\n            title=\"Action needed\"\n            status=\"warning\"\n            action={{\n                content: 'Enable setting',\n                // id of the section we're referring to is #additionalscripts\n                url: `https://${myshopify_domain}/admin/settings/checkout#additionalscripts`,\n                external: true,\n                onAction: () => {\n                    getMixpanel().track('Selected App Enable');\n                },\n                loading: userInformationLoading,\n            }}\n            secondaryAction={\n                userInformationLoading\n                    ? undefined\n                    : {\n                        content: 'Refresh',\n                        onAction: () => {\n                            getMixpanel().track('Selected App Check');\n                            refetchUserInformation();\n                        },\n                    }\n            }\n        >\n            <Text variant=\"bodyMd\" as=\"p\">\n                Make sure to select \"AfterSell\" in the Shopify checkout settings under the \"Post-purchase page\" section.\n                This is required to show AfterSell offers to your customers.\n            </Text>\n        </Banner>\n    );\n};",
                            "filename": "web/client/src/shared-components/action-needed-banner.tsx",
                            "start_index": 0,
                            "end_index": 1922,
                            "start_line": 1,
                            "end_line": 51,
                            "max_line": 51,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "It is a React component that renders an 'ActionNeededBanner' with content and actions, which might need updates based on the issue description."
                }
            ],
            "web/client/src/pages/funnels/funnels-steps.page.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The provided snippet showcases a Banner component with title, action, secondaryAction, and body text. It can serve as a reference for implementing a similar styled upgrade banner in the checkout editor.",
                        "snippet": {
                            "code": "}\n                        </VerticalStack>\n                        <Banner\n                            title=\"Enable AfterSell UTM Triggers in theme\"\n                            action={{ content: 'View theme settings' }}\n                            secondaryAction={{ content: 'Re-check if enabled' }}\n                            status=\"warning\"\n                        >\n                            <p>\n                                Before using UTM parameter triggers, you must enable the AfterSell UTM Triggers app\n                                embed block in your theme settings. Click the button below to go to your theme settings\n                                page. <strong>Make sure to click \"Save\" on the settings page.</strong>\n                            </p>\n                        </Banner>\n                    </VerticalStack>\n                )",
                            "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                            "start_index": 63646,
                            "end_index": 64512,
                            "start_line": 23,
                            "end_line": 1780,
                            "max_line": 2225,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Showcases a Banner component that can serve as a reference for implementing the styled upgrade banner in the checkout editor."
                },
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The provided code snippet shows the structure of the components in the checkout editor. It includes banners, cards, text elements, buttons, and stack layouts, which can be relevant for understanding how to implement the styling changes for the version upgrade banner.",
                        "snippet": {
                            "code": "return hasTyPageExtensibilityAccess ? (\n        <VerticalStack gap=\"2\">\n            <Banner title=\"Thank you page extensibility\">\n                <p>\n                    Your store is eligible to use Shopify UI extensions on the thank you and order status pages.\n                    Extensions will eventually replace script tags to provide a more unified experience for customers.\n                    AfterSell supports both script tags and extensions during the transition period. Your Shopify\n                    checkout settings will determine whether script tags or extensions are used. AfterSell currently\n                    supports more features for stores using scripts.\n                </p>\n            </Banner>\n            <Card>\n                <HorizontalStack align=\"space-between\">\n                    <VerticalStack gap=\"2\">\n                        <Text variant=\"headingMd\" as=\"h6\">\n                            Customize thank you page\n                        </Text>\n                        <Text variant=\"bodyLg\" as=\"p\">\n                            Drag and drop widgets to create a beautiful thank you page that converts.\n                        </Text>\n                    </VerticalStack>\n                    <VerticalStack align=\"center\" gap=\"2\">\n                        <Button onClick={handleEditScriptTagTyPage}>Edit scripts page</Button>\n                        <Button plain onClick={handleEditExtensionTyPage}>\n                            Edit extensions\n                        </Button>\n                    </VerticalStack>\n                </HorizontalStack>\n            </Card>\n            <RoktFunnelSettingsCard funnelId={funnelId} />\n        </VerticalStack>\n    ) : (\n        <VerticalStack gap=\"2\">\n            <Card>\n                <HorizontalStack align=\"space-between\">\n                    <VerticalStack gap=\"2\">\n                        <Text variant=\"headingMd\" as=\"h6\">\n                            Customize thank you page\n                        </Text>\n                        <Text variant=\"bodyLg\" as=\"p\">\n                            Drag and drop widgets to create a beautiful thank you page that converts.\n                        </Text>\n                    </VerticalStack>\n                    <VerticalStack align=\"center\">\n                        <Button onClick={handleEditScriptTagTyPage}>Edit page</Button>\n                    </VerticalStack>\n                </HorizontalStack>\n            </Card>\n            <RoktFunnelSettingsCard funnelId={funnelId} />\n        </VerticalStack>\n    );\n}",
                            "filename": "web/client/src/pages/funnels/funnels-steps.page.tsx",
                            "start_index": 29617,
                            "end_index": 32167,
                            "start_line": 758,
                            "end_line": 2221,
                            "max_line": 2225,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Shows the structure of components including banners and cards, relevant for implementing styling changes for the version upgrade banner."
                }
            ],
            "web/client/src/pages/checkout/checkout-editor-v2.page.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The provided code snippet shows the structure of a banner component in the checkout editor page. It includes a title, action button, and body text. This can serve as a reference for understanding the current implementation and potentially making changes for the version upgrade banner.",
                        "snippet": {
                            "code": "<Banner\n                                        title={'Transfer Your Settings!'}\n                                        action={{\n                                            content: 'Transfer Now',\n                                            onAction() {\n                                                transferSettings();\n                                            },\n                                            loading: transferring,\n                                        }}\n                                        status=\"info\"\n                                        hideIcon={true}\n                                        onDismiss={() => {\n                                            setShowTransferBanner(false);\n                                        }}\n                                    >\n                                        <Text as=\"p\" variant=\"bodyMd\">\n                                            Transfer your settings from the old editor to the new editor with the click\n                                            of \"Transfer Now\" button.\n                                        </Text>\n                                        <Text as=\"p\" variant=\"bodyMd\">\n                                            \u26a0\ufe0f Important: If you have any current widget customizations, they will be\n                                            rewritten.\n                                        </Text>\n                                    </Banner>\n                                )}\n\n                                <WidgetEditorWithConfigurations\n                                    widgetType={focusedWidget.tab}\n                                    dynamicList={configurationDynamicLists[focusedWidget.tab]}\n                                    focusedWidget={focusedWidget}\n                                    setFocusedWidget={setFocusedWidget}\n                                    fullProducts={fullProducts}\n                                    setFullProducts={setFullProducts}\n                                />\n                            </VerticalStack>\n                        )}\n                    </div>\n                    <div className={styles.preview}>\n                        <Preview\n                            widget={\n                                configurationDynamicLists?.[focusedWidget.tab]?.value?.[focusedWidget.configuration]\n                                    ?.configurations?.[focusedWidget.index ?? 0]\n                            }\n                            widgetType={focusedWidget.tab}\n                            fullProducts={fullProducts}\n                            splitTestVersion={focusedWidget.splitTestVersion}\n                        />\n                        <div className={styles.previewBanner}>\n                            <Card>\n                                <VerticalStack gap=\"2\">",
                            "filename": "web/client/src/pages/checkout/checkout-editor-v2.page.tsx",
                            "start_index": 13200,
                            "end_index": 16046,
                            "start_line": 310,
                            "end_line": 364,
                            "max_line": 612,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Shows the structure of a banner component including title, action button, and body text, serving as a reference for the current implementation and potential changes."
                }
            ],
            "web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The snippet shows how font sizes and configurations are adjusted for text and image widgets in the project, which can be relevant for updating the font size in the upgrade banner.",
                        "snippet": {
                            "code": "if (isTextImageWidget(template)) {\n                    const config = template.config;\n                    const heading = config.heading;\n                    config.heading = {\n                        config: {\n                            fontSize: heading?.config?.fontSize ?? UPSELL_TEXT_SIZES[4].value,\n                            appearance: heading?.config?.appearance ?? COLOR_OPTIONS[0].value,\n                        },\n                        value: heading?.value ?? '',\n                    };\n\n                    const text = config.text;\n                    config.text = {\n                        config: {\n                            fontSize: text?.config?.fontSize ?? UPSELL_TEXT_SIZES[2].value,\n                            appearance: text?.config?.appearance ?? COLOR_OPTIONS[0].value,\n                        },\n                        value: text?.value ?? '',\n                    };\n\n                    config.position = config.position || ('left' as Alignment);\n                    config.verticalAlignment = config.verticalAlignment || ('leading' as VerticalAlignment);\n                    config.imageSize = setDefaultNumberValue(config.imageSize, 350);\n                    config.topPadding = setDefaultNumberValue(config.topPadding, 2);\n                    config.bottomPadding = setDefaultNumberValue(config.bottomPadding, 2);\n                }\n\n                if (isTimerWidget(template)) {\n                    const config = template.config;\n                    config.topPadding = setDefaultNumberValue(config.topPadding, 2);\n                    config.bottomPadding = setDefaultNumberValue(config.bottomPadding, 2);\n                    config.minutes = config.minutes ?? 10;\n                    config.heading =\n                        config.heading ??\n                        `<p style=\"text-align:center;\"><span style=\"color: var(--x-pp-default-color-text,inherit);background-color: var(--x-pp-color-surface-secondary);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\", sans-serif;\">Your order is confirmed but you can still add the following for a limited time</span><span style=\"font-size: 18px;\"> </span><a href=\"undefined\" class=\"wysiwyg-mention\" data-mention data-value=\"timer}\"><span style=\"font-size: 18px;\"><strong>{timer}</strong></span></a><span style=\"font-size: 18px;\"><strong> </strong></span></p>`;\n                    config.text = config.text ?? '';\n                    config.textColor = config.textColor ?? UPSELL_COLOR_NAMES.BLACK;\n                    config.backgroundColor = config.backgroundColor ?? UPSELL_COLOR_NAMES.RED;\n                    config.hideBanner = config.hideBanner ?? false;\n                }\n\n                return template;\n            }",
                            "filename": "web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts",
                            "start_index": 12701,
                            "end_index": 15540,
                            "start_line": 225,
                            "end_line": 267,
                            "max_line": 270,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Shows how font sizes and configurations are adjusted, which is relevant for updating the font size in the upgrade banner."
                }
            ],
            "web/client/src/pages/funnels/components/funnel-editor-banners.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "Code snippets show existing banner components in the project, providing a reference for implementing the styling changes for the version upgrade banner.",
                        "snippet": {
                            "code": "\"2\">\n                    <Banner\n                        title={'AfterSell Branding'}\n                        status=\"info\"\n                        onDismiss={() => setShow(false)}\n                        action={{\n                            content: 'Remove branding',\n                            onAction: () =>\n                                openChatWithPrefilledMessage(\n                                    'Hi, I want to remove AfterSell branding from my 1-Click Upsells!'\n                                ),\n                        }}\n                    >\n                        If you'd like to remove the \"Powered by AfterSell\" text, let us know by clicking the button\n                        below and we can remove it for you!\n                    </Banner>\n                </Box>\n            )}\n        </>\n    );\n};\n\nconst EmptyCollectionBanner: FC<{ products: ProductToShow[] }> = ({ products }) => {\n    const [show, setShow] = useState(true);\n    const isEmptyCollection = useMemo(() => products.every(({ product }) => !product.collectionId), [products]);\n\n    if (!show || !isEmptyCollection) return null;\n\n    return (\n        <Box padding=\"2\">\n            <Banner title={'Empty collection'} status=\"warning\" onDismiss={() => setShow(false)}>\n                Selected collection is empty. The products are not visible in the preview or on the real one-click page.\n            </Banner>\n        </Box>\n    );\n};\n\nconst PartialCollectionBanner: FC<{ products: ProductToShow[]; unpreparedProducts: ExtendedUnpreparedProduct[] }> = ({\n    products,\n    unpreparedProducts,\n}) => {\n    const [show, setShow] = useState(true);\n\n    const nReplacedProducts = useMemo(\n        () => products.filter(({ product }) => product.productType === OFFER_PRODUCT_TYPES.SPECIFIC).length,\n        [products]\n    );\n    const nProductsSelected = unpreparedProducts.length;\n    // to check that collection is not empty\n    const hasReplacedProducts = nReplacedProducts > 0;\n    const collectionHasEnoughProducts = nReplacedProducts >= nProductsSelected;\n\n    if (!show || !hasReplacedProducts || collectionHasEnoughProducts) return null;\n\n    return (\n        <Box padding=\"2\">\n            <Banner title={'Small Collection'} status=\"info\" onDismiss={() => setShow(false)}>\n                {'The selected number of products for this offer is {nProductsSelected}, but the current collection only has {nReplacedProducts}. Only the available number of products from the collection will be visible in the preview and on the real one-",
                            "filename": "web/client/src/pages/funnels/components/funnel-editor-banners.tsx",
                            "start_index": 3540,
                            "end_index": 6066,
                            "start_line": 51,
                            "end_line": 137,
                            "max_line": 332,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Provides a reference for implementing the styling changes for the version upgrade banner."
                }
            ],
            "web/client/src/pages/order-browser/components/timeline-ty-page/timeline-ty-page.tsx": [
                {
                    "chunk": {
                        "score": 5,
                        "takeaways": "The snippet includes components like Banners and Text elements used for displaying messages. It also shows conditional rendering based on event types, which could be relevant for updating the version upgrade banner in the checkout editor.",
                        "snippet": {
                            "code": "{\n        case 'not_triggered':\n            return (\n                <Banner title=\"Order did not match funnel triggers\" status=\"warning\">\n                    <Text as=\"p\">\n                        None of the{' '}\n                        <Text as=\"span\" fontWeight=\"semibold\">\n                            active\n                        </Text>{' '}\n                        funnels had triggers that matched this order. We recommend having one active \"show for all\"\n                        funnel at lowest priority to cover cases like this order.\n                    </Text>\n                </Banner>\n            );\n        case 'not_loaded':\n            return (\n                <Banner title=\"TY page widgets were not loaded\" status=\"warning\">\n                    <Text as=\"p\">\n                        The most probable cause for this issue is that the page was either promptly closed or not opened\n                        at all.\n                    </Text>\n                </Banner>\n            );\n        default:\n            return null;\n    }\n};\n\nconst MaybeEventBanner = ({ event, order }: { event: AfterSellVisibilityEvent; order: Order }) => {\n    const acceptedDiscountCodesNote = (order.note_attributes || []).find(\n        (note) => note.name === 'AfterSell-accepted-discounts'\n    ) || { value: '' };\n    const acceptedDiscountCodes = acceptedDiscountCodesNote.value.split(';');\n    const isAcceptedDiscount = acceptedDiscountCodes.includes(event.payload?.discountCode);\n\n    switch (event.type) {\n        case 'tyPage.page.upsellTimeEnd':\n            return <Banner status=\"info\">The upsell timer expired \u231b</Banner>;\n        case 'tyPage.page.acceptDiscount':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">Congrats! The popup discount was accepted \ud83c\udf89</Banner>\n            ) : (\n                <Banner status=\"info\">The popup discount was accepted, but not used</Banner>\n            );\n        case 'tyPage.page.declineDiscount':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">\n                    Congrats! The popup discount was declined, but manually accepted afterwards \ud83c\udf89\n                </Banner>\n            ) : null;\n        case 'tyPage.page.acceptUpsell':\n            return isAcceptedDiscount ? (\n                <Banner status=\"success\">Congrats! Your upsell offer was accepted \ud83c\udf89</Banner>\n            ) : (\n                <Banner status=\"info\">\n                    The customer clicked accept on the upsell offer, but did not complete the second checkout\n                </Banner>\n            );\n        case 'tyPage.page.error':\n            return (\n                <Banner status=\"critical\" title=\"Unexpected error occurred\">\n                    We've been notified of this error and are actively investigating. If you'd like more information,\n                    please reach out to customer support.\n                </Banner>\n            );\n        default:\n            return null;\n    }\n};\n\nfuncti",
                            "filename": "web/client/src/pages/order-browser/components/timeline-ty-page/timeline-ty-page.tsx",
                            "start_index": 1170,
                            "end_index": 4172,
                            "start_line": 1,
                            "end_line": 97,
                            "max_line": 162,
                            "git_instance": "github",
                            "repo_name": "testbed/aftersell",
                            "sha": "2bef1cab3382ad4ba63493ce24d3793c96b2e103"
                        },
                        "section": "code_snippets"
                    },
                    "reason_for_reviewing": "Includes components like Banners and Text elements that could be relevant for updating the version upgrade banner in the checkout editor."
                }
            ]
        },
        "bouncer_response": {
            "score": 3,
            "criteria": "The RESPONSE provides some actionable advice but is incomplete or partially relevant. It should score between 4 and 6.",
            "supporting_evidence": "The RESPONSE offers a structured approach to addressing the feature request, including steps to modify the Banner component, update text content, and adjust spacing. It also provides a CSS snippet for margin adjustments and suggests testing the changes locally and in a Shopify environment. However, the RESPONSE fails to address the specific request to match the casing of the title and button with the rest of the app and to reduce the amount of content to convey the message more clearly. Additionally, the RESPONSE includes a list of code snippets to check, which are not directly relevant to the feature request and seem to be placeholders or examples rather than actionable guidance. The RESPONSE also does not provide a clear action for ensuring the spacing between the banner and the next card is equal to the spacing between the two cards below, as requested in the PROMPT.",
            "clarification_questions": "NONE"
        },
        "end_time": 1714338603.4194822,
        "result": "Doesn't seem like we have fully grasped all the specifics of this ticket \ud83d\ude41.                   But we've outlined some ideas that might help you get started:\n\nTo enhance the user experience within the checkout editor of a web application, specific updates to the version upgrade banner's styling are required. These updates aim to improve readability and visual consistency by adjusting font sizes, updating text content, and standardizing spacing between user interface elements. The following steps outline the necessary actions to implement these improvements:\n\n- Identify and open the Banner component file within the checkout editor, which is likely named `checkout-editor.tsx` or similarly.\n- Modify the Banner component to reflect the new design specifications:\n  - Set the font size to align with the application's body font size.\n  - Update the banner's title to \"Update checkout version.\"\n  - Change the banner's body text to \"A new checkout version is available. Update to access new triggers, improved split testing, automatic upsells, and more.\"\n  - Adjust the call-to-action button text to \"Update checkout.\"\n- Apply consistent spacing by adding a CSS class for margin adjustments:\n  ```css\n  .bannerSpacing {\n    margin-bottom: spacingValue; /* Replace with the actual spacing variable */\n  }\n  ```\n- Incorporate the new CSS class into the Banner component to ensure the spacing is consistent with adjacent UI elements.\n- Test the updated banner locally to verify the changes, and then proceed to test in a Shopify environment using the Shopify CLI.\n- Once testing is successful, prepare a pull request for the changes, ensuring to include references to the feature request and visual documentation such as before-and-after screenshots for a clear comparison.\n\n### Code snippets to check\n\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout) \u2192 [checkout-editor](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor)- [Lines 236 - 274](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor/checkout-editor.tsx#L236-L274)\n\n The snippet includes a Banner component which may need text content updates for the version upgrade banner, relevant to the rewording task.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [funnels](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/components)- [Lines 462 - 480](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/components/product-information-widget-settings.tsx#L462-L480)\n\n This snippet shows the UI structure involving a banner component, which is relevant for modifying the styling and spacing for the version upgrade banner.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [shared-components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/shared-components)- [Lines 1 - 51](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/shared-components/action-needed-banner.tsx#L1-L51)\n\n It is a React component that renders an 'ActionNeededBanner' with content and actions, which might need updates based on the issue description.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [funnels](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels)- [Lines 23 - 1780](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/funnels-steps.page.tsx#L23-L1780)\n\n Showcases a Banner component that can serve as a reference for implementing the styled upgrade banner in the checkout editor. \n\n\n   - [Lines 758 - 2221](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/funnels-steps.page.tsx#L758-L2221)\n\n Shows the structure of components including banners and cards, relevant for implementing styling changes for the version upgrade banner.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [checkout](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout)- [Lines 310 - 364](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/checkout/checkout-editor-v2.page.tsx#L310-L364)\n\n Shows the structure of a banner component including title, action button, and body text, serving as a reference for the current implementation and potential changes.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [funnels](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels) \u2192 [hooks](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/hooks)- [Lines 225 - 267](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/hooks/useFilledWithDefaultValuesTemplates.ts#L225-L267)\n\n Shows how font sizes and configurations are adjusted, which is relevant for updating the font size in the upgrade banner.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [funnels](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/components)- [Lines 51 - 137](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/funnels/components/funnel-editor-banners.tsx#L51-L137)\n\n Provides a reference for implementing the styling changes for the version upgrade banner.\n-  \u2192 [web](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web) \u2192 [client](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client) \u2192 [src](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src) \u2192 [pages](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages) \u2192 [order-browser](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/order-browser) \u2192 [components](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/order-browser/components) \u2192 [timeline-ty-page](https://github.com/testbed/aftersell/tree/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/order-browser/components/timeline-ty-page)- [Lines 1 - 97](https://github.com/testbed/aftersell/blob/2bef1cab3382ad4ba63493ce24d3793c96b2e103/web/client/src/pages/order-browser/components/timeline-ty-page/timeline-ty-page.tsx#L1-L97)\n\n Includes components like Banners and Text elements that could be relevant for updating the version upgrade banner in the checkout editor."
    }
}